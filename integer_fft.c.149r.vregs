
;; Function fix_fft (fix_fft)

(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 fr+0 S4 A32])
        (reg:SI 0 r0 [ fr ])) integer_fft.c:88 625 {*arm_movsi_vfp}
     (nil))

(insn 3 2 4 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 fi+0 S4 A32])
        (reg:SI 1 r1 [ fi ])) integer_fft.c:88 625 {*arm_movsi_vfp}
     (nil))

(insn 4 3 5 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])
        (reg:SI 2 r2 [ m ])) integer_fft.c:88 625 {*arm_movsi_vfp}
     (nil))

(insn 5 4 6 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -72 [0xffffffffffffffb8])) [0 inverse+0 S4 A32])
        (reg:SI 3 r3 [ inverse ])) integer_fft.c:88 625 {*arm_movsi_vfp}
     (nil))

(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 8 6 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 3 (set (reg:SI 239)
        (const_int 1 [0x1])) integer_fft.c:92 625 {*arm_movsi_vfp}
     (nil))

(insn 10 9 11 3 (set (reg:SI 240)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:92 625 {*arm_movsi_vfp}
     (nil))

(insn 11 10 12 3 (set (reg:SI 241)
        (ashift:SI (reg:SI 239)
            (reg:SI 240))) integer_fft.c:92 119 {*arm_shiftsi3}
     (nil))

(insn 12 11 13 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 n+0 S4 A32])
        (reg:SI 241)) integer_fft.c:92 625 {*arm_movsi_vfp}
     (nil))

(insn 13 12 14 3 (set (reg:SI 242)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 n+0 S4 A32])) integer_fft.c:94 625 {*arm_movsi_vfp}
     (nil))

(insn 14 13 15 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 242)
            (const_int 1024 [0x400]))) integer_fft.c:94 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) integer_fft.c:94 211 {*arm_cond_branch}
     (nil)
 -> 20)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 (set (reg:SI 134 [ D.1489 ])
        (const_int -1 [0xffffffffffffffff])) integer_fft.c:95 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 18 17 19 4 (set (pc)
        (label_ref 435)) integer_fft.c:95 223 {*arm_jump}
     (nil)
 -> 435)
;; End of basic block 4 -> ( 43)

;; Succ edge  43

(barrier 19 18 20)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 20 19 21 5 2 "" [1 uses])

(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 5 (set (reg:SI 243)
        (const_int 0 [0])) integer_fft.c:97 625 {*arm_movsi_vfp}
     (nil))

(insn 23 22 24 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 mr+0 S4 A32])
        (reg:SI 243)) integer_fft.c:97 625 {*arm_movsi_vfp}
     (nil))

(insn 24 23 25 5 (set (reg:SI 244)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 n+0 S4 A32])) integer_fft.c:98 625 {*arm_movsi_vfp}
     (nil))

(insn 25 24 26 5 (set (reg:SI 245)
        (plus:SI (reg:SI 244)
            (const_int -1 [0xffffffffffffffff]))) integer_fft.c:98 4 {*arm_addsi3}
     (nil))

(insn 26 25 27 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -44 [0xffffffffffffffd4])) [0 nn+0 S4 A32])
        (reg:SI 245)) integer_fft.c:98 625 {*arm_movsi_vfp}
     (nil))

(insn 27 26 28 5 (set (reg:SI 246)
        (const_int 0 [0])) integer_fft.c:99 625 {*arm_movsi_vfp}
     (nil))

(insn 28 27 29 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 scale+0 S4 A32])
        (reg:SI 246)) integer_fft.c:99 625 {*arm_movsi_vfp}
     (nil))

(insn 29 28 30 5 (set (reg:SI 247)
        (const_int 1 [0x1])) integer_fft.c:102 625 {*arm_movsi_vfp}
     (nil))

(insn 30 29 31 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])
        (reg:SI 247)) integer_fft.c:102 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 31 30 32 5 (set (pc)
        (label_ref 113)) integer_fft.c:102 223 {*arm_jump}
     (nil)
 -> 113)
;; End of basic block 5 -> ( 12)

;; Succ edge  12

(barrier 32 31 115)

;; Start of basic block ( 12) -> 6
;; Pred edge  12
(code_label 115 32 33 6 8 "" [1 uses])

(note 33 115 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 (set (reg:SI 248)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 n+0 S4 A32])) integer_fft.c:103 625 {*arm_movsi_vfp}
     (nil))

(insn 35 34 43 6 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 l+0 S4 A32])
        (reg:SI 248)) integer_fft.c:103 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 6 7) -> 7
;; Pred edge  6 (fallthru)
;; Pred edge  7
(code_label 43 35 36 7 5 "" [1 uses])

(note 36 43 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 7 (set (reg:SI 249)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 l+0 S4 A32])) integer_fft.c:105 625 {*arm_movsi_vfp}
     (nil))

(insn 38 37 39 7 (set (reg:SI 250)
        (ashiftrt:SI (reg:SI 249)
            (const_int 1 [0x1]))) integer_fft.c:105 119 {*arm_shiftsi3}
     (nil))

(insn 39 38 40 7 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 l+0 S4 A32])
        (reg:SI 250)) integer_fft.c:105 625 {*arm_movsi_vfp}
     (nil))

(insn 40 39 41 7 (set (reg:SI 251)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 mr+0 S4 A32])) integer_fft.c:106 625 {*arm_movsi_vfp}
     (nil))

(insn 41 40 42 7 (set (reg:SI 252)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 l+0 S4 A32])) integer_fft.c:106 625 {*arm_movsi_vfp}
     (nil))

(insn 42 41 44 7 (set (reg:SI 135 [ D.1490 ])
        (plus:SI (reg:SI 251)
            (reg:SI 252))) integer_fft.c:106 4 {*arm_addsi3}
     (nil))

(insn 44 42 45 7 (set (reg:SI 253)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -44 [0xffffffffffffffd4])) [0 nn+0 S4 A32])) integer_fft.c:106 625 {*arm_movsi_vfp}
     (nil))

(insn 45 44 46 7 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.1490 ])
            (reg:SI 253))) integer_fft.c:106 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) integer_fft.c:106 211 {*arm_cond_branch}
     (nil)
 -> 43)
;; End of basic block 7 -> ( 7 8)

;; Succ edge  7
;; Succ edge  8 (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 8 (set (reg:SI 254)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 l+0 S4 A32])) integer_fft.c:107 625 {*arm_movsi_vfp}
     (nil))

(insn 49 48 50 8 (set (reg:SI 136 [ D.1491 ])
        (plus:SI (reg:SI 254)
            (const_int -1 [0xffffffffffffffff]))) integer_fft.c:107 4 {*arm_addsi3}
     (nil))

(insn 50 49 51 8 (set (reg:SI 255)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 mr+0 S4 A32])) integer_fft.c:107 625 {*arm_movsi_vfp}
     (nil))

(insn 51 50 52 8 (set (reg:SI 137 [ D.1492 ])
        (and:SI (reg:SI 136 [ D.1491 ])
            (reg:SI 255))) integer_fft.c:107 69 {*arm_andsi3_insn}
     (nil))

(insn 52 51 53 8 (set (reg:SI 256)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 l+0 S4 A32])) integer_fft.c:107 625 {*arm_movsi_vfp}
     (nil))

(insn 53 52 54 8 (set (reg:SI 257)
        (plus:SI (reg:SI 137 [ D.1492 ])
            (reg:SI 256))) integer_fft.c:107 4 {*arm_addsi3}
     (nil))

(insn 54 53 55 8 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 mr+0 S4 A32])
        (reg:SI 257)) integer_fft.c:107 625 {*arm_movsi_vfp}
     (nil))

(insn 55 54 56 8 (set (reg:SI 258)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 mr+0 S4 A32])) integer_fft.c:109 625 {*arm_movsi_vfp}
     (nil))

(insn 56 55 57 8 (set (reg:SI 259)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:109 625 {*arm_movsi_vfp}
     (nil))

(insn 57 56 58 8 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 258)
            (reg:SI 259))) integer_fft.c:109 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) integer_fft.c:109 211 {*arm_cond_branch}
     (nil)
 -> 62)
;; End of basic block 8 -> ( 9 10)

;; Succ edge  9 (fallthru)
;; Succ edge  10

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(jump_insn 60 59 61 9 (set (pc)
        (label_ref 108)) integer_fft.c:109 223 {*arm_jump}
     (nil)
 -> 108)
;; End of basic block 9 -> ( 11)

;; Succ edge  11

(barrier 61 60 62)

;; Start of basic block ( 8) -> 10
;; Pred edge  8
(code_label 62 61 63 10 6 "" [1 uses])

(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 10 (set (reg:SI 138 [ m.9 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:110 625 {*arm_movsi_vfp}
     (nil))

(insn 65 64 66 10 (set (reg:SI 139 [ D.1496 ])
        (ashift:SI (reg:SI 138 [ m.9 ])
            (const_int 1 [0x1]))) integer_fft.c:110 119 {*arm_shiftsi3}
     (nil))

(insn 66 65 67 10 (set (reg:SI 260)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 fr+0 S4 A32])) integer_fft.c:110 625 {*arm_movsi_vfp}
     (nil))

(insn 67 66 68 10 (set (reg/f:SI 140 [ D.1497 ])
        (plus:SI (reg:SI 260)
            (reg:SI 139 [ D.1496 ]))) integer_fft.c:110 4 {*arm_addsi3}
     (nil))

(insn 68 67 69 10 (set (reg:HI 261)
        (mem:HI (reg/f:SI 140 [ D.1497 ]) [0 *D.1497_37+0 S2 A16])) integer_fft.c:110 178 {*movhi_insn_arch4}
     (nil))

(insn 69 68 70 10 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -46 [0xffffffffffffffd2])) [0 tr+0 S2 A16])
        (reg:HI 261)) integer_fft.c:110 178 {*movhi_insn_arch4}
     (nil))

(insn 70 69 71 10 (set (reg:SI 141 [ m.10 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:111 625 {*arm_movsi_vfp}
     (nil))

(insn 71 70 72 10 (set (reg:SI 142 [ D.1499 ])
        (ashift:SI (reg:SI 141 [ m.10 ])
            (const_int 1 [0x1]))) integer_fft.c:111 119 {*arm_shiftsi3}
     (nil))

(insn 72 71 73 10 (set (reg:SI 262)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 fr+0 S4 A32])) integer_fft.c:111 625 {*arm_movsi_vfp}
     (nil))

(insn 73 72 74 10 (set (reg/f:SI 143 [ D.1500 ])
        (plus:SI (reg:SI 262)
            (reg:SI 142 [ D.1499 ]))) integer_fft.c:111 4 {*arm_addsi3}
     (nil))

(insn 74 73 75 10 (set (reg:SI 144 [ mr.11 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 mr+0 S4 A32])) integer_fft.c:111 625 {*arm_movsi_vfp}
     (nil))

(insn 75 74 76 10 (set (reg:SI 145 [ D.1502 ])
        (ashift:SI (reg:SI 144 [ mr.11 ])
            (const_int 1 [0x1]))) integer_fft.c:111 119 {*arm_shiftsi3}
     (nil))

(insn 76 75 77 10 (set (reg:SI 263)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 fr+0 S4 A32])) integer_fft.c:111 625 {*arm_movsi_vfp}
     (nil))

(insn 77 76 78 10 (set (reg/f:SI 146 [ D.1503 ])
        (plus:SI (reg:SI 263)
            (reg:SI 145 [ D.1502 ]))) integer_fft.c:111 4 {*arm_addsi3}
     (nil))

(insn 78 77 79 10 (set (reg:SI 147 [ D.1504 ])
        (zero_extend:SI (mem:HI (reg/f:SI 146 [ D.1503 ]) [0 *D.1503_44+0 S2 A16]))) integer_fft.c:111 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 79 78 80 10 (set (mem:HI (reg/f:SI 143 [ D.1500 ]) [0 *D.1500_41+0 S2 A16])
        (subreg/s/u:HI (reg:SI 147 [ D.1504 ]) 0)) integer_fft.c:111 178 {*movhi_insn_arch4}
     (nil))

(insn 80 79 81 10 (set (reg:SI 148 [ mr.12 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 mr+0 S4 A32])) integer_fft.c:112 625 {*arm_movsi_vfp}
     (nil))

(insn 81 80 82 10 (set (reg:SI 149 [ D.1506 ])
        (ashift:SI (reg:SI 148 [ mr.12 ])
            (const_int 1 [0x1]))) integer_fft.c:112 119 {*arm_shiftsi3}
     (nil))

(insn 82 81 83 10 (set (reg:SI 264)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 fr+0 S4 A32])) integer_fft.c:112 625 {*arm_movsi_vfp}
     (nil))

(insn 83 82 84 10 (set (reg/f:SI 150 [ D.1507 ])
        (plus:SI (reg:SI 264)
            (reg:SI 149 [ D.1506 ]))) integer_fft.c:112 4 {*arm_addsi3}
     (nil))

(insn 84 83 85 10 (set (reg:HI 265)
        (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -46 [0xffffffffffffffd2])) [0 tr+0 S2 A16])) integer_fft.c:112 178 {*movhi_insn_arch4}
     (nil))

(insn 85 84 86 10 (set (mem:HI (reg/f:SI 150 [ D.1507 ]) [0 *D.1507_48+0 S2 A16])
        (reg:HI 265)) integer_fft.c:112 178 {*movhi_insn_arch4}
     (nil))

(insn 86 85 87 10 (set (reg:SI 151 [ m.13 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:113 625 {*arm_movsi_vfp}
     (nil))

(insn 87 86 88 10 (set (reg:SI 152 [ D.1509 ])
        (ashift:SI (reg:SI 151 [ m.13 ])
            (const_int 1 [0x1]))) integer_fft.c:113 119 {*arm_shiftsi3}
     (nil))

(insn 88 87 89 10 (set (reg:SI 266)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 fi+0 S4 A32])) integer_fft.c:113 625 {*arm_movsi_vfp}
     (nil))

(insn 89 88 90 10 (set (reg/f:SI 153 [ D.1510 ])
        (plus:SI (reg:SI 266)
            (reg:SI 152 [ D.1509 ]))) integer_fft.c:113 4 {*arm_addsi3}
     (nil))

(insn 90 89 91 10 (set (reg:HI 267)
        (mem:HI (reg/f:SI 153 [ D.1510 ]) [0 *D.1510_52+0 S2 A16])) integer_fft.c:113 178 {*movhi_insn_arch4}
     (nil))

(insn 91 90 92 10 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 ti+0 S2 A16])
        (reg:HI 267)) integer_fft.c:113 178 {*movhi_insn_arch4}
     (nil))

(insn 92 91 93 10 (set (reg:SI 154 [ m.14 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:114 625 {*arm_movsi_vfp}
     (nil))

(insn 93 92 94 10 (set (reg:SI 155 [ D.1512 ])
        (ashift:SI (reg:SI 154 [ m.14 ])
            (const_int 1 [0x1]))) integer_fft.c:114 119 {*arm_shiftsi3}
     (nil))

(insn 94 93 95 10 (set (reg:SI 268)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 fi+0 S4 A32])) integer_fft.c:114 625 {*arm_movsi_vfp}
     (nil))

(insn 95 94 96 10 (set (reg/f:SI 156 [ D.1513 ])
        (plus:SI (reg:SI 268)
            (reg:SI 155 [ D.1512 ]))) integer_fft.c:114 4 {*arm_addsi3}
     (nil))

(insn 96 95 97 10 (set (reg:SI 157 [ mr.15 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 mr+0 S4 A32])) integer_fft.c:114 625 {*arm_movsi_vfp}
     (nil))

(insn 97 96 98 10 (set (reg:SI 158 [ D.1515 ])
        (ashift:SI (reg:SI 157 [ mr.15 ])
            (const_int 1 [0x1]))) integer_fft.c:114 119 {*arm_shiftsi3}
     (nil))

(insn 98 97 99 10 (set (reg:SI 269)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 fi+0 S4 A32])) integer_fft.c:114 625 {*arm_movsi_vfp}
     (nil))

(insn 99 98 100 10 (set (reg/f:SI 159 [ D.1516 ])
        (plus:SI (reg:SI 269)
            (reg:SI 158 [ D.1515 ]))) integer_fft.c:114 4 {*arm_addsi3}
     (nil))

(insn 100 99 101 10 (set (reg:SI 160 [ D.1517 ])
        (zero_extend:SI (mem:HI (reg/f:SI 159 [ D.1516 ]) [0 *D.1516_59+0 S2 A16]))) integer_fft.c:114 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 101 100 102 10 (set (mem:HI (reg/f:SI 156 [ D.1513 ]) [0 *D.1513_56+0 S2 A16])
        (subreg/s/u:HI (reg:SI 160 [ D.1517 ]) 0)) integer_fft.c:114 178 {*movhi_insn_arch4}
     (nil))

(insn 102 101 103 10 (set (reg:SI 161 [ mr.16 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 mr+0 S4 A32])) integer_fft.c:115 625 {*arm_movsi_vfp}
     (nil))

(insn 103 102 104 10 (set (reg:SI 162 [ D.1519 ])
        (ashift:SI (reg:SI 161 [ mr.16 ])
            (const_int 1 [0x1]))) integer_fft.c:115 119 {*arm_shiftsi3}
     (nil))

(insn 104 103 105 10 (set (reg:SI 270)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 fi+0 S4 A32])) integer_fft.c:115 625 {*arm_movsi_vfp}
     (nil))

(insn 105 104 106 10 (set (reg/f:SI 163 [ D.1520 ])
        (plus:SI (reg:SI 270)
            (reg:SI 162 [ D.1519 ]))) integer_fft.c:115 4 {*arm_addsi3}
     (nil))

(insn 106 105 107 10 (set (reg:HI 271)
        (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 ti+0 S2 A16])) integer_fft.c:115 178 {*movhi_insn_arch4}
     (nil))

(insn 107 106 108 10 (set (mem:HI (reg/f:SI 163 [ D.1520 ]) [0 *D.1520_63+0 S2 A16])
        (reg:HI 271)) integer_fft.c:115 178 {*movhi_insn_arch4}
     (nil))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 9 10) -> 11
;; Pred edge  9
;; Pred edge  10 (fallthru)
(code_label 108 107 109 11 7 "" [1 uses])

(note 109 108 110 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 110 109 111 11 (set (reg:SI 272)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:102 625 {*arm_movsi_vfp}
     (nil))

(insn 111 110 112 11 (set (reg:SI 273)
        (plus:SI (reg:SI 272)
            (const_int 1 [0x1]))) integer_fft.c:102 4 {*arm_addsi3}
     (nil))

(insn 112 111 113 11 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])
        (reg:SI 273)) integer_fft.c:102 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 11 -> ( 12)

;; Succ edge  12 (fallthru)

;; Start of basic block ( 5 11) -> 12
;; Pred edge  5
;; Pred edge  11 (fallthru)
(code_label 113 112 114 12 4 "" [1 uses])

(note 114 113 116 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 116 114 117 12 (set (reg:SI 274)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:102 625 {*arm_movsi_vfp}
     (nil))

(insn 117 116 118 12 (set (reg:SI 275)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -44 [0xffffffffffffffd4])) [0 nn+0 S4 A32])) integer_fft.c:102 625 {*arm_movsi_vfp}
     (nil))

(insn 118 117 119 12 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 274)
            (reg:SI 275))) integer_fft.c:102 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 119 118 120 12 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) integer_fft.c:102 211 {*arm_cond_branch}
     (nil)
 -> 115)
;; End of basic block 12 -> ( 6 13)

;; Succ edge  6
;; Succ edge  13 (fallthru)

;; Start of basic block ( 12) -> 13
;; Pred edge  12 (fallthru)
(note 120 119 121 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 121 120 122 13 (set (reg:SI 276)
        (const_int 1 [0x1])) integer_fft.c:118 625 {*arm_movsi_vfp}
     (nil))

(insn 122 121 123 13 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 l+0 S4 A32])
        (reg:SI 276)) integer_fft.c:118 625 {*arm_movsi_vfp}
     (nil))

(insn 123 122 124 13 (set (reg:SI 277)
        (const_int 9 [0x9])) integer_fft.c:119 625 {*arm_movsi_vfp}
     (nil))

(insn 124 123 125 13 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])
        (reg:SI 277)) integer_fft.c:119 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 125 124 126 13 (set (pc)
        (label_ref 426)) integer_fft.c:120 223 {*arm_jump}
     (nil)
 -> 426)
;; End of basic block 13 -> ( 41)

;; Succ edge  41

(barrier 126 125 428)

;; Start of basic block ( 41) -> 14
;; Pred edge  41
(code_label 428 126 127 14 26 "" [1 uses])

(note 127 428 128 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 129 14 (set (reg:SI 278)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -72 [0xffffffffffffffb8])) [0 inverse+0 S4 A32])) integer_fft.c:121 625 {*arm_movsi_vfp}
     (nil))

(insn 129 128 130 14 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 278)
            (const_int 0 [0]))) integer_fft.c:121 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 130 129 131 14 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) integer_fft.c:121 211 {*arm_cond_branch}
     (nil)
 -> 209)
;; End of basic block 14 -> ( 15 27)

;; Succ edge  15 (fallthru)
;; Succ edge  27

;; Start of basic block ( 14) -> 15
;; Pred edge  14 (fallthru)
(note 131 130 132 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 132 131 133 15 (set (reg:SI 279)
        (const_int 0 [0])) integer_fft.c:123 625 {*arm_movsi_vfp}
     (nil))

(insn 133 132 134 15 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 shift+0 S4 A32])
        (reg:SI 279)) integer_fft.c:123 625 {*arm_movsi_vfp}
     (nil))

(insn 134 133 135 15 (set (reg:SI 280)
        (const_int 0 [0])) integer_fft.c:124 625 {*arm_movsi_vfp}
     (nil))

(insn 135 134 136 15 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 280)) integer_fft.c:124 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 136 135 137 15 (set (pc)
        (label_ref 191)) integer_fft.c:124 223 {*arm_jump}
     (nil)
 -> 191)
;; End of basic block 15 -> ( 24)

;; Succ edge  24

(barrier 137 136 193)

;; Start of basic block ( 24) -> 16
;; Pred edge  24
(code_label 193 137 138 16 17 "" [1 uses])

(note 138 193 139 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 140 16 (set (reg:SI 164 [ i.17 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:125 625 {*arm_movsi_vfp}
     (nil))

(insn 140 139 141 16 (set (reg:SI 165 [ D.1524 ])
        (ashift:SI (reg:SI 164 [ i.17 ])
            (const_int 1 [0x1]))) integer_fft.c:125 119 {*arm_shiftsi3}
     (nil))

(insn 141 140 142 16 (set (reg:SI 281)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 fr+0 S4 A32])) integer_fft.c:125 625 {*arm_movsi_vfp}
     (nil))

(insn 142 141 143 16 (set (reg/f:SI 166 [ D.1525 ])
        (plus:SI (reg:SI 281)
            (reg:SI 165 [ D.1524 ]))) integer_fft.c:125 4 {*arm_addsi3}
     (nil))

(insn 143 142 144 16 (set (reg:SI 167 [ D.1526 ])
        (zero_extend:SI (mem:HI (reg/f:SI 166 [ D.1525 ]) [0 *D.1525_72+0 S2 A16]))) integer_fft.c:125 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 144 143 145 16 (set (reg:SI 282)
        (sign_extend:SI (subreg/s/u:HI (reg:SI 167 [ D.1526 ]) 0))) integer_fft.c:125 158 {*arm_extendhisi2_v6}
     (nil))

(insn 145 144 146 16 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (reg:SI 282)) integer_fft.c:125 625 {*arm_movsi_vfp}
     (nil))

(insn 146 145 147 16 (set (reg:SI 283)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:126 625 {*arm_movsi_vfp}
     (nil))

(insn 147 146 148 16 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 283)
            (const_int 0 [0]))) integer_fft.c:126 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 148 147 149 16 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) integer_fft.c:126 211 {*arm_cond_branch}
     (nil)
 -> 153)
;; End of basic block 16 -> ( 17 18)

;; Succ edge  17 (fallthru)
;; Succ edge  18

;; Start of basic block ( 16) -> 17
;; Pred edge  16 (fallthru)
(note 149 148 150 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 151 17 (set (reg:SI 284)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:127 625 {*arm_movsi_vfp}
     (nil))

(insn 151 150 152 17 (set (reg:SI 285)
        (neg:SI (reg:SI 284))) integer_fft.c:127 129 {*arm_negsi2}
     (nil))

(insn 152 151 153 17 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (reg:SI 285)) integer_fft.c:127 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 17 -> ( 18)

;; Succ edge  18 (fallthru)

;; Start of basic block ( 16 17) -> 18
;; Pred edge  16
;; Pred edge  17 (fallthru)
(code_label 153 152 154 18 12 "" [1 uses])

(note 154 153 155 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 155 154 156 18 (set (reg:SI 168 [ i.18 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:128 625 {*arm_movsi_vfp}
     (nil))

(insn 156 155 157 18 (set (reg:SI 169 [ D.1530 ])
        (ashift:SI (reg:SI 168 [ i.18 ])
            (const_int 1 [0x1]))) integer_fft.c:128 119 {*arm_shiftsi3}
     (nil))

(insn 157 156 158 18 (set (reg:SI 286)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 fi+0 S4 A32])) integer_fft.c:128 625 {*arm_movsi_vfp}
     (nil))

(insn 158 157 159 18 (set (reg/f:SI 170 [ D.1531 ])
        (plus:SI (reg:SI 286)
            (reg:SI 169 [ D.1530 ]))) integer_fft.c:128 4 {*arm_addsi3}
     (nil))

(insn 159 158 160 18 (set (reg:SI 171 [ D.1532 ])
        (zero_extend:SI (mem:HI (reg/f:SI 170 [ D.1531 ]) [0 *D.1531_78+0 S2 A16]))) integer_fft.c:128 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 160 159 161 18 (set (reg:SI 287)
        (sign_extend:SI (subreg/s/u:HI (reg:SI 171 [ D.1532 ]) 0))) integer_fft.c:128 158 {*arm_extendhisi2_v6}
     (nil))

(insn 161 160 162 18 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])
        (reg:SI 287)) integer_fft.c:128 625 {*arm_movsi_vfp}
     (nil))

(insn 162 161 163 18 (set (reg:SI 288)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:129 625 {*arm_movsi_vfp}
     (nil))

(insn 163 162 164 18 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 288)
            (const_int 0 [0]))) integer_fft.c:129 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 164 163 165 18 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) integer_fft.c:129 211 {*arm_cond_branch}
     (nil)
 -> 169)
;; End of basic block 18 -> ( 19 20)

;; Succ edge  19 (fallthru)
;; Succ edge  20

;; Start of basic block ( 18) -> 19
;; Pred edge  18 (fallthru)
(note 165 164 166 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 166 165 167 19 (set (reg:SI 289)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:130 625 {*arm_movsi_vfp}
     (nil))

(insn 167 166 168 19 (set (reg:SI 290)
        (neg:SI (reg:SI 289))) integer_fft.c:130 129 {*arm_negsi2}
     (nil))

(insn 168 167 169 19 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])
        (reg:SI 290)) integer_fft.c:130 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 19 -> ( 20)

;; Succ edge  20 (fallthru)

;; Start of basic block ( 18 19) -> 20
;; Pred edge  18
;; Pred edge  19 (fallthru)
(code_label 169 168 170 20 13 "" [1 uses])

(note 170 169 171 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 171 170 172 20 (set (reg:SI 291)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:131 625 {*arm_movsi_vfp}
     (nil))

(insn 172 171 173 20 (set (reg:SI 292)
        (const_int 16383 [0x3fff])) integer_fft.c:131 625 {*arm_movsi_vfp}
     (nil))

(insn 173 172 174 20 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 291)
            (reg:SI 292))) integer_fft.c:131 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 174 173 175 20 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 180)
            (pc))) integer_fft.c:131 211 {*arm_cond_branch}
     (nil)
 -> 180)
;; End of basic block 20 -> ( 22 21)

;; Succ edge  22
;; Succ edge  21 (fallthru)

;; Start of basic block ( 20) -> 21
;; Pred edge  20 (fallthru)
(note 175 174 176 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 176 175 177 21 (set (reg:SI 293)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:131 625 {*arm_movsi_vfp}
     (nil))

(insn 177 176 178 21 (set (reg:SI 294)
        (const_int 16383 [0x3fff])) integer_fft.c:131 625 {*arm_movsi_vfp}
     (nil))

(insn 178 177 179 21 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 293)
            (reg:SI 294))) integer_fft.c:131 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 179 178 180 21 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) integer_fft.c:131 211 {*arm_cond_branch}
     (nil)
 -> 186)
;; End of basic block 21 -> ( 22 23)

;; Succ edge  22 (fallthru)
;; Succ edge  23

;; Start of basic block ( 20 21) -> 22
;; Pred edge  20
;; Pred edge  21 (fallthru)
(code_label 180 179 181 22 14 "" [1 uses])

(note 181 180 182 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 182 181 183 22 (set (reg:SI 295)
        (const_int 1 [0x1])) integer_fft.c:132 625 {*arm_movsi_vfp}
     (nil))

(insn 183 182 184 22 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 shift+0 S4 A32])
        (reg:SI 295)) integer_fft.c:132 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 184 183 185 22 (set (pc)
        (label_ref 198)) integer_fft.c:133 223 {*arm_jump}
     (nil)
 -> 198)
;; End of basic block 22 -> ( 25)

;; Succ edge  25

(barrier 185 184 186)

;; Start of basic block ( 21) -> 23
;; Pred edge  21
(code_label 186 185 187 23 15 "" [1 uses])

(note 187 186 188 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 189 23 (set (reg:SI 296)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:124 625 {*arm_movsi_vfp}
     (nil))

(insn 189 188 190 23 (set (reg:SI 297)
        (plus:SI (reg:SI 296)
            (const_int 1 [0x1]))) integer_fft.c:124 4 {*arm_addsi3}
     (nil))

(insn 190 189 191 23 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 297)) integer_fft.c:124 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 23 -> ( 24)

;; Succ edge  24 (fallthru)

;; Start of basic block ( 15 23) -> 24
;; Pred edge  15
;; Pred edge  23 (fallthru)
(code_label 191 190 192 24 11 "" [1 uses])

(note 192 191 194 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 194 192 195 24 (set (reg:SI 298)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:124 625 {*arm_movsi_vfp}
     (nil))

(insn 195 194 196 24 (set (reg:SI 299)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 n+0 S4 A32])) integer_fft.c:124 625 {*arm_movsi_vfp}
     (nil))

(insn 196 195 197 24 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 298)
            (reg:SI 299))) integer_fft.c:124 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 197 196 198 24 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) integer_fft.c:124 211 {*arm_cond_branch}
     (nil)
 -> 193)
;; End of basic block 24 -> ( 16 25)

;; Succ edge  16
;; Succ edge  25 (fallthru)

;; Start of basic block ( 22 24) -> 25
;; Pred edge  22
;; Pred edge  24 (fallthru)
(code_label 198 197 199 25 16 "" [1 uses])

(note 199 198 200 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 200 199 201 25 (set (reg:SI 300)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 shift+0 S4 A32])) integer_fft.c:136 625 {*arm_movsi_vfp}
     (nil))

(insn 201 200 202 25 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 300)
            (const_int 0 [0]))) integer_fft.c:136 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 202 201 203 25 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) integer_fft.c:136 211 {*arm_cond_branch}
     (nil)
 -> 213)
;; End of basic block 25 -> ( 26 28)

;; Succ edge  26 (fallthru)
;; Succ edge  28

;; Start of basic block ( 25) -> 26
;; Pred edge  25 (fallthru)
(note 203 202 204 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 204 203 205 26 (set (reg:SI 301)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 scale+0 S4 A32])) integer_fft.c:137 625 {*arm_movsi_vfp}
     (nil))

(insn 205 204 206 26 (set (reg:SI 302)
        (plus:SI (reg:SI 301)
            (const_int 1 [0x1]))) integer_fft.c:137 4 {*arm_addsi3}
     (nil))

(insn 206 205 207 26 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 scale+0 S4 A32])
        (reg:SI 302)) integer_fft.c:137 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 207 206 208 26 (set (pc)
        (label_ref 213)) integer_fft.c:137 223 {*arm_jump}
     (nil)
 -> 213)
;; End of basic block 26 -> ( 28)

;; Succ edge  28

(barrier 208 207 209)

;; Start of basic block ( 14) -> 27
;; Pred edge  14
(code_label 209 208 210 27 10 "" [1 uses])

(note 210 209 211 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 211 210 212 27 (set (reg:SI 303)
        (const_int 1 [0x1])) integer_fft.c:143 625 {*arm_movsi_vfp}
     (nil))

(insn 212 211 213 27 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 shift+0 S4 A32])
        (reg:SI 303)) integer_fft.c:143 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 27 -> ( 28)

;; Succ edge  28 (fallthru)

;; Start of basic block ( 26 27 25) -> 28
;; Pred edge  26
;; Pred edge  27 (fallthru)
;; Pred edge  25
(code_label 213 212 214 28 18 "" [2 uses])

(note 214 213 215 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 215 214 216 28 (set (reg:SI 304)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 l+0 S4 A32])) integer_fft.c:147 625 {*arm_movsi_vfp}
     (nil))

(insn 216 215 217 28 (set (reg:SI 305)
        (ashift:SI (reg:SI 304)
            (const_int 1 [0x1]))) integer_fft.c:147 119 {*arm_shiftsi3}
     (nil))

(insn 217 216 218 28 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -52 [0xffffffffffffffcc])) [0 istep+0 S4 A32])
        (reg:SI 305)) integer_fft.c:147 625 {*arm_movsi_vfp}
     (nil))

(insn 218 217 219 28 (set (reg:SI 306)
        (const_int 0 [0])) integer_fft.c:148 625 {*arm_movsi_vfp}
     (nil))

(insn 219 218 220 28 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])
        (reg:SI 306)) integer_fft.c:148 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 220 219 221 28 (set (pc)
        (label_ref 413)) integer_fft.c:148 223 {*arm_jump}
     (nil)
 -> 413)
;; End of basic block 28 -> ( 39)

;; Succ edge  39

(barrier 221 220 415)

;; Start of basic block ( 39) -> 29
;; Pred edge  39
(code_label 415 221 222 29 25 "" [1 uses])

(note 222 415 223 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 223 222 224 29 (set (reg:SI 307)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:149 625 {*arm_movsi_vfp}
     (nil))

(insn 224 223 225 29 (set (reg:SI 308)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])) integer_fft.c:149 625 {*arm_movsi_vfp}
     (nil))

(insn 225 224 226 29 (set (reg:SI 309)
        (ashift:SI (reg:SI 307)
            (reg:SI 308))) integer_fft.c:149 119 {*arm_shiftsi3}
     (nil))

(insn 226 225 227 29 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (reg:SI 309)) integer_fft.c:149 625 {*arm_movsi_vfp}
     (nil))

(insn 227 226 228 29 (set (reg:SI 310)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:151 625 {*arm_movsi_vfp}
     (nil))

(insn 228 227 229 29 (set (reg:SI 172 [ D.1541 ])
        (plus:SI (reg:SI 310)
            (const_int 256 [0x100]))) integer_fft.c:151 4 {*arm_addsi3}
     (nil))

(insn 229 228 230 29 (set (reg/f:SI 311)
        (symbol_ref:SI ("Sinewave") [flags 0x2]  <var_decl 0xb6b62180 Sinewave>)) integer_fft.c:151 625 {*arm_movsi_vfp}
     (nil))

(insn 230 229 231 29 (set (reg:SI 312)
        (ashift:SI (reg:SI 172 [ D.1541 ])
            (const_int 1 [0x1]))) integer_fft.c:151 119 {*arm_shiftsi3}
     (nil))

(insn 231 230 232 29 (set (reg/f:SI 313)
        (plus:SI (reg/f:SI 311)
            (reg:SI 312))) integer_fft.c:151 4 {*arm_addsi3}
     (nil))

(insn 232 231 233 29 (set (reg:HI 314)
        (mem/s/j:HI (reg/f:SI 313) [0 Sinewave S2 A16])) integer_fft.c:151 178 {*movhi_insn_arch4}
     (nil))

(insn 233 232 234 29 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -34 [0xffffffffffffffde])) [0 wr+0 S2 A16])
        (reg:HI 314)) integer_fft.c:151 178 {*movhi_insn_arch4}
     (nil))

(insn 234 233 235 29 (set (reg/f:SI 315)
        (symbol_ref:SI ("Sinewave") [flags 0x2]  <var_decl 0xb6b62180 Sinewave>)) integer_fft.c:152 625 {*arm_movsi_vfp}
     (nil))

(insn 235 234 236 29 (set (reg:SI 316)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:152 625 {*arm_movsi_vfp}
     (nil))

(insn 236 235 237 29 (set (reg:SI 317)
        (ashift:SI (reg:SI 316)
            (const_int 1 [0x1]))) integer_fft.c:152 119 {*arm_shiftsi3}
     (nil))

(insn 237 236 238 29 (set (reg/f:SI 318)
        (plus:SI (reg/f:SI 315)
            (reg:SI 317))) integer_fft.c:152 4 {*arm_addsi3}
     (nil))

(insn 238 237 239 29 (set (reg:SI 173 [ D.1542 ])
        (zero_extend:SI (mem/s/j:HI (reg/f:SI 318) [0 Sinewave S2 A16]))) integer_fft.c:152 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 239 238 240 29 (set (reg:SI 174 [ D.1543 ])
        (zero_extend:SI (subreg/u:HI (reg:SI 173 [ D.1542 ]) 0))) integer_fft.c:152 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 240 239 241 29 (set (reg:HI 319)
        (subreg/s/u:HI (reg:SI 174 [ D.1543 ]) 0)) integer_fft.c:152 178 {*movhi_insn_arch4}
     (nil))

(insn 241 240 242 29 (set (reg:SI 320)
        (neg:SI (subreg:SI (reg:HI 319) 0))) integer_fft.c:152 129 {*arm_negsi2}
     (nil))

(insn 242 241 243 29 (set (reg:SI 175 [ D.1544 ])
        (zero_extend:SI (subreg:HI (reg:SI 320) 0))) integer_fft.c:152 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 243 242 244 29 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -36 [0xffffffffffffffdc])) [0 wi+0 S2 A16])
        (subreg/u:HI (reg:SI 175 [ D.1544 ]) 0)) integer_fft.c:152 178 {*movhi_insn_arch4}
     (nil))

(insn 244 243 245 29 (set (reg:SI 321)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -72 [0xffffffffffffffb8])) [0 inverse+0 S4 A32])) integer_fft.c:153 625 {*arm_movsi_vfp}
     (nil))

(insn 245 244 246 29 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 321)
            (const_int 0 [0]))) integer_fft.c:153 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 246 245 247 29 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 253)
            (pc))) integer_fft.c:153 211 {*arm_cond_branch}
     (nil)
 -> 253)
;; End of basic block 29 -> ( 30 31)

;; Succ edge  30 (fallthru)
;; Succ edge  31

;; Start of basic block ( 29) -> 30
;; Pred edge  29 (fallthru)
(note 247 246 248 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 248 247 249 30 (set (reg:SI 176 [ wi.19 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -36 [0xffffffffffffffdc])) [0 wi+0 S2 A16]))) integer_fft.c:154 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 249 248 250 30 (set (reg:HI 322)
        (subreg/s/u:HI (reg:SI 176 [ wi.19 ]) 0)) integer_fft.c:154 178 {*movhi_insn_arch4}
     (nil))

(insn 250 249 251 30 (set (reg:SI 323)
        (neg:SI (subreg:SI (reg:HI 322) 0))) integer_fft.c:154 129 {*arm_negsi2}
     (nil))

(insn 251 250 252 30 (set (reg:SI 177 [ D.1548 ])
        (zero_extend:SI (subreg:HI (reg:SI 323) 0))) integer_fft.c:154 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 252 251 253 30 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -36 [0xffffffffffffffdc])) [0 wi+0 S2 A16])
        (subreg/u:HI (reg:SI 177 [ D.1548 ]) 0)) integer_fft.c:154 178 {*movhi_insn_arch4}
     (nil))
;; End of basic block 30 -> ( 31)

;; Succ edge  31 (fallthru)

;; Start of basic block ( 29 30) -> 31
;; Pred edge  29
;; Pred edge  30 (fallthru)
(code_label 253 252 254 31 20 "" [1 uses])

(note 254 253 255 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 255 254 256 31 (set (reg:SI 324)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 shift+0 S4 A32])) integer_fft.c:155 625 {*arm_movsi_vfp}
     (nil))

(insn 256 255 257 31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 324)
            (const_int 0 [0]))) integer_fft.c:155 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 257 256 258 31 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) integer_fft.c:155 211 {*arm_cond_branch}
     (nil)
 -> 265)
;; End of basic block 31 -> ( 32 33)

;; Succ edge  32 (fallthru)
;; Succ edge  33

;; Start of basic block ( 31) -> 32
;; Pred edge  31 (fallthru)
(note 258 257 259 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 259 258 260 32 (set (reg:SI 325)
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -34 [0xffffffffffffffde])) [0 wr+0 S2 A16]))) integer_fft.c:156 158 {*arm_extendhisi2_v6}
     (nil))

(insn 260 259 261 32 (set (reg:SI 326)
        (ashiftrt:SI (reg:SI 325)
            (const_int 1 [0x1]))) integer_fft.c:156 119 {*arm_shiftsi3}
     (nil))

(insn 261 260 262 32 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -34 [0xffffffffffffffde])) [0 wr+0 S2 A16])
        (subreg:HI (reg:SI 326) 0)) integer_fft.c:156 178 {*movhi_insn_arch4}
     (nil))

(insn 262 261 263 32 (set (reg:SI 327)
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -36 [0xffffffffffffffdc])) [0 wi+0 S2 A16]))) integer_fft.c:157 158 {*arm_extendhisi2_v6}
     (nil))

(insn 263 262 264 32 (set (reg:SI 328)
        (ashiftrt:SI (reg:SI 327)
            (const_int 1 [0x1]))) integer_fft.c:157 119 {*arm_shiftsi3}
     (nil))

(insn 264 263 265 32 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -36 [0xffffffffffffffdc])) [0 wi+0 S2 A16])
        (subreg:HI (reg:SI 328) 0)) integer_fft.c:157 178 {*movhi_insn_arch4}
     (nil))
;; End of basic block 32 -> ( 33)

;; Succ edge  33 (fallthru)

;; Start of basic block ( 31 32) -> 33
;; Pred edge  31
;; Pred edge  32 (fallthru)
(code_label 265 264 266 33 21 "" [1 uses])

(note 266 265 267 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 267 266 268 33 (set (reg:SI 329)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))

(insn 268 267 269 33 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 329)) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 269 268 270 33 (set (pc)
        (label_ref 402)) integer_fft.c:159 223 {*arm_jump}
     (nil)
 -> 402)
;; End of basic block 33 -> ( 37)

;; Succ edge  37

(barrier 270 269 404)

;; Start of basic block ( 37) -> 34
;; Pred edge  37
(code_label 404 270 271 34 24 "" [1 uses])

(note 271 404 272 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 272 271 273 34 (set (reg:SI 330)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:160 625 {*arm_movsi_vfp}
     (nil))

(insn 273 272 274 34 (set (reg:SI 331)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 l+0 S4 A32])) integer_fft.c:160 625 {*arm_movsi_vfp}
     (nil))

(insn 274 273 275 34 (set (reg:SI 332)
        (plus:SI (reg:SI 330)
            (reg:SI 331))) integer_fft.c:160 4 {*arm_addsi3}
     (nil))

(insn 275 274 276 34 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (reg:SI 332)) integer_fft.c:160 625 {*arm_movsi_vfp}
     (nil))

(insn 276 275 277 34 (set (reg:SI 178 [ j.20 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:161 625 {*arm_movsi_vfp}
     (nil))

(insn 277 276 278 34 (set (reg:SI 179 [ D.1552 ])
        (ashift:SI (reg:SI 178 [ j.20 ])
            (const_int 1 [0x1]))) integer_fft.c:161 119 {*arm_shiftsi3}
     (nil))

(insn 278 277 279 34 (set (reg:SI 333)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 fr+0 S4 A32])) integer_fft.c:161 625 {*arm_movsi_vfp}
     (nil))

(insn 279 278 280 34 (set (reg/f:SI 180 [ D.1553 ])
        (plus:SI (reg:SI 333)
            (reg:SI 179 [ D.1552 ]))) integer_fft.c:161 4 {*arm_addsi3}
     (nil))

(insn 280 279 281 34 (set (reg:SI 181 [ D.1554 ])
        (zero_extend:SI (mem:HI (reg/f:SI 180 [ D.1553 ]) [0 *D.1553_104+0 S2 A16]))) integer_fft.c:161 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 281 280 282 34 (set (reg:SI 334)
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -34 [0xffffffffffffffde])) [0 wr+0 S2 A16]))) integer_fft.c:161 158 {*arm_extendhisi2_v6}
     (nil))

(insn 282 281 283 34 (set (reg:SI 335)
        (sign_extend:SI (subreg/s/u:HI (reg:SI 181 [ D.1554 ]) 0))) integer_fft.c:161 158 {*arm_extendhisi2_v6}
     (nil))

(insn 283 282 284 34 (set (reg:SI 0 r0)
        (reg:SI 334)) integer_fft.c:161 625 {*arm_movsi_vfp}
     (nil))

(insn 284 283 285 34 (set (reg:SI 1 r1)
        (reg:SI 335)) integer_fft.c:161 625 {*arm_movsi_vfp}
     (nil))

(call_insn 285 284 286 34 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fix_mpy") [flags 0x3]  <function_decl 0xb6b5c900 fix_mpy>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:161 236 {*call_value_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 286 285 287 34 (set (reg:SI 336)
        (reg:SI 0 r0)) integer_fft.c:161 625 {*arm_movsi_vfp}
     (nil))

(insn 287 286 288 34 (set (reg:SI 182 [ D.1555 ])
        (reg:SI 336)) integer_fft.c:161 625 {*arm_movsi_vfp}
     (nil))

(insn 288 287 289 34 (set (reg:SI 183 [ D.1556 ])
        (zero_extend:SI (subreg:HI (reg:SI 182 [ D.1555 ]) 0))) integer_fft.c:161 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 289 288 290 34 (set (reg:SI 184 [ j.21 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:162 625 {*arm_movsi_vfp}
     (nil))

(insn 290 289 291 34 (set (reg:SI 185 [ D.1558 ])
        (ashift:SI (reg:SI 184 [ j.21 ])
            (const_int 1 [0x1]))) integer_fft.c:162 119 {*arm_shiftsi3}
     (nil))

(insn 291 290 292 34 (set (reg:SI 337)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 fi+0 S4 A32])) integer_fft.c:162 625 {*arm_movsi_vfp}
     (nil))

(insn 292 291 293 34 (set (reg/f:SI 186 [ D.1559 ])
        (plus:SI (reg:SI 337)
            (reg:SI 185 [ D.1558 ]))) integer_fft.c:162 4 {*arm_addsi3}
     (nil))

(insn 293 292 294 34 (set (reg:SI 187 [ D.1560 ])
        (zero_extend:SI (mem:HI (reg/f:SI 186 [ D.1559 ]) [0 *D.1559_110+0 S2 A16]))) integer_fft.c:162 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 294 293 295 34 (set (reg:SI 338)
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -36 [0xffffffffffffffdc])) [0 wi+0 S2 A16]))) integer_fft.c:162 158 {*arm_extendhisi2_v6}
     (nil))

(insn 295 294 296 34 (set (reg:SI 339)
        (sign_extend:SI (subreg/s/u:HI (reg:SI 187 [ D.1560 ]) 0))) integer_fft.c:162 158 {*arm_extendhisi2_v6}
     (nil))

(insn 296 295 297 34 (set (reg:SI 0 r0)
        (reg:SI 338)) integer_fft.c:162 625 {*arm_movsi_vfp}
     (nil))

(insn 297 296 298 34 (set (reg:SI 1 r1)
        (reg:SI 339)) integer_fft.c:162 625 {*arm_movsi_vfp}
     (nil))

(call_insn 298 297 299 34 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fix_mpy") [flags 0x3]  <function_decl 0xb6b5c900 fix_mpy>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:162 236 {*call_value_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 299 298 300 34 (set (reg:SI 340)
        (reg:SI 0 r0)) integer_fft.c:162 625 {*arm_movsi_vfp}
     (nil))

(insn 300 299 301 34 (set (reg:SI 188 [ D.1561 ])
        (reg:SI 340)) integer_fft.c:162 625 {*arm_movsi_vfp}
     (nil))

(insn 301 300 302 34 (set (reg:SI 189 [ D.1562 ])
        (zero_extend:SI (subreg:HI (reg:SI 188 [ D.1561 ]) 0))) integer_fft.c:161 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 302 301 303 34 (set (reg:SI 341)
        (minus:SI (reg:SI 183 [ D.1556 ])
            (reg:SI 189 [ D.1562 ]))) integer_fft.c:161 29 {*arm_subsi3_insn}
     (nil))

(insn 303 302 304 34 (set (reg:SI 190 [ D.1563 ])
        (zero_extend:SI (subreg:HI (reg:SI 341) 0))) integer_fft.c:161 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 304 303 305 34 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -46 [0xffffffffffffffd2])) [0 tr+0 S2 A16])
        (subreg/u:HI (reg:SI 190 [ D.1563 ]) 0)) integer_fft.c:161 178 {*movhi_insn_arch4}
     (nil))

(insn 305 304 306 34 (set (reg:SI 191 [ j.22 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:163 625 {*arm_movsi_vfp}
     (nil))

(insn 306 305 307 34 (set (reg:SI 192 [ D.1565 ])
        (ashift:SI (reg:SI 191 [ j.22 ])
            (const_int 1 [0x1]))) integer_fft.c:163 119 {*arm_shiftsi3}
     (nil))

(insn 307 306 308 34 (set (reg:SI 342)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 fi+0 S4 A32])) integer_fft.c:163 625 {*arm_movsi_vfp}
     (nil))

(insn 308 307 309 34 (set (reg/f:SI 193 [ D.1566 ])
        (plus:SI (reg:SI 342)
            (reg:SI 192 [ D.1565 ]))) integer_fft.c:163 4 {*arm_addsi3}
     (nil))

(insn 309 308 310 34 (set (reg:SI 194 [ D.1567 ])
        (zero_extend:SI (mem:HI (reg/f:SI 193 [ D.1566 ]) [0 *D.1566_118+0 S2 A16]))) integer_fft.c:163 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 310 309 311 34 (set (reg:SI 343)
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -34 [0xffffffffffffffde])) [0 wr+0 S2 A16]))) integer_fft.c:163 158 {*arm_extendhisi2_v6}
     (nil))

(insn 311 310 312 34 (set (reg:SI 344)
        (sign_extend:SI (subreg/s/u:HI (reg:SI 194 [ D.1567 ]) 0))) integer_fft.c:163 158 {*arm_extendhisi2_v6}
     (nil))

(insn 312 311 313 34 (set (reg:SI 0 r0)
        (reg:SI 343)) integer_fft.c:163 625 {*arm_movsi_vfp}
     (nil))

(insn 313 312 314 34 (set (reg:SI 1 r1)
        (reg:SI 344)) integer_fft.c:163 625 {*arm_movsi_vfp}
     (nil))

(call_insn 314 313 315 34 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fix_mpy") [flags 0x3]  <function_decl 0xb6b5c900 fix_mpy>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:163 236 {*call_value_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 315 314 316 34 (set (reg:SI 345)
        (reg:SI 0 r0)) integer_fft.c:163 625 {*arm_movsi_vfp}
     (nil))

(insn 316 315 317 34 (set (reg:SI 195 [ D.1568 ])
        (reg:SI 345)) integer_fft.c:163 625 {*arm_movsi_vfp}
     (nil))

(insn 317 316 318 34 (set (reg:SI 196 [ D.1569 ])
        (zero_extend:SI (subreg:HI (reg:SI 195 [ D.1568 ]) 0))) integer_fft.c:163 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 318 317 319 34 (set (reg:SI 197 [ j.23 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:164 625 {*arm_movsi_vfp}
     (nil))

(insn 319 318 320 34 (set (reg:SI 198 [ D.1571 ])
        (ashift:SI (reg:SI 197 [ j.23 ])
            (const_int 1 [0x1]))) integer_fft.c:164 119 {*arm_shiftsi3}
     (nil))

(insn 320 319 321 34 (set (reg:SI 346)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 fr+0 S4 A32])) integer_fft.c:164 625 {*arm_movsi_vfp}
     (nil))

(insn 321 320 322 34 (set (reg/f:SI 199 [ D.1572 ])
        (plus:SI (reg:SI 346)
            (reg:SI 198 [ D.1571 ]))) integer_fft.c:164 4 {*arm_addsi3}
     (nil))

(insn 322 321 323 34 (set (reg:SI 200 [ D.1573 ])
        (zero_extend:SI (mem:HI (reg/f:SI 199 [ D.1572 ]) [0 *D.1572_124+0 S2 A16]))) integer_fft.c:164 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 323 322 324 34 (set (reg:SI 347)
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -36 [0xffffffffffffffdc])) [0 wi+0 S2 A16]))) integer_fft.c:164 158 {*arm_extendhisi2_v6}
     (nil))

(insn 324 323 325 34 (set (reg:SI 348)
        (sign_extend:SI (subreg/s/u:HI (reg:SI 200 [ D.1573 ]) 0))) integer_fft.c:164 158 {*arm_extendhisi2_v6}
     (nil))

(insn 325 324 326 34 (set (reg:SI 0 r0)
        (reg:SI 347)) integer_fft.c:164 625 {*arm_movsi_vfp}
     (nil))

(insn 326 325 327 34 (set (reg:SI 1 r1)
        (reg:SI 348)) integer_fft.c:164 625 {*arm_movsi_vfp}
     (nil))

(call_insn 327 326 328 34 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fix_mpy") [flags 0x3]  <function_decl 0xb6b5c900 fix_mpy>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:164 236 {*call_value_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 328 327 329 34 (set (reg:SI 349)
        (reg:SI 0 r0)) integer_fft.c:164 625 {*arm_movsi_vfp}
     (nil))

(insn 329 328 330 34 (set (reg:SI 201 [ D.1574 ])
        (reg:SI 349)) integer_fft.c:164 625 {*arm_movsi_vfp}
     (nil))

(insn 330 329 331 34 (set (reg:SI 202 [ D.1575 ])
        (zero_extend:SI (subreg:HI (reg:SI 201 [ D.1574 ]) 0))) integer_fft.c:163 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 331 330 332 34 (set (reg:SI 350)
        (plus:SI (reg:SI 196 [ D.1569 ])
            (reg:SI 202 [ D.1575 ]))) integer_fft.c:163 4 {*arm_addsi3}
     (nil))

(insn 332 331 333 34 (set (reg:SI 203 [ D.1576 ])
        (zero_extend:SI (subreg:HI (reg:SI 350) 0))) integer_fft.c:163 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 333 332 334 34 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 ti+0 S2 A16])
        (subreg/u:HI (reg:SI 203 [ D.1576 ]) 0)) integer_fft.c:163 178 {*movhi_insn_arch4}
     (nil))

(insn 334 333 335 34 (set (reg:SI 204 [ i.24 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:165 625 {*arm_movsi_vfp}
     (nil))

(insn 335 334 336 34 (set (reg:SI 205 [ D.1578 ])
        (ashift:SI (reg:SI 204 [ i.24 ])
            (const_int 1 [0x1]))) integer_fft.c:165 119 {*arm_shiftsi3}
     (nil))

(insn 336 335 337 34 (set (reg:SI 351)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 fr+0 S4 A32])) integer_fft.c:165 625 {*arm_movsi_vfp}
     (nil))

(insn 337 336 338 34 (set (reg/f:SI 206 [ D.1579 ])
        (plus:SI (reg:SI 351)
            (reg:SI 205 [ D.1578 ]))) integer_fft.c:165 4 {*arm_addsi3}
     (nil))

(insn 338 337 339 34 (set (reg:HI 352)
        (mem:HI (reg/f:SI 206 [ D.1579 ]) [0 *D.1579_132+0 S2 A16])) integer_fft.c:165 178 {*movhi_insn_arch4}
     (nil))

(insn 339 338 340 34 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -30 [0xffffffffffffffe2])) [0 qr+0 S2 A16])
        (reg:HI 352)) integer_fft.c:165 178 {*movhi_insn_arch4}
     (nil))

(insn 340 339 341 34 (set (reg:SI 207 [ i.25 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:166 625 {*arm_movsi_vfp}
     (nil))

(insn 341 340 342 34 (set (reg:SI 208 [ D.1581 ])
        (ashift:SI (reg:SI 207 [ i.25 ])
            (const_int 1 [0x1]))) integer_fft.c:166 119 {*arm_shiftsi3}
     (nil))

(insn 342 341 343 34 (set (reg:SI 353)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 fi+0 S4 A32])) integer_fft.c:166 625 {*arm_movsi_vfp}
     (nil))

(insn 343 342 344 34 (set (reg/f:SI 209 [ D.1582 ])
        (plus:SI (reg:SI 353)
            (reg:SI 208 [ D.1581 ]))) integer_fft.c:166 4 {*arm_addsi3}
     (nil))

(insn 344 343 345 34 (set (reg:HI 354)
        (mem:HI (reg/f:SI 209 [ D.1582 ]) [0 *D.1582_136+0 S2 A16])) integer_fft.c:166 178 {*movhi_insn_arch4}
     (nil))

(insn 345 344 346 34 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 qi+0 S2 A16])
        (reg:HI 354)) integer_fft.c:166 178 {*movhi_insn_arch4}
     (nil))

(insn 346 345 347 34 (set (reg:SI 355)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 shift+0 S4 A32])) integer_fft.c:167 625 {*arm_movsi_vfp}
     (nil))

(insn 347 346 348 34 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 355)
            (const_int 0 [0]))) integer_fft.c:167 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 348 347 349 34 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 356)
            (pc))) integer_fft.c:167 211 {*arm_cond_branch}
     (nil)
 -> 356)
;; End of basic block 34 -> ( 35 36)

;; Succ edge  35 (fallthru)
;; Succ edge  36

;; Start of basic block ( 34) -> 35
;; Pred edge  34 (fallthru)
(note 349 348 350 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 350 349 351 35 (set (reg:SI 356)
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -30 [0xffffffffffffffe2])) [0 qr+0 S2 A16]))) integer_fft.c:168 158 {*arm_extendhisi2_v6}
     (nil))

(insn 351 350 352 35 (set (reg:SI 357)
        (ashiftrt:SI (reg:SI 356)
            (const_int 1 [0x1]))) integer_fft.c:168 119 {*arm_shiftsi3}
     (nil))

(insn 352 351 353 35 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -30 [0xffffffffffffffe2])) [0 qr+0 S2 A16])
        (subreg:HI (reg:SI 357) 0)) integer_fft.c:168 178 {*movhi_insn_arch4}
     (nil))

(insn 353 352 354 35 (set (reg:SI 358)
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -32 [0xffffffffffffffe0])) [0 qi+0 S2 A16]))) integer_fft.c:169 158 {*arm_extendhisi2_v6}
     (nil))

(insn 354 353 355 35 (set (reg:SI 359)
        (ashiftrt:SI (reg:SI 358)
            (const_int 1 [0x1]))) integer_fft.c:169 119 {*arm_shiftsi3}
     (nil))

(insn 355 354 356 35 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 qi+0 S2 A16])
        (subreg:HI (reg:SI 359) 0)) integer_fft.c:169 178 {*movhi_insn_arch4}
     (nil))
;; End of basic block 35 -> ( 36)

;; Succ edge  36 (fallthru)

;; Start of basic block ( 34 35) -> 36
;; Pred edge  34
;; Pred edge  35 (fallthru)
(code_label 356 355 357 36 23 "" [1 uses])

(note 357 356 358 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 358 357 359 36 (set (reg:SI 210 [ j.26 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:171 625 {*arm_movsi_vfp}
     (nil))

(insn 359 358 360 36 (set (reg:SI 211 [ D.1586 ])
        (ashift:SI (reg:SI 210 [ j.26 ])
            (const_int 1 [0x1]))) integer_fft.c:171 119 {*arm_shiftsi3}
     (nil))

(insn 360 359 361 36 (set (reg:SI 360)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 fr+0 S4 A32])) integer_fft.c:171 625 {*arm_movsi_vfp}
     (nil))

(insn 361 360 362 36 (set (reg/f:SI 212 [ D.1587 ])
        (plus:SI (reg:SI 360)
            (reg:SI 211 [ D.1586 ]))) integer_fft.c:171 4 {*arm_addsi3}
     (nil))

(insn 362 361 363 36 (set (reg:SI 213 [ qr.27 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -30 [0xffffffffffffffe2])) [0 qr+0 S2 A16]))) integer_fft.c:171 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 363 362 364 36 (set (reg:SI 214 [ tr.28 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -46 [0xffffffffffffffd2])) [0 tr+0 S2 A16]))) integer_fft.c:171 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 364 363 365 36 (set (reg:SI 361)
        (minus:SI (reg:SI 213 [ qr.27 ])
            (reg:SI 214 [ tr.28 ]))) integer_fft.c:171 29 {*arm_subsi3_insn}
     (nil))

(insn 365 364 366 36 (set (reg:SI 215 [ D.1590 ])
        (zero_extend:SI (subreg:HI (reg:SI 361) 0))) integer_fft.c:171 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 366 365 367 36 (set (reg:SI 216 [ D.1591 ])
        (zero_extend:SI (subreg/u:HI (reg:SI 215 [ D.1590 ]) 0))) integer_fft.c:171 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 367 366 368 36 (set (mem:HI (reg/f:SI 212 [ D.1587 ]) [0 *D.1587_142+0 S2 A16])
        (subreg/s/u:HI (reg:SI 216 [ D.1591 ]) 0)) integer_fft.c:171 178 {*movhi_insn_arch4}
     (nil))

(insn 368 367 369 36 (set (reg:SI 217 [ j.29 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:172 625 {*arm_movsi_vfp}
     (nil))

(insn 369 368 370 36 (set (reg:SI 218 [ D.1593 ])
        (ashift:SI (reg:SI 217 [ j.29 ])
            (const_int 1 [0x1]))) integer_fft.c:172 119 {*arm_shiftsi3}
     (nil))

(insn 370 369 371 36 (set (reg:SI 362)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 fi+0 S4 A32])) integer_fft.c:172 625 {*arm_movsi_vfp}
     (nil))

(insn 371 370 372 36 (set (reg/f:SI 219 [ D.1594 ])
        (plus:SI (reg:SI 362)
            (reg:SI 218 [ D.1593 ]))) integer_fft.c:172 4 {*arm_addsi3}
     (nil))

(insn 372 371 373 36 (set (reg:SI 220 [ qi.30 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -32 [0xffffffffffffffe0])) [0 qi+0 S2 A16]))) integer_fft.c:172 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 373 372 374 36 (set (reg:SI 221 [ ti.31 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -48 [0xffffffffffffffd0])) [0 ti+0 S2 A16]))) integer_fft.c:172 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 374 373 375 36 (set (reg:SI 363)
        (minus:SI (reg:SI 220 [ qi.30 ])
            (reg:SI 221 [ ti.31 ]))) integer_fft.c:172 29 {*arm_subsi3_insn}
     (nil))

(insn 375 374 376 36 (set (reg:SI 222 [ D.1597 ])
        (zero_extend:SI (subreg:HI (reg:SI 363) 0))) integer_fft.c:172 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 376 375 377 36 (set (reg:SI 223 [ D.1598 ])
        (zero_extend:SI (subreg/u:HI (reg:SI 222 [ D.1597 ]) 0))) integer_fft.c:172 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 377 376 378 36 (set (mem:HI (reg/f:SI 219 [ D.1594 ]) [0 *D.1594_149+0 S2 A16])
        (subreg/s/u:HI (reg:SI 223 [ D.1598 ]) 0)) integer_fft.c:172 178 {*movhi_insn_arch4}
     (nil))

(insn 378 377 379 36 (set (reg:SI 224 [ i.32 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:173 625 {*arm_movsi_vfp}
     (nil))

(insn 379 378 380 36 (set (reg:SI 225 [ D.1600 ])
        (ashift:SI (reg:SI 224 [ i.32 ])
            (const_int 1 [0x1]))) integer_fft.c:173 119 {*arm_shiftsi3}
     (nil))

(insn 380 379 381 36 (set (reg:SI 364)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 fr+0 S4 A32])) integer_fft.c:173 625 {*arm_movsi_vfp}
     (nil))

(insn 381 380 382 36 (set (reg/f:SI 226 [ D.1601 ])
        (plus:SI (reg:SI 364)
            (reg:SI 225 [ D.1600 ]))) integer_fft.c:173 4 {*arm_addsi3}
     (nil))

(insn 382 381 383 36 (set (reg:SI 227 [ qr.33 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -30 [0xffffffffffffffe2])) [0 qr+0 S2 A16]))) integer_fft.c:173 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 383 382 384 36 (set (reg:SI 228 [ tr.34 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -46 [0xffffffffffffffd2])) [0 tr+0 S2 A16]))) integer_fft.c:173 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 384 383 385 36 (set (reg:SI 365)
        (plus:SI (reg:SI 227 [ qr.33 ])
            (reg:SI 228 [ tr.34 ]))) integer_fft.c:173 4 {*arm_addsi3}
     (nil))

(insn 385 384 386 36 (set (reg:SI 229 [ D.1604 ])
        (zero_extend:SI (subreg:HI (reg:SI 365) 0))) integer_fft.c:173 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 386 385 387 36 (set (reg:SI 230 [ D.1605 ])
        (zero_extend:SI (subreg/u:HI (reg:SI 229 [ D.1604 ]) 0))) integer_fft.c:173 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 387 386 388 36 (set (mem:HI (reg/f:SI 226 [ D.1601 ]) [0 *D.1601_156+0 S2 A16])
        (subreg/s/u:HI (reg:SI 230 [ D.1605 ]) 0)) integer_fft.c:173 178 {*movhi_insn_arch4}
     (nil))

(insn 388 387 389 36 (set (reg:SI 231 [ i.35 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:174 625 {*arm_movsi_vfp}
     (nil))

(insn 389 388 390 36 (set (reg:SI 232 [ D.1607 ])
        (ashift:SI (reg:SI 231 [ i.35 ])
            (const_int 1 [0x1]))) integer_fft.c:174 119 {*arm_shiftsi3}
     (nil))

(insn 390 389 391 36 (set (reg:SI 366)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 fi+0 S4 A32])) integer_fft.c:174 625 {*arm_movsi_vfp}
     (nil))

(insn 391 390 392 36 (set (reg/f:SI 233 [ D.1608 ])
        (plus:SI (reg:SI 366)
            (reg:SI 232 [ D.1607 ]))) integer_fft.c:174 4 {*arm_addsi3}
     (nil))

(insn 392 391 393 36 (set (reg:SI 234 [ qi.36 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -32 [0xffffffffffffffe0])) [0 qi+0 S2 A16]))) integer_fft.c:174 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 393 392 394 36 (set (reg:SI 235 [ ti.37 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -48 [0xffffffffffffffd0])) [0 ti+0 S2 A16]))) integer_fft.c:174 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 394 393 395 36 (set (reg:SI 367)
        (plus:SI (reg:SI 234 [ qi.36 ])
            (reg:SI 235 [ ti.37 ]))) integer_fft.c:174 4 {*arm_addsi3}
     (nil))

(insn 395 394 396 36 (set (reg:SI 236 [ D.1611 ])
        (zero_extend:SI (subreg:HI (reg:SI 367) 0))) integer_fft.c:174 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 396 395 397 36 (set (reg:SI 237 [ D.1612 ])
        (zero_extend:SI (subreg/u:HI (reg:SI 236 [ D.1611 ]) 0))) integer_fft.c:174 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 397 396 398 36 (set (mem:HI (reg/f:SI 233 [ D.1608 ]) [0 *D.1608_163+0 S2 A16])
        (subreg/s/u:HI (reg:SI 237 [ D.1612 ]) 0)) integer_fft.c:174 178 {*movhi_insn_arch4}
     (nil))

(insn 398 397 399 36 (set (reg:SI 368)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))

(insn 399 398 400 36 (set (reg:SI 369)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -52 [0xffffffffffffffcc])) [0 istep+0 S4 A32])) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))

(insn 400 399 401 36 (set (reg:SI 370)
        (plus:SI (reg:SI 368)
            (reg:SI 369))) integer_fft.c:159 4 {*arm_addsi3}
     (nil))

(insn 401 400 402 36 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 370)) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 36 -> ( 37)

;; Succ edge  37 (fallthru)

;; Start of basic block ( 33 36) -> 37
;; Pred edge  33
;; Pred edge  36 (fallthru)
(code_label 402 401 403 37 22 "" [1 uses])

(note 403 402 405 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 405 403 406 37 (set (reg:SI 371)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))

(insn 406 405 407 37 (set (reg:SI 372)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 n+0 S4 A32])) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))

(insn 407 406 408 37 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 371)
            (reg:SI 372))) integer_fft.c:159 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 408 407 409 37 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) integer_fft.c:159 211 {*arm_cond_branch}
     (nil)
 -> 404)
;; End of basic block 37 -> ( 34 38)

;; Succ edge  34
;; Succ edge  38 (fallthru)

;; Start of basic block ( 37) -> 38
;; Pred edge  37 (fallthru)
(note 409 408 410 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 410 409 411 38 (set (reg:SI 373)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:148 625 {*arm_movsi_vfp}
     (nil))

(insn 411 410 412 38 (set (reg:SI 374)
        (plus:SI (reg:SI 373)
            (const_int 1 [0x1]))) integer_fft.c:148 4 {*arm_addsi3}
     (nil))

(insn 412 411 413 38 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])
        (reg:SI 374)) integer_fft.c:148 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 38 -> ( 39)

;; Succ edge  39 (fallthru)

;; Start of basic block ( 28 38) -> 39
;; Pred edge  28
;; Pred edge  38 (fallthru)
(code_label 413 412 414 39 19 "" [1 uses])

(note 414 413 416 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 416 414 417 39 (set (reg:SI 375)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 m+0 S4 A32])) integer_fft.c:148 625 {*arm_movsi_vfp}
     (nil))

(insn 417 416 418 39 (set (reg:SI 376)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 l+0 S4 A32])) integer_fft.c:148 625 {*arm_movsi_vfp}
     (nil))

(insn 418 417 419 39 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 375)
            (reg:SI 376))) integer_fft.c:148 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 419 418 420 39 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 415)
            (pc))) integer_fft.c:148 211 {*arm_cond_branch}
     (nil)
 -> 415)
;; End of basic block 39 -> ( 29 40)

;; Succ edge  29
;; Succ edge  40 (fallthru)

;; Start of basic block ( 39) -> 40
;; Pred edge  39 (fallthru)
(note 420 419 421 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 421 420 422 40 (set (reg:SI 377)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])) integer_fft.c:177 625 {*arm_movsi_vfp}
     (nil))

(insn 422 421 423 40 (set (reg:SI 378)
        (plus:SI (reg:SI 377)
            (const_int -1 [0xffffffffffffffff]))) integer_fft.c:177 4 {*arm_addsi3}
     (nil))

(insn 423 422 424 40 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])
        (reg:SI 378)) integer_fft.c:177 625 {*arm_movsi_vfp}
     (nil))

(insn 424 423 425 40 (set (reg:SI 379)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -52 [0xffffffffffffffcc])) [0 istep+0 S4 A32])) integer_fft.c:178 625 {*arm_movsi_vfp}
     (nil))

(insn 425 424 426 40 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 l+0 S4 A32])
        (reg:SI 379)) integer_fft.c:178 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 40 -> ( 41)

;; Succ edge  41 (fallthru)

;; Start of basic block ( 13 40) -> 41
;; Pred edge  13
;; Pred edge  40 (fallthru)
(code_label 426 425 427 41 9 "" [1 uses])

(note 427 426 429 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 429 427 430 41 (set (reg:SI 380)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 l+0 S4 A32])) integer_fft.c:120 625 {*arm_movsi_vfp}
     (nil))

(insn 430 429 431 41 (set (reg:SI 381)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 n+0 S4 A32])) integer_fft.c:120 625 {*arm_movsi_vfp}
     (nil))

(insn 431 430 432 41 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 380)
            (reg:SI 381))) integer_fft.c:120 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 432 431 433 41 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 428)
            (pc))) integer_fft.c:120 211 {*arm_cond_branch}
     (nil)
 -> 428)
;; End of basic block 41 -> ( 14 42)

;; Succ edge  14
;; Succ edge  42 (fallthru)

;; Start of basic block ( 41) -> 42
;; Pred edge  41 (fallthru)
(note 433 432 434 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 434 433 435 42 (set (reg:SI 134 [ D.1489 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 scale+0 S4 A32])) integer_fft.c:181 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 42 -> ( 43)

;; Succ edge  43 (fallthru)

;; Start of basic block ( 4 42) -> 43
;; Pred edge  4
;; Pred edge  42 (fallthru)
(code_label 435 434 436 43 3 "" [1 uses])

(note 436 435 437 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 437 436 438 43 (set (reg:SI 238 [ <retval> ])
        (reg:SI 134 [ D.1489 ])) integer_fft.c:181 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 438 437 439 43 (set (pc)
        (label_ref 440)) integer_fft.c:181 223 {*arm_jump}
     (nil)
 -> 440)
;; End of basic block 43 -> ( 45)

;; Succ edge  45

(barrier 439 438 445)

;; Start of basic block () -> 44
(note 445 439 442 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 442 445 443 44 (clobber (reg/i:SI 0 r0)) integer_fft.c:182 -1
     (nil))

(insn 443 442 440 44 (clobber (reg:SI 238 [ <retval> ])) integer_fft.c:182 -1
     (nil))
;; End of basic block 44 -> ( 45)

;; Succ edge  45 (fallthru)

;; Start of basic block ( 43 44) -> 45
;; Pred edge  43
;; Pred edge  44 (fallthru)
(code_label 440 443 446 45 1 "" [1 uses])

(note 446 440 441 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 441 446 444 45 (set (reg/i:SI 0 r0)
        (reg:SI 238 [ <retval> ])) integer_fft.c:182 625 {*arm_movsi_vfp}
     (nil))

(insn 444 441 0 45 (use (reg/i:SI 0 r0)) integer_fft.c:182 -1
     (nil))
;; End of basic block 45 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function window (window)

(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 fr+0 S4 A32])
        (reg:SI 0 r0 [ fr ])) integer_fft.c:187 625 {*arm_movsi_vfp}
     (nil))

(insn 3 2 4 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 n+0 S4 A32])
        (reg:SI 1 r1 [ n ])) integer_fft.c:187 625 {*arm_movsi_vfp}
     (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 (set (reg:SI 0 r0)
        (const_int 1024 [0x400])) integer_fft.c:190 625 {*arm_movsi_vfp}
     (nil))

(insn 8 7 9 3 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 n+0 S4 A32])) integer_fft.c:190 625 {*arm_movsi_vfp}
     (nil))

(call_insn/u 9 8 10 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_idiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:190 236 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 10 9 11 3 (set (reg:SI 167)
        (reg:SI 0 r0)) integer_fft.c:190 625 {*arm_movsi_vfp}
     (expr_list:REG_EQUAL (div:SI (const_int 1024 [0x400])
            (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -24 [0xffffffffffffffe8])) [0 n+0 S4 A32]))
        (nil)))

(insn 11 10 12 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (reg:SI 167)) integer_fft.c:190 625 {*arm_movsi_vfp}
     (nil))

(insn 12 11 13 3 (set (reg:SI 168)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 n+0 S4 A32])) integer_fft.c:191 625 {*arm_movsi_vfp}
     (nil))

(insn 13 12 14 3 (set (reg:SI 169)
        (ashiftrt:SI (reg:SI 168)
            (const_int 1 [0x1]))) integer_fft.c:191 119 {*arm_shiftsi3}
     (nil))

(insn 14 13 15 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 n+0 S4 A32])
        (reg:SI 169)) integer_fft.c:191 625 {*arm_movsi_vfp}
     (nil))

(insn 15 14 16 3 (set (reg:SI 170)
        (const_int 0 [0])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 16 15 17 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (reg:SI 170)) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 17 16 18 3 (set (reg:SI 171)
        (const_int 256 [0x100])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 18 17 19 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (reg:SI 171)) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 19 18 20 3 (set (pc)
        (label_ref 53)) integer_fft.c:192 223 {*arm_jump}
     (nil)
 -> 53)
;; End of basic block 3 -> ( 5)

;; Succ edge  5

(barrier 20 19 55)

;; Start of basic block ( 5) -> 4
;; Pred edge  5
(code_label 55 20 21 4 32 "" [1 uses])

(note 21 55 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 (set (reg:SI 134 [ i.5 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:193 625 {*arm_movsi_vfp}
     (nil))

(insn 23 22 24 4 (set (reg:SI 135 [ D.1458 ])
        (ashift:SI (reg:SI 134 [ i.5 ])
            (const_int 1 [0x1]))) integer_fft.c:193 119 {*arm_shiftsi3}
     (nil))

(insn 24 23 25 4 (set (reg:SI 172)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 fr+0 S4 A32])) integer_fft.c:193 625 {*arm_movsi_vfp}
     (nil))

(insn 25 24 26 4 (set (reg/f:SI 136 [ D.1459 ])
        (plus:SI (reg:SI 172)
            (reg:SI 135 [ D.1458 ]))) integer_fft.c:193 4 {*arm_addsi3}
     (nil))

(insn 26 25 27 4 (set (reg:SI 137 [ i.6 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:193 625 {*arm_movsi_vfp}
     (nil))

(insn 27 26 28 4 (set (reg:SI 138 [ D.1461 ])
        (ashift:SI (reg:SI 137 [ i.6 ])
            (const_int 1 [0x1]))) integer_fft.c:193 119 {*arm_shiftsi3}
     (nil))

(insn 28 27 29 4 (set (reg:SI 173)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 fr+0 S4 A32])) integer_fft.c:193 625 {*arm_movsi_vfp}
     (nil))

(insn 29 28 30 4 (set (reg/f:SI 139 [ D.1462 ])
        (plus:SI (reg:SI 173)
            (reg:SI 138 [ D.1461 ]))) integer_fft.c:193 4 {*arm_addsi3}
     (nil))

(insn 30 29 31 4 (set (reg:SI 140 [ D.1463 ])
        (zero_extend:SI (mem:HI (reg/f:SI 139 [ D.1462 ]) [0 *D.1462_16+0 S2 A16]))) integer_fft.c:193 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 31 30 32 4 (set (reg:SI 141 [ D.1464 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 140 [ D.1463 ]) 0))) integer_fft.c:193 158 {*arm_extendhisi2_v6}
     (nil))

(insn 32 31 33 4 (set (reg/f:SI 174)
        (symbol_ref:SI ("Sinewave") [flags 0x2]  <var_decl 0xb6b62180 Sinewave>)) integer_fft.c:193 625 {*arm_movsi_vfp}
     (nil))

(insn 33 32 34 4 (set (reg:SI 175)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) integer_fft.c:193 625 {*arm_movsi_vfp}
     (nil))

(insn 34 33 35 4 (set (reg:SI 176)
        (ashift:SI (reg:SI 175)
            (const_int 1 [0x1]))) integer_fft.c:193 119 {*arm_shiftsi3}
     (nil))

(insn 35 34 36 4 (set (reg/f:SI 177)
        (plus:SI (reg/f:SI 174)
            (reg:SI 176))) integer_fft.c:193 4 {*arm_addsi3}
     (nil))

(insn 36 35 37 4 (set (reg:SI 142 [ D.1465 ])
        (zero_extend:SI (mem/s/j:HI (reg/f:SI 177) [0 Sinewave S2 A16]))) integer_fft.c:193 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 37 36 38 4 (set (reg:SI 178)
        (sign_extend:SI (subreg/s/u:HI (reg:SI 142 [ D.1465 ]) 0))) integer_fft.c:193 158 {*arm_extendhisi2_v6}
     (nil))

(insn 38 37 39 4 (set (reg:SI 179)
        (ashiftrt:SI (reg:SI 178)
            (const_int 1 [0x1]))) integer_fft.c:193 119 {*arm_shiftsi3}
     (nil))

(insn 39 38 40 4 (set (reg:SI 143 [ D.1466 ])
        (zero_extend:SI (subreg:HI (reg:SI 179) 0))) integer_fft.c:193 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 40 39 41 4 (set (reg:SI 144 [ D.1467 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 143 [ D.1466 ]) 0))) integer_fft.c:193 158 {*arm_extendhisi2_v6}
     (nil))

(insn 41 40 42 4 (set (reg:SI 145 [ D.1468 ])
        (minus:SI (const_int 16384 [0x4000])
            (reg:SI 144 [ D.1467 ]))) integer_fft.c:193 29 {*arm_subsi3_insn}
     (nil))

(insn 42 41 43 4 (set (reg:SI 146 [ D.1469 ])
        (mult:SI (reg:SI 145 [ D.1468 ])
            (reg:SI 141 [ D.1464 ]))) integer_fft.c:193 34 {*arm_mulsi3_v6}
     (nil))

(insn 43 42 44 4 (set (reg:SI 147 [ D.1470 ])
        (ashiftrt:SI (reg:SI 146 [ D.1469 ])
            (const_int 15 [0xf]))) integer_fft.c:193 119 {*arm_shiftsi3}
     (nil))

(insn 44 43 45 4 (set (reg:SI 148 [ D.1471 ])
        (zero_extend:SI (subreg:HI (reg:SI 147 [ D.1470 ]) 0))) integer_fft.c:193 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 45 44 46 4 (set (mem:HI (reg/f:SI 136 [ D.1459 ]) [0 *D.1459_13+0 S2 A16])
        (subreg/s/u:HI (reg:SI 148 [ D.1471 ]) 0)) integer_fft.c:193 178 {*movhi_insn_arch4}
     (nil))

(insn 46 45 47 4 (set (reg:SI 180)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 47 46 48 4 (set (reg:SI 181)
        (plus:SI (reg:SI 180)
            (const_int 1 [0x1]))) integer_fft.c:192 4 {*arm_addsi3}
     (nil))

(insn 48 47 49 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (reg:SI 181)) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 49 48 50 4 (set (reg:SI 182)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 50 49 51 4 (set (reg:SI 183)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 51 50 52 4 (set (reg:SI 184)
        (plus:SI (reg:SI 182)
            (reg:SI 183))) integer_fft.c:192 4 {*arm_addsi3}
     (nil))

(insn 52 51 53 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (reg:SI 184)) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 53 52 54 5 31 "" [1 uses])

(note 54 53 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 56 54 57 5 (set (reg:SI 185)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 57 56 58 5 (set (reg:SI 186)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 n+0 S4 A32])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 58 57 59 5 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (reg:SI 186))) integer_fft.c:192 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 59 58 60 5 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) integer_fft.c:192 211 {*arm_cond_branch}
     (nil)
 -> 55)
;; End of basic block 5 -> ( 4 6)

;; Succ edge  4
;; Succ edge  6 (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 6 (set (reg:SI 187)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 n+0 S4 A32])) integer_fft.c:194 625 {*arm_movsi_vfp}
     (nil))

(insn 62 61 63 6 (set (reg:SI 188)
        (ashift:SI (reg:SI 187)
            (const_int 1 [0x1]))) integer_fft.c:194 119 {*arm_shiftsi3}
     (nil))

(insn 63 62 64 6 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 n+0 S4 A32])
        (reg:SI 188)) integer_fft.c:194 625 {*arm_movsi_vfp}
     (nil))

(insn 64 63 65 6 (set (reg:SI 189)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 65 64 66 6 (set (reg:SI 190)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 66 65 67 6 (set (reg:SI 191)
        (minus:SI (reg:SI 189)
            (reg:SI 190))) integer_fft.c:195 29 {*arm_subsi3_insn}
     (nil))

(insn 67 66 68 6 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (reg:SI 191)) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 68 67 69 6 (set (pc)
        (label_ref 102)) integer_fft.c:195 223 {*arm_jump}
     (nil)
 -> 102)
;; End of basic block 6 -> ( 8)

;; Succ edge  8

(barrier 69 68 104)

;; Start of basic block ( 8) -> 7
;; Pred edge  8
(code_label 104 69 70 7 34 "" [1 uses])

(note 70 104 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 7 (set (reg:SI 149 [ i.7 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:196 625 {*arm_movsi_vfp}
     (nil))

(insn 72 71 73 7 (set (reg:SI 150 [ D.1473 ])
        (ashift:SI (reg:SI 149 [ i.7 ])
            (const_int 1 [0x1]))) integer_fft.c:196 119 {*arm_shiftsi3}
     (nil))

(insn 73 72 74 7 (set (reg:SI 192)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 fr+0 S4 A32])) integer_fft.c:196 625 {*arm_movsi_vfp}
     (nil))

(insn 74 73 75 7 (set (reg/f:SI 151 [ D.1474 ])
        (plus:SI (reg:SI 192)
            (reg:SI 150 [ D.1473 ]))) integer_fft.c:196 4 {*arm_addsi3}
     (nil))

(insn 75 74 76 7 (set (reg:SI 152 [ i.8 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:196 625 {*arm_movsi_vfp}
     (nil))

(insn 76 75 77 7 (set (reg:SI 153 [ D.1476 ])
        (ashift:SI (reg:SI 152 [ i.8 ])
            (const_int 1 [0x1]))) integer_fft.c:196 119 {*arm_shiftsi3}
     (nil))

(insn 77 76 78 7 (set (reg:SI 193)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 fr+0 S4 A32])) integer_fft.c:196 625 {*arm_movsi_vfp}
     (nil))

(insn 78 77 79 7 (set (reg/f:SI 154 [ D.1477 ])
        (plus:SI (reg:SI 193)
            (reg:SI 153 [ D.1476 ]))) integer_fft.c:196 4 {*arm_addsi3}
     (nil))

(insn 79 78 80 7 (set (reg:SI 155 [ D.1478 ])
        (zero_extend:SI (mem:HI (reg/f:SI 154 [ D.1477 ]) [0 *D.1477_35+0 S2 A16]))) integer_fft.c:196 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 80 79 81 7 (set (reg:SI 156 [ D.1479 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 155 [ D.1478 ]) 0))) integer_fft.c:196 158 {*arm_extendhisi2_v6}
     (nil))

(insn 81 80 82 7 (set (reg/f:SI 194)
        (symbol_ref:SI ("Sinewave") [flags 0x2]  <var_decl 0xb6b62180 Sinewave>)) integer_fft.c:196 625 {*arm_movsi_vfp}
     (nil))

(insn 82 81 83 7 (set (reg:SI 195)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) integer_fft.c:196 625 {*arm_movsi_vfp}
     (nil))

(insn 83 82 84 7 (set (reg:SI 196)
        (ashift:SI (reg:SI 195)
            (const_int 1 [0x1]))) integer_fft.c:196 119 {*arm_shiftsi3}
     (nil))

(insn 84 83 85 7 (set (reg/f:SI 197)
        (plus:SI (reg/f:SI 194)
            (reg:SI 196))) integer_fft.c:196 4 {*arm_addsi3}
     (nil))

(insn 85 84 86 7 (set (reg:SI 157 [ D.1480 ])
        (zero_extend:SI (mem/s/j:HI (reg/f:SI 197) [0 Sinewave S2 A16]))) integer_fft.c:196 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 86 85 87 7 (set (reg:SI 198)
        (sign_extend:SI (subreg/s/u:HI (reg:SI 157 [ D.1480 ]) 0))) integer_fft.c:196 158 {*arm_extendhisi2_v6}
     (nil))

(insn 87 86 88 7 (set (reg:SI 199)
        (ashiftrt:SI (reg:SI 198)
            (const_int 1 [0x1]))) integer_fft.c:196 119 {*arm_shiftsi3}
     (nil))

(insn 88 87 89 7 (set (reg:SI 158 [ D.1481 ])
        (zero_extend:SI (subreg:HI (reg:SI 199) 0))) integer_fft.c:196 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 89 88 90 7 (set (reg:SI 159 [ D.1482 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 158 [ D.1481 ]) 0))) integer_fft.c:196 158 {*arm_extendhisi2_v6}
     (nil))

(insn 90 89 91 7 (set (reg:SI 160 [ D.1483 ])
        (minus:SI (const_int 16384 [0x4000])
            (reg:SI 159 [ D.1482 ]))) integer_fft.c:196 29 {*arm_subsi3_insn}
     (nil))

(insn 91 90 92 7 (set (reg:SI 161 [ D.1484 ])
        (mult:SI (reg:SI 160 [ D.1483 ])
            (reg:SI 156 [ D.1479 ]))) integer_fft.c:196 34 {*arm_mulsi3_v6}
     (nil))

(insn 92 91 93 7 (set (reg:SI 162 [ D.1485 ])
        (ashiftrt:SI (reg:SI 161 [ D.1484 ])
            (const_int 15 [0xf]))) integer_fft.c:196 119 {*arm_shiftsi3}
     (nil))

(insn 93 92 94 7 (set (reg:SI 163 [ D.1486 ])
        (zero_extend:SI (subreg:HI (reg:SI 162 [ D.1485 ]) 0))) integer_fft.c:196 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 94 93 95 7 (set (mem:HI (reg/f:SI 151 [ D.1474 ]) [0 *D.1474_32+0 S2 A16])
        (subreg/s/u:HI (reg:SI 163 [ D.1486 ]) 0)) integer_fft.c:196 178 {*movhi_insn_arch4}
     (nil))

(insn 95 94 96 7 (set (reg:SI 200)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 96 95 97 7 (set (reg:SI 201)
        (plus:SI (reg:SI 200)
            (const_int 1 [0x1]))) integer_fft.c:195 4 {*arm_addsi3}
     (nil))

(insn 97 96 98 7 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (reg:SI 201)) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 98 97 99 7 (set (reg:SI 202)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 99 98 100 7 (set (reg:SI 203)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 100 99 101 7 (set (reg:SI 204)
        (minus:SI (reg:SI 202)
            (reg:SI 203))) integer_fft.c:195 29 {*arm_subsi3_insn}
     (nil))

(insn 101 100 102 7 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (reg:SI 204)) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 6 7) -> 8
;; Pred edge  6
;; Pred edge  7 (fallthru)
(code_label 102 101 103 8 33 "" [1 uses])

(note 103 102 105 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 105 103 106 8 (set (reg:SI 205)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 106 105 107 8 (set (reg:SI 206)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 n+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 107 106 108 8 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 205)
            (reg:SI 206))) integer_fft.c:195 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 108 107 109 8 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) integer_fft.c:195 211 {*arm_cond_branch}
     (nil)
 -> 104)
;; End of basic block 8 -> ( 7 9)

;; Succ edge  7
;; Succ edge  9 (fallthru)

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 109 108 110 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 9 -> ( 10)

;; Succ edge  10 (fallthru)

;; Start of basic block ( 9) -> 10
;; Pred edge  9 (fallthru)
(code_label 110 109 111 10 30 "" [0 uses])

(note 111 110 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function fix_loud (fix_loud)

(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 loud+0 S4 A32])
        (reg:SI 0 r0 [ loud ])) integer_fft.c:207 625 {*arm_movsi_vfp}
     (nil))

(insn 3 2 4 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 fr+0 S4 A32])
        (reg:SI 1 r1 [ fr ])) integer_fft.c:207 625 {*arm_movsi_vfp}
     (nil))

(insn 4 3 5 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 fi+0 S4 A32])
        (reg:SI 2 r2 [ fi ])) integer_fft.c:207 625 {*arm_movsi_vfp}
     (nil))

(insn 5 4 6 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 n+0 S4 A32])
        (reg:SI 3 r3 [ n ])) integer_fft.c:207 625 {*arm_movsi_vfp}
     (nil))

(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 8 6 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 3 (set (reg:SI 160)
        (const_int 0 [0])) integer_fft.c:210 625 {*arm_movsi_vfp}
     (nil))

(insn 10 9 11 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 max+0 S4 A32])
        (reg:SI 160)) integer_fft.c:210 625 {*arm_movsi_vfp}
     (nil))

(insn 11 10 12 3 (set (reg:SI 161)
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 scale_shift+0 S4 A32])) integer_fft.c:211 625 {*arm_movsi_vfp}
     (nil))

(insn 12 11 13 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 0 [0]))) integer_fft.c:211 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) integer_fft.c:211 211 {*arm_cond_branch}
     (nil)
 -> 17)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 (set (reg:SI 162)
        (const_int 10 [0xa])) integer_fft.c:212 625 {*arm_movsi_vfp}
     (nil))

(insn 16 15 17 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 max+0 S4 A32])
        (reg:SI 162)) integer_fft.c:212 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 17 16 18 5 38 "" [1 uses])

(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 5 (set (reg:SI 163)
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 scale_shift+0 S4 A32])) integer_fft.c:213 625 {*arm_movsi_vfp}
     (nil))

(insn 20 19 21 5 (set (reg:SI 134 [ D.1429 ])
        (plus:SI (reg:SI 163)
            (const_int 1 [0x1]))) integer_fft.c:213 4 {*arm_addsi3}
     (nil))

(insn 21 20 22 5 (set (reg:SI 164)
        (reg:SI 134 [ D.1429 ])) integer_fft.c:213 625 {*arm_movsi_vfp}
     (nil))

(insn 22 21 23 5 (set (reg:SI 164)
        (ashift:SI (reg:SI 164)
            (const_int 1 [0x1]))) integer_fft.c:213 119 {*arm_shiftsi3}
     (nil))

(insn 23 22 24 5 (set (reg:SI 164)
        (plus:SI (reg:SI 164)
            (reg:SI 134 [ D.1429 ]))) integer_fft.c:213 4 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 134 [ D.1429 ])
            (const_int 3 [0x3]))
        (nil)))

(insn 24 23 25 5 (set (reg:SI 165)
        (ashift:SI (reg:SI 164)
            (const_int 1 [0x1]))) integer_fft.c:213 119 {*arm_shiftsi3}
     (nil))

(insn 25 24 26 5 (set (reg:SI 164)
        (reg:SI 165)) integer_fft.c:213 625 {*arm_movsi_vfp}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 134 [ D.1429 ])
            (const_int 6 [0x6]))
        (nil)))

(insn 26 25 27 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 scale_shift+0 S4 A32])
        (reg:SI 164)) integer_fft.c:213 625 {*arm_movsi_vfp}
     (nil))

(insn 27 26 28 5 (set (reg:SI 166)
        (const_int 0 [0])) integer_fft.c:215 625 {*arm_movsi_vfp}
     (nil))

(insn 28 27 29 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (reg:SI 166)) integer_fft.c:215 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 29 28 30 5 (set (pc)
        (label_ref 81)) integer_fft.c:215 223 {*arm_jump}
     (nil)
 -> 81)
;; End of basic block 5 -> ( 9)

;; Succ edge  9

(barrier 30 29 83)

;; Start of basic block ( 9) -> 6
;; Pred edge  9
(code_label 83 30 31 6 41 "" [1 uses])

(note 31 83 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 6 (set (reg:SI 135 [ i.0 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 33 32 34 6 (set (reg:SI 136 [ D.1431 ])
        (ashift:SI (reg:SI 135 [ i.0 ])
            (const_int 1 [0x1]))) integer_fft.c:216 119 {*arm_shiftsi3}
     (nil))

(insn 34 33 35 6 (set (reg:SI 167)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 loud+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 35 34 36 6 (set (reg/f:SI 137 [ D.1432 ])
        (plus:SI (reg:SI 167)
            (reg:SI 136 [ D.1431 ]))) integer_fft.c:216 4 {*arm_addsi3}
     (nil))

(insn 36 35 37 6 (set (reg:SI 138 [ i.1 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 37 36 38 6 (set (reg:SI 139 [ D.1434 ])
        (ashift:SI (reg:SI 138 [ i.1 ])
            (const_int 1 [0x1]))) integer_fft.c:216 119 {*arm_shiftsi3}
     (nil))

(insn 38 37 39 6 (set (reg:SI 168)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 fr+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 39 38 40 6 (set (reg/f:SI 140 [ D.1435 ])
        (plus:SI (reg:SI 168)
            (reg:SI 139 [ D.1434 ]))) integer_fft.c:216 4 {*arm_addsi3}
     (nil))

(insn 40 39 41 6 (set (reg:SI 141 [ D.1436 ])
        (zero_extend:SI (mem:HI (reg/f:SI 140 [ D.1435 ]) [0 *D.1435_17+0 S2 A16]))) integer_fft.c:216 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 41 40 42 6 (set (reg:SI 142 [ i.2 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 42 41 43 6 (set (reg:SI 143 [ D.1438 ])
        (ashift:SI (reg:SI 142 [ i.2 ])
            (const_int 1 [0x1]))) integer_fft.c:216 119 {*arm_shiftsi3}
     (nil))

(insn 43 42 44 6 (set (reg:SI 169)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 fi+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 44 43 45 6 (set (reg/f:SI 144 [ D.1439 ])
        (plus:SI (reg:SI 169)
            (reg:SI 143 [ D.1438 ]))) integer_fft.c:216 4 {*arm_addsi3}
     (nil))

(insn 45 44 46 6 (set (reg:SI 145 [ D.1440 ])
        (zero_extend:SI (mem:HI (reg/f:SI 144 [ D.1439 ]) [0 *D.1439_22+0 S2 A16]))) integer_fft.c:216 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 46 45 47 6 (set (reg:SI 170)
        (sign_extend:SI (subreg/s/u:HI (reg:SI 141 [ D.1436 ]) 0))) integer_fft.c:216 158 {*arm_extendhisi2_v6}
     (nil))

(insn 47 46 48 6 (set (reg:SI 171)
        (sign_extend:SI (subreg/s/u:HI (reg:SI 145 [ D.1440 ]) 0))) integer_fft.c:216 158 {*arm_extendhisi2_v6}
     (nil))

(insn 48 47 49 6 (set (reg:SI 0 r0)
        (reg:SI 170)) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 49 48 50 6 (set (reg:SI 1 r1)
        (reg:SI 171)) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(call_insn 50 49 51 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("db_from_ampl") [flags 0x3]  <function_decl 0xb6b5c880 db_from_ampl>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:216 236 {*call_value_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 51 50 52 6 (set (reg:SI 146 [ D.1441 ])
        (reg:SI 0 r0)) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 52 51 53 6 (set (reg:SI 147 [ D.1442 ])
        (zero_extend:SI (subreg:HI (reg:SI 146 [ D.1441 ]) 0))) integer_fft.c:216 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 53 52 54 6 (set (reg:SI 172)
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 scale_shift+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 54 53 55 6 (set (reg:SI 148 [ D.1443 ])
        (zero_extend:SI (subreg:HI (reg:SI 172) 0))) integer_fft.c:216 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 55 54 56 6 (set (reg:SI 173)
        (plus:SI (reg:SI 147 [ D.1442 ])
            (reg:SI 148 [ D.1443 ]))) integer_fft.c:216 4 {*arm_addsi3}
     (nil))

(insn 56 55 57 6 (set (reg:SI 149 [ D.1444 ])
        (zero_extend:SI (subreg:HI (reg:SI 173) 0))) integer_fft.c:216 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 57 56 58 6 (set (reg:SI 150 [ D.1445 ])
        (zero_extend:SI (subreg/u:HI (reg:SI 149 [ D.1444 ]) 0))) integer_fft.c:216 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 58 57 59 6 (set (mem:HI (reg/f:SI 137 [ D.1432 ]) [0 *D.1432_13+0 S2 A16])
        (subreg/s/u:HI (reg:SI 150 [ D.1445 ]) 0)) integer_fft.c:216 178 {*movhi_insn_arch4}
     (nil))

(insn 59 58 60 6 (set (reg:SI 151 [ i.3 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:217 625 {*arm_movsi_vfp}
     (nil))

(insn 60 59 61 6 (set (reg:SI 152 [ D.1447 ])
        (ashift:SI (reg:SI 151 [ i.3 ])
            (const_int 1 [0x1]))) integer_fft.c:217 119 {*arm_shiftsi3}
     (nil))

(insn 61 60 62 6 (set (reg:SI 174)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 loud+0 S4 A32])) integer_fft.c:217 625 {*arm_movsi_vfp}
     (nil))

(insn 62 61 63 6 (set (reg/f:SI 153 [ D.1448 ])
        (plus:SI (reg:SI 174)
            (reg:SI 152 [ D.1447 ]))) integer_fft.c:217 4 {*arm_addsi3}
     (nil))

(insn 63 62 64 6 (set (reg:SI 154 [ D.1449 ])
        (zero_extend:SI (mem:HI (reg/f:SI 153 [ D.1448 ]) [0 *D.1448_31+0 S2 A16]))) integer_fft.c:217 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 64 63 65 6 (set (reg:SI 155 [ D.1450 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 154 [ D.1449 ]) 0))) integer_fft.c:217 158 {*arm_extendhisi2_v6}
     (nil))

(insn 65 64 66 6 (set (reg:SI 175)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 max+0 S4 A32])) integer_fft.c:217 625 {*arm_movsi_vfp}
     (nil))

(insn 66 65 67 6 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155 [ D.1450 ])
            (reg:SI 175))) integer_fft.c:217 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 67 66 68 6 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) integer_fft.c:217 211 {*arm_cond_branch}
     (nil)
 -> 76)
;; End of basic block 6 -> ( 7 8)

;; Succ edge  7 (fallthru)
;; Succ edge  8

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 7 (set (reg:SI 156 [ i.4 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:218 625 {*arm_movsi_vfp}
     (nil))

(insn 70 69 71 7 (set (reg:SI 157 [ D.1454 ])
        (ashift:SI (reg:SI 156 [ i.4 ])
            (const_int 1 [0x1]))) integer_fft.c:218 119 {*arm_shiftsi3}
     (nil))

(insn 71 70 72 7 (set (reg:SI 176)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 loud+0 S4 A32])) integer_fft.c:218 625 {*arm_movsi_vfp}
     (nil))

(insn 72 71 73 7 (set (reg/f:SI 158 [ D.1455 ])
        (plus:SI (reg:SI 176)
            (reg:SI 157 [ D.1454 ]))) integer_fft.c:218 4 {*arm_addsi3}
     (nil))

(insn 73 72 74 7 (set (reg:SI 177)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 max+0 S4 A32])) integer_fft.c:218 625 {*arm_movsi_vfp}
     (nil))

(insn 74 73 75 7 (set (reg:SI 159 [ D.1456 ])
        (zero_extend:SI (subreg:HI (reg:SI 177) 0))) integer_fft.c:218 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 75 74 76 7 (set (mem:HI (reg/f:SI 158 [ D.1455 ]) [0 *D.1455_36+0 S2 A16])
        (subreg/s/u:HI (reg:SI 159 [ D.1456 ]) 0)) integer_fft.c:218 178 {*movhi_insn_arch4}
     (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 6 7) -> 8
;; Pred edge  6
;; Pred edge  7 (fallthru)
(code_label 76 75 77 8 40 "" [1 uses])

(note 77 76 78 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 8 (set (reg:SI 178)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:215 625 {*arm_movsi_vfp}
     (nil))

(insn 79 78 80 8 (set (reg:SI 179)
        (plus:SI (reg:SI 178)
            (const_int 1 [0x1]))) integer_fft.c:215 4 {*arm_addsi3}
     (nil))

(insn 80 79 81 8 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (reg:SI 179)) integer_fft.c:215 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 (fallthru)

;; Start of basic block ( 5 8) -> 9
;; Pred edge  5
;; Pred edge  8 (fallthru)
(code_label 81 80 82 9 39 "" [1 uses])

(note 82 81 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 84 82 85 9 (set (reg:SI 180)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:215 625 {*arm_movsi_vfp}
     (nil))

(insn 85 84 86 9 (set (reg:SI 181)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 n+0 S4 A32])) integer_fft.c:215 625 {*arm_movsi_vfp}
     (nil))

(insn 86 85 87 9 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 180)
            (reg:SI 181))) integer_fft.c:215 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 87 86 88 9 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) integer_fft.c:215 211 {*arm_cond_branch}
     (nil)
 -> 83)
;; End of basic block 9 -> ( 6 10)

;; Succ edge  6
;; Succ edge  10 (fallthru)

;; Start of basic block ( 9) -> 10
;; Pred edge  9 (fallthru)
(note 88 87 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(code_label 89 88 90 11 37 "" [0 uses])

(note 90 89 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 11 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function db_from_ampl (db_from_ampl)

(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 (set (reg:SI 158)
        (reg:SI 0 r0 [ re ])) integer_fft.c:226 625 {*arm_movsi_vfp}
     (nil))

(insn 4 2 3 2 (set (reg:SI 159)
        (reg:SI 1 r1 [ im ])) integer_fft.c:226 625 {*arm_movsi_vfp}
     (nil))

(insn 3 4 5 2 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -10 [0xfffffffffffffff6])) [0 re+0 S2 A16])
        (subreg:HI (reg:SI 158) 0)) integer_fft.c:226 178 {*movhi_insn_arch4}
     (nil))

(insn 5 3 6 2 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 im+0 S2 A16])
        (subreg:HI (reg:SI 159) 0)) integer_fft.c:226 178 {*movhi_insn_arch4}
     (nil))

(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 8 6 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 3 (set (reg/f:SI 160)
        (symbol_ref:SI ("loud2.1340") [flags 0x2]  <var_decl 0xb6b71180 loud2>)) integer_fft.c:231 625 {*arm_movsi_vfp}
     (nil))

(insn 10 9 11 3 (set (reg:SI 134 [ D.1399 ])
        (mem/s/j/c:SI (reg/f:SI 160) [0 loud2+0 S4 A32])) integer_fft.c:231 625 {*arm_movsi_vfp}
     (nil))

(insn 11 10 12 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.1399 ])
            (const_int 0 [0]))) integer_fft.c:231 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) integer_fft.c:231 211 {*arm_cond_branch}
     (nil)
 -> 69)
;; End of basic block 3 -> ( 4 7)

;; Succ edge  4 (fallthru)
;; Succ edge  7

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 4 (set (reg/f:SI 161)
        (symbol_ref:SI ("Loudampl") [flags 0x2]  <var_decl 0xb6b622a0 Loudampl>)) integer_fft.c:232 625 {*arm_movsi_vfp}
     (nil))

(insn 15 14 16 4 (set (reg:SI 135 [ D.1402 ])
        (zero_extend:SI (mem/s/j/c:HI (reg/f:SI 161) [0 Loudampl+0 S2 A32]))) integer_fft.c:232 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 16 15 17 4 (set (reg:SI 136 [ D.1403 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.1402 ]) 0))) integer_fft.c:232 158 {*arm_extendhisi2_v6}
     (nil))

(insn 17 16 18 4 (set (reg/f:SI 162)
        (symbol_ref:SI ("Loudampl") [flags 0x2]  <var_decl 0xb6b622a0 Loudampl>)) integer_fft.c:232 625 {*arm_movsi_vfp}
     (nil))

(insn 18 17 19 4 (set (reg:SI 137 [ D.1404 ])
        (zero_extend:SI (mem/s/j/c:HI (reg/f:SI 162) [0 Loudampl+0 S2 A32]))) integer_fft.c:232 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 19 18 20 4 (set (reg:SI 138 [ D.1405 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 137 [ D.1404 ]) 0))) integer_fft.c:232 158 {*arm_extendhisi2_v6}
     (nil))

(insn 20 19 21 4 (set (reg:SI 139 [ D.1406 ])
        (mult:SI (reg:SI 138 [ D.1405 ])
            (reg:SI 136 [ D.1403 ]))) integer_fft.c:232 34 {*arm_mulsi3_v6}
     (nil))

(insn 21 20 22 4 (set (reg/f:SI 163)
        (symbol_ref:SI ("loud2.1340") [flags 0x2]  <var_decl 0xb6b71180 loud2>)) integer_fft.c:232 625 {*arm_movsi_vfp}
     (nil))

(insn 22 21 23 4 (set (mem/s/j/c:SI (reg/f:SI 163) [0 loud2+0 S4 A32])
        (reg:SI 139 [ D.1406 ])) integer_fft.c:232 625 {*arm_movsi_vfp}
     (nil))

(insn 23 22 24 4 (set (reg:SI 164)
        (const_int 1 [0x1])) integer_fft.c:233 625 {*arm_movsi_vfp}
     (nil))

(insn 24 23 25 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (reg:SI 164)) integer_fft.c:233 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 25 24 26 4 (set (pc)
        (label_ref 63)) integer_fft.c:233 223 {*arm_jump}
     (nil)
 -> 63)
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 26 25 65)

;; Start of basic block ( 6) -> 5
;; Pred edge  6
(code_label 65 26 27 5 45 "" [1 uses])

(note 27 65 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 5 (set (reg/f:SI 165)
        (symbol_ref:SI ("Loudampl") [flags 0x2]  <var_decl 0xb6b622a0 Loudampl>)) integer_fft.c:234 625 {*arm_movsi_vfp}
     (nil))

(insn 29 28 30 5 (set (reg:SI 166)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:234 625 {*arm_movsi_vfp}
     (nil))

(insn 30 29 31 5 (set (reg:SI 167)
        (ashift:SI (reg:SI 166)
            (const_int 1 [0x1]))) integer_fft.c:234 119 {*arm_shiftsi3}
     (nil))

(insn 31 30 32 5 (set (reg/f:SI 168)
        (plus:SI (reg/f:SI 165)
            (reg:SI 167))) integer_fft.c:234 4 {*arm_addsi3}
     (nil))

(insn 32 31 33 5 (set (reg:SI 140 [ D.1407 ])
        (zero_extend:SI (mem/s/j:HI (reg/f:SI 168) [0 Loudampl S2 A16]))) integer_fft.c:234 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 33 32 34 5 (set (reg:SI 141 [ D.1408 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 140 [ D.1407 ]) 0))) integer_fft.c:234 158 {*arm_extendhisi2_v6}
     (nil))

(insn 34 33 35 5 (set (reg/f:SI 169)
        (symbol_ref:SI ("Loudampl") [flags 0x2]  <var_decl 0xb6b622a0 Loudampl>)) integer_fft.c:234 625 {*arm_movsi_vfp}
     (nil))

(insn 35 34 36 5 (set (reg:SI 170)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:234 625 {*arm_movsi_vfp}
     (nil))

(insn 36 35 37 5 (set (reg:SI 171)
        (ashift:SI (reg:SI 170)
            (const_int 1 [0x1]))) integer_fft.c:234 119 {*arm_shiftsi3}
     (nil))

(insn 37 36 38 5 (set (reg/f:SI 172)
        (plus:SI (reg/f:SI 169)
            (reg:SI 171))) integer_fft.c:234 4 {*arm_addsi3}
     (nil))

(insn 38 37 39 5 (set (reg:SI 142 [ D.1409 ])
        (zero_extend:SI (mem/s/j:HI (reg/f:SI 172) [0 Loudampl S2 A16]))) integer_fft.c:234 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 39 38 40 5 (set (reg:SI 143 [ D.1410 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 142 [ D.1409 ]) 0))) integer_fft.c:234 158 {*arm_extendhisi2_v6}
     (nil))

(insn 40 39 41 5 (set (reg:SI 173)
        (mult:SI (reg:SI 143 [ D.1410 ])
            (reg:SI 141 [ D.1408 ]))) integer_fft.c:234 34 {*arm_mulsi3_v6}
     (nil))

(insn 41 40 42 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 v+0 S4 A32])
        (reg:SI 173)) integer_fft.c:234 625 {*arm_movsi_vfp}
     (nil))

(insn 42 41 43 5 (set (reg/f:SI 174)
        (symbol_ref:SI ("loud2.1340") [flags 0x2]  <var_decl 0xb6b71180 loud2>)) integer_fft.c:235 625 {*arm_movsi_vfp}
     (nil))

(insn 43 42 44 5 (set (reg:SI 175)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:235 625 {*arm_movsi_vfp}
     (nil))

(insn 44 43 45 5 (set (reg:SI 176)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 v+0 S4 A32])) integer_fft.c:235 625 {*arm_movsi_vfp}
     (nil))

(insn 45 44 46 5 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 175)
                    (const_int 4 [0x4]))
                (reg/f:SI 174)) [0 loud2 S4 A32])
        (reg:SI 176)) integer_fft.c:235 625 {*arm_movsi_vfp}
     (nil))

(insn 46 45 47 5 (set (reg:SI 177)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 47 46 48 5 (set (reg:SI 144 [ D.1411 ])
        (plus:SI (reg:SI 177)
            (const_int -1 [0xffffffffffffffff]))) integer_fft.c:236 4 {*arm_addsi3}
     (nil))

(insn 48 47 49 5 (set (reg:SI 178)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 49 48 50 5 (set (reg:SI 145 [ D.1412 ])
        (plus:SI (reg:SI 178)
            (const_int -1 [0xffffffffffffffff]))) integer_fft.c:236 4 {*arm_addsi3}
     (nil))

(insn 50 49 51 5 (set (reg/f:SI 179)
        (symbol_ref:SI ("loud2.1340") [flags 0x2]  <var_decl 0xb6b71180 loud2>)) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 51 50 52 5 (set (reg:SI 146 [ D.1413 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 145 [ D.1412 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 179)) [0 loud2 S4 A32])) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 52 51 53 5 (set (reg:SI 180)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 v+0 S4 A32])) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 53 52 54 5 (set (reg:SI 147 [ D.1414 ])
        (plus:SI (reg:SI 146 [ D.1413 ])
            (reg:SI 180))) integer_fft.c:236 4 {*arm_addsi3}
     (nil))

(insn 54 53 55 5 (set (reg:SI 181)
        (lshiftrt:SI (reg:SI 147 [ D.1414 ])
            (const_int 31 [0x1f]))) integer_fft.c:236 119 {*arm_shiftsi3}
     (nil))

(insn 55 54 56 5 (set (reg:SI 182)
        (plus:SI (reg:SI 181)
            (reg:SI 147 [ D.1414 ]))) integer_fft.c:236 4 {*arm_addsi3}
     (nil))

(insn 56 55 57 5 (set (reg:SI 183)
        (ashiftrt:SI (reg:SI 182)
            (const_int 1 [0x1]))) integer_fft.c:236 119 {*arm_shiftsi3}
     (expr_list:REG_EQUAL (div:SI (reg:SI 147 [ D.1414 ])
            (const_int 2 [0x2]))
        (nil)))

(insn 57 56 58 5 (set (reg:SI 148 [ D.1415 ])
        (reg:SI 183)) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 58 57 59 5 (set (reg/f:SI 184)
        (symbol_ref:SI ("loud2.1340") [flags 0x2]  <var_decl 0xb6b71180 loud2>)) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 59 58 60 5 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 144 [ D.1411 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 184)) [0 loud2 S4 A32])
        (reg:SI 148 [ D.1415 ])) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 60 59 61 5 (set (reg:SI 185)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:233 625 {*arm_movsi_vfp}
     (nil))

(insn 61 60 62 5 (set (reg:SI 186)
        (plus:SI (reg:SI 185)
            (const_int 1 [0x1]))) integer_fft.c:233 4 {*arm_addsi3}
     (nil))

(insn 62 61 63 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (reg:SI 186)) integer_fft.c:233 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 63 62 64 6 44 "" [1 uses])

(note 64 63 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 66 64 67 6 (set (reg:SI 187)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:233 625 {*arm_movsi_vfp}
     (nil))

(insn 67 66 68 6 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 187)
            (const_int 99 [0x63]))) integer_fft.c:233 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 68 67 69 6 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) integer_fft.c:233 211 {*arm_cond_branch}
     (nil)
 -> 65)
;; End of basic block 6 -> ( 5 7)

;; Succ edge  5
;; Succ edge  7 (fallthru)

;; Start of basic block ( 3 6) -> 7
;; Pred edge  3
;; Pred edge  6 (fallthru)
(code_label 69 68 70 7 43 "" [1 uses])

(note 70 69 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 7 (set (reg:SI 149 [ D.1416 ])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -10 [0xfffffffffffffff6])) [0 re+0 S2 A16]))) integer_fft.c:240 158 {*arm_extendhisi2_v6}
     (nil))

(insn 72 71 73 7 (set (reg:SI 150 [ D.1417 ])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -10 [0xfffffffffffffff6])) [0 re+0 S2 A16]))) integer_fft.c:240 158 {*arm_extendhisi2_v6}
     (nil))

(insn 73 72 74 7 (set (reg:SI 151 [ D.1418 ])
        (mult:SI (reg:SI 150 [ D.1417 ])
            (reg:SI 149 [ D.1416 ]))) integer_fft.c:240 34 {*arm_mulsi3_v6}
     (nil))

(insn 74 73 75 7 (set (reg:SI 152 [ D.1419 ])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -12 [0xfffffffffffffff4])) [0 im+0 S2 A16]))) integer_fft.c:240 158 {*arm_extendhisi2_v6}
     (nil))

(insn 75 74 76 7 (set (reg:SI 153 [ D.1420 ])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -12 [0xfffffffffffffff4])) [0 im+0 S2 A16]))) integer_fft.c:240 158 {*arm_extendhisi2_v6}
     (nil))

(insn 76 75 77 7 (set (reg:SI 154 [ D.1421 ])
        (mult:SI (reg:SI 153 [ D.1420 ])
            (reg:SI 152 [ D.1419 ]))) integer_fft.c:240 34 {*arm_mulsi3_v6}
     (nil))

(insn 77 76 78 7 (set (reg:SI 188)
        (plus:SI (reg:SI 151 [ D.1418 ])
            (reg:SI 154 [ D.1421 ]))) integer_fft.c:240 4 {*arm_addsi3}
     (nil))

(insn 78 77 79 7 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 v+0 S4 A32])
        (reg:SI 188)) integer_fft.c:240 625 {*arm_movsi_vfp}
     (nil))

(insn 79 78 80 7 (set (reg:SI 189)
        (const_int 0 [0])) integer_fft.c:242 625 {*arm_movsi_vfp}
     (nil))

(insn 80 79 81 7 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (reg:SI 189)) integer_fft.c:242 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 81 80 82 7 (set (pc)
        (label_ref 98)) integer_fft.c:242 223 {*arm_jump}
     (nil)
 -> 98)
;; End of basic block 7 -> ( 11)

;; Succ edge  11

(barrier 82 81 100)

;; Start of basic block ( 11) -> 8
;; Pred edge  11
(code_label 100 82 83 8 49 "" [1 uses])

(note 83 100 84 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 85 8 (set (reg/f:SI 190)
        (symbol_ref:SI ("loud2.1340") [flags 0x2]  <var_decl 0xb6b71180 loud2>)) integer_fft.c:243 625 {*arm_movsi_vfp}
     (nil))

(insn 85 84 86 8 (set (reg:SI 191)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:243 625 {*arm_movsi_vfp}
     (nil))

(insn 86 85 87 8 (set (reg:SI 155 [ D.1422 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 191)
                    (const_int 4 [0x4]))
                (reg/f:SI 190)) [0 loud2 S4 A32])) integer_fft.c:243 625 {*arm_movsi_vfp}
     (nil))

(insn 87 86 88 8 (set (reg:SI 192)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 v+0 S4 A32])) integer_fft.c:243 625 {*arm_movsi_vfp}
     (nil))

(insn 88 87 89 8 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155 [ D.1422 ])
            (reg:SI 192))) integer_fft.c:243 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 89 88 90 8 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) integer_fft.c:243 211 {*arm_cond_branch}
     (nil)
 -> 93)
;; End of basic block 8 -> ( 9 10)

;; Succ edge  9 (fallthru)
;; Succ edge  10

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 90 89 91 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(jump_insn 91 90 92 9 (set (pc)
        (label_ref 104)) integer_fft.c:244 223 {*arm_jump}
     (nil)
 -> 104)
;; End of basic block 9 -> ( 12)

;; Succ edge  12

(barrier 92 91 93)

;; Start of basic block ( 8) -> 10
;; Pred edge  8
(code_label 93 92 94 10 47 "" [1 uses])

(note 94 93 95 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 10 (set (reg:SI 193)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:242 625 {*arm_movsi_vfp}
     (nil))

(insn 96 95 97 10 (set (reg:SI 194)
        (plus:SI (reg:SI 193)
            (const_int 1 [0x1]))) integer_fft.c:242 4 {*arm_addsi3}
     (nil))

(insn 97 96 98 10 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (reg:SI 194)) integer_fft.c:242 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 7 10) -> 11
;; Pred edge  7
;; Pred edge  10 (fallthru)
(code_label 98 97 99 11 46 "" [1 uses])

(note 99 98 101 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 101 99 102 11 (set (reg:SI 195)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:242 625 {*arm_movsi_vfp}
     (nil))

(insn 102 101 103 11 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 195)
            (const_int 99 [0x63]))) integer_fft.c:242 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 103 102 104 11 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) integer_fft.c:242 211 {*arm_cond_branch}
     (nil)
 -> 100)
;; End of basic block 11 -> ( 8 12)

;; Succ edge  8
;; Succ edge  12 (fallthru)

;; Start of basic block ( 9 11) -> 12
;; Pred edge  9
;; Pred edge  11 (fallthru)
(code_label 104 103 105 12 48 "" [1 uses])

(note 105 104 106 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 107 12 (set (reg:SI 196)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) integer_fft.c:246 625 {*arm_movsi_vfp}
     (nil))

(insn 107 106 108 12 (set (reg:SI 156 [ D.1425 ])
        (neg:SI (reg:SI 196))) integer_fft.c:246 129 {*arm_negsi2}
     (nil))

(insn 108 107 109 12 (set (reg:SI 157 [ <retval> ])
        (reg:SI 156 [ D.1425 ])) integer_fft.c:246 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 109 108 110 12 (set (pc)
        (label_ref 111)) integer_fft.c:246 223 {*arm_jump}
     (nil)
 -> 111)
;; End of basic block 12 -> ( 14)

;; Succ edge  14

(barrier 110 109 116)

;; Start of basic block () -> 13
(note 116 110 113 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 113 116 114 13 (clobber (reg/i:SI 0 r0)) integer_fft.c:247 -1
     (nil))

(insn 114 113 111 13 (clobber (reg:SI 157 [ <retval> ])) integer_fft.c:247 -1
     (nil))
;; End of basic block 13 -> ( 14)

;; Succ edge  14 (fallthru)

;; Start of basic block ( 12 13) -> 14
;; Pred edge  12
;; Pred edge  13 (fallthru)
(code_label 111 114 117 14 42 "" [1 uses])

(note 117 111 112 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 112 117 115 14 (set (reg/i:SI 0 r0)
        (reg:SI 157 [ <retval> ])) integer_fft.c:247 625 {*arm_movsi_vfp}
     (nil))

(insn 115 112 0 14 (use (reg/i:SI 0 r0)) integer_fft.c:247 -1
     (nil))
;; End of basic block 14 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function fix_mpy (fix_mpy)

(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 (set (reg:SI 140)
        (reg:SI 0 r0 [ a ])) integer_fft.c:253 625 {*arm_movsi_vfp}
     (nil))

(insn 4 2 3 2 (set (reg:SI 141)
        (reg:SI 1 r1 [ b ])) integer_fft.c:253 625 {*arm_movsi_vfp}
     (nil))

(insn 3 4 5 2 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 a+0 S2 A16])
        (subreg:HI (reg:SI 140) 0)) integer_fft.c:253 178 {*movhi_insn_arch4}
     (nil))

(insn 5 3 6 2 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 b+0 S2 A16])
        (subreg:HI (reg:SI 141) 0)) integer_fft.c:253 178 {*movhi_insn_arch4}
     (nil))

(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 8 6 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 3 (set (reg:SI 134 [ D.1393 ])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -2 [0xfffffffffffffffe])) [0 a+0 S2 A16]))) integer_fft.c:254 158 {*arm_extendhisi2_v6}
     (nil))

(insn 10 9 11 3 (set (reg:SI 135 [ D.1394 ])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -4 [0xfffffffffffffffc])) [0 b+0 S2 A16]))) integer_fft.c:254 158 {*arm_extendhisi2_v6}
     (nil))

(insn 11 10 12 3 (set (reg:SI 136 [ D.1395 ])
        (mult:SI (reg:SI 135 [ D.1394 ])
            (reg:SI 134 [ D.1393 ]))) integer_fft.c:254 34 {*arm_mulsi3_v6}
     (nil))

(insn 12 11 13 3 (set (reg:SI 137 [ D.1396 ])
        (ashiftrt:SI (reg:SI 136 [ D.1395 ])
            (const_int 15 [0xf]))) integer_fft.c:254 119 {*arm_shiftsi3}
     (nil))

(insn 13 12 14 3 (set (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 a+0 S2 A16])
        (subreg:HI (reg:SI 137 [ D.1396 ]) 0)) integer_fft.c:254 178 {*movhi_insn_arch4}
     (nil))

(insn 14 13 15 3 (set (reg:SI 138 [ D.1397 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -2 [0xfffffffffffffffe])) [0 a+0 S2 A16]))) integer_fft.c:255 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 15 14 16 3 (set (reg:SI 143)
        (sign_extend:SI (subreg/s/u:HI (reg:SI 138 [ D.1397 ]) 0))) integer_fft.c:255 158 {*arm_extendhisi2_v6}
     (nil))

(insn 16 15 17 3 (set (reg:SI 139 [ <retval> ])
        (reg:SI 143)) integer_fft.c:255 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 17 16 18 3 (set (pc)
        (label_ref 19)) integer_fft.c:255 223 {*arm_jump}
     (nil)
 -> 19)
;; End of basic block 3 -> ( 5)

;; Succ edge  5

(barrier 18 17 24)

;; Start of basic block () -> 4
(note 24 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 24 22 4 (clobber (reg/i:SI 0 r0)) integer_fft.c:256 -1
     (nil))

(insn 22 21 19 4 (clobber (reg:SI 139 [ <retval> ])) integer_fft.c:256 -1
     (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 19 22 25 5 53 "" [1 uses])

(note 25 19 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 25 23 5 (set (reg/i:SI 0 r0)
        (reg:SI 139 [ <retval> ])) integer_fft.c:256 625 {*arm_movsi_vfp}
     (nil))

(insn 23 20 0 5 (use (reg/i:SI 0 r0)) integer_fft.c:256 -1
     (nil))
;; End of basic block 5 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function iscale (iscale)

(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 value+0 S4 A32])
        (reg:SI 0 r0 [ value ])) integer_fft.c:262 625 {*arm_movsi_vfp}
     (nil))

(insn 3 2 4 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 numer+0 S4 A32])
        (reg:SI 1 r1 [ numer ])) integer_fft.c:262 625 {*arm_movsi_vfp}
     (nil))

(insn 4 3 5 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 denom+0 S4 A32])
        (reg:SI 2 r2 [ denom ])) integer_fft.c:262 625 {*arm_movsi_vfp}
     (nil))

(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 7 5 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 3 (set (reg:SI 137)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 value+0 S4 A32])) integer_fft.c:270 625 {*arm_movsi_vfp}
     (nil))

(insn 9 8 10 3 (set (reg:SI 138)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 numer+0 S4 A32])) integer_fft.c:270 625 {*arm_movsi_vfp}
     (nil))

(insn 10 9 11 3 (set (reg:SI 134 [ D.1391 ])
        (mult:SI (reg:SI 138)
            (reg:SI 137))) integer_fft.c:270 34 {*arm_mulsi3_v6}
     (nil))

(insn 11 10 12 3 (set (reg:SI 0 r0)
        (reg:SI 134 [ D.1391 ])) integer_fft.c:270 625 {*arm_movsi_vfp}
     (nil))

(insn 12 11 13 3 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 denom+0 S4 A32])) integer_fft.c:270 625 {*arm_movsi_vfp}
     (nil))

(call_insn/u 13 12 14 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_idiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:270 236 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 14 13 15 3 (set (reg:SI 141)
        (reg:SI 0 r0)) integer_fft.c:270 625 {*arm_movsi_vfp}
     (expr_list:REG_EQUAL (div:SI (reg:SI 134 [ D.1391 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -12 [0xfffffffffffffff4])) [0 denom+0 S4 A32]))
        (nil)))

(insn 15 14 16 3 (set (reg:SI 135 [ D.1390 ])
        (reg:SI 141)) integer_fft.c:270 625 {*arm_movsi_vfp}
     (nil))

(insn 16 15 17 3 (set (reg:SI 136 [ <retval> ])
        (reg:SI 135 [ D.1390 ])) integer_fft.c:270 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 17 16 18 3 (set (pc)
        (label_ref 19)) integer_fft.c:270 223 {*arm_jump}
     (nil)
 -> 19)
;; End of basic block 3 -> ( 5)

;; Succ edge  5

(barrier 18 17 24)

;; Start of basic block () -> 4
(note 24 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 24 22 4 (clobber (reg/i:SI 0 r0)) integer_fft.c:272 -1
     (nil))

(insn 22 21 19 4 (clobber (reg:SI 136 [ <retval> ])) integer_fft.c:272 -1
     (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 19 22 25 5 54 "" [1 uses])

(note 25 19 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 25 23 5 (set (reg/i:SI 0 r0)
        (reg:SI 136 [ <retval> ])) integer_fft.c:272 625 {*arm_movsi_vfp}
     (nil))

(insn 23 20 0 5 (use (reg/i:SI 0 r0)) integer_fft.c:272 -1
     (nil))
;; End of basic block 5 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function fix_dot (fix_dot)

(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 hpa+0 S4 A32])
        (reg:SI 0 r0 [ hpa ])) integer_fft.c:278 625 {*arm_movsi_vfp}
     (nil))

(insn 3 2 4 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 pb+0 S4 A32])
        (reg:SI 1 r1 [ pb ])) integer_fft.c:278 625 {*arm_movsi_vfp}
     (nil))

(insn 4 3 5 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 n+0 S4 A32])
        (reg:SI 2 r2 [ n ])) integer_fft.c:278 625 {*arm_movsi_vfp}
     (nil))

(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 7 5 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 3 (set (reg:SI 144)
        (const_int 0 [0])) integer_fft.c:290 625 {*arm_movsi_vfp}
     (nil))

(insn 9 8 10 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 sum+0 S4 A32])
        (reg:SI 144)) integer_fft.c:290 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 10 9 11 3 (set (pc)
        (label_ref 32)) integer_fft.c:291 223 {*arm_jump}
     (nil)
 -> 32)
;; End of basic block 3 -> ( 5)

;; Succ edge  5

(barrier 11 10 42)

;; Start of basic block ( 5) -> 4
;; Pred edge  5
(code_label 42 11 12 4 57 "" [1 uses])

(note 12 42 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 4 (set (reg/f:SI 145)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 pa+0 S4 A32])) integer_fft.c:292 625 {*arm_movsi_vfp}
     (nil))

(insn 14 13 15 4 (set (reg/v:SI 135 [ a ])
        (zero_extend:SI (mem:HI (reg/f:SI 145) [0 *pa_3+0 S2 A16]))) integer_fft.c:292 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 15 14 16 4 (set (reg:SI 146)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 pa+0 S4 A32])) integer_fft.c:292 625 {*arm_movsi_vfp}
     (nil))

(insn 16 15 17 4 (set (reg:SI 147)
        (plus:SI (reg:SI 146)
            (const_int 2 [0x2]))) integer_fft.c:292 4 {*arm_addsi3}
     (nil))

(insn 17 16 18 4 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 pa+0 S4 A32])
        (reg:SI 147)) integer_fft.c:292 625 {*arm_movsi_vfp}
     (nil))

(insn 18 17 19 4 (set (reg/f:SI 148)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 pb+0 S4 A32])) integer_fft.c:293 625 {*arm_movsi_vfp}
     (nil))

(insn 19 18 20 4 (set (reg/v:SI 136 [ b ])
        (zero_extend:SI (mem:HI (reg/f:SI 148) [0 *pb_1+0 S2 A16]))) integer_fft.c:293 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 20 19 21 4 (set (reg:SI 149)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 pb+0 S4 A32])) integer_fft.c:293 625 {*arm_movsi_vfp}
     (nil))

(insn 21 20 22 4 (set (reg:SI 150)
        (plus:SI (reg:SI 149)
            (const_int 2 [0x2]))) integer_fft.c:293 4 {*arm_addsi3}
     (nil))

(insn 22 21 23 4 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 pb+0 S4 A32])
        (reg:SI 150)) integer_fft.c:293 625 {*arm_movsi_vfp}
     (nil))

(insn 23 22 24 4 (set (reg:SI 137 [ D.1377 ])
        (sign_extend:SI (subreg/s/u:HI (reg/v:SI 135 [ a ]) 0))) integer_fft.c:294 158 {*arm_extendhisi2_v6}
     (nil))

(insn 24 23 25 4 (set (reg:SI 138 [ D.1378 ])
        (sign_extend:SI (subreg/s/u:HI (reg/v:SI 136 [ b ]) 0))) integer_fft.c:294 158 {*arm_extendhisi2_v6}
     (nil))

(insn 25 24 26 4 (set (reg:SI 139 [ D.1379 ])
        (mult:SI (reg:SI 138 [ D.1378 ])
            (reg:SI 137 [ D.1377 ]))) integer_fft.c:294 34 {*arm_mulsi3_v6}
     (nil))

(insn 26 25 27 4 (set (reg:SI 140 [ D.1380 ])
        (ashiftrt:SI (reg:SI 139 [ D.1379 ])
            (const_int 15 [0xf]))) integer_fft.c:294 119 {*arm_shiftsi3}
     (nil))

(insn 27 26 28 4 (set (reg/v:SI 135 [ a ])
        (zero_extend:SI (subreg:HI (reg:SI 140 [ D.1380 ]) 0))) integer_fft.c:294 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 28 27 29 4 (set (reg:SI 141 [ D.1381 ])
        (sign_extend:SI (subreg/s/u:HI (reg/v:SI 135 [ a ]) 0))) integer_fft.c:295 158 {*arm_extendhisi2_v6}
     (nil))

(insn 29 28 30 4 (set (reg:SI 151)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 sum+0 S4 A32])) integer_fft.c:295 625 {*arm_movsi_vfp}
     (nil))

(insn 30 29 31 4 (set (reg:SI 152)
        (plus:SI (reg:SI 151)
            (reg:SI 141 [ D.1381 ]))) integer_fft.c:295 4 {*arm_addsi3}
     (nil))

(insn 31 30 32 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 sum+0 S4 A32])
        (reg:SI 152)) integer_fft.c:295 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 32 31 33 5 56 "" [1 uses])

(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 5 (set (reg:SI 154)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 n+0 S4 A32])) integer_fft.c:291 625 {*arm_movsi_vfp}
     (nil))

(insn 35 34 36 5 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154)
            (const_int 0 [0]))) integer_fft.c:291 199 {*arm_cmpsi_insn}
     (nil))

(insn 36 35 37 5 (set (reg:SI 155)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) integer_fft.c:291 213 {*mov_scc}
     (nil))

(insn 37 36 38 5 (set (reg:QI 153)
        (subreg:QI (reg:SI 155) 0)) integer_fft.c:291 180 {*arm_movqi_insn}
     (nil))

(insn 38 37 39 5 (set (reg:SI 134 [ D.1382 ])
        (zero_extend:SI (reg:QI 153))) integer_fft.c:291 153 {*arm_zero_extendqisi2_v6}
     (nil))

(insn 39 38 40 5 (set (reg:SI 156)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 n+0 S4 A32])) integer_fft.c:291 625 {*arm_movsi_vfp}
     (nil))

(insn 40 39 41 5 (set (reg:SI 157)
        (plus:SI (reg:SI 156)
            (const_int -1 [0xffffffffffffffff]))) integer_fft.c:291 4 {*arm_addsi3}
     (nil))

(insn 41 40 43 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 n+0 S4 A32])
        (reg:SI 157)) integer_fft.c:291 625 {*arm_movsi_vfp}
     (nil))

(insn 43 41 44 5 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.1382 ])
            (const_int 0 [0]))) integer_fft.c:291 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 44 43 45 5 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) integer_fft.c:291 211 {*arm_cond_branch}
     (nil)
 -> 42)
;; End of basic block 5 -> ( 4 6)

;; Succ edge  4
;; Succ edge  6 (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 6 (set (reg:SI 158)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 sum+0 S4 A32])) integer_fft.c:298 625 {*arm_movsi_vfp}
     (nil))

(insn 47 46 48 6 (set (reg:SI 159)
        (const_int 32767 [0x7fff])) integer_fft.c:298 625 {*arm_movsi_vfp}
     (nil))

(insn 48 47 49 6 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158)
            (reg:SI 159))) integer_fft.c:298 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 49 48 50 6 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) integer_fft.c:298 211 {*arm_cond_branch}
     (nil)
 -> 55)
;; End of basic block 6 -> ( 7 8)

;; Succ edge  7 (fallthru)
;; Succ edge  8

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 7 (set (reg:SI 160)
        (const_int 32767 [0x7fff])) integer_fft.c:299 625 {*arm_movsi_vfp}
     (nil))

(insn 52 51 53 7 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 sum+0 S4 A32])
        (reg:SI 160)) integer_fft.c:299 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 53 52 54 7 (set (pc)
        (label_ref 64)) integer_fft.c:299 223 {*arm_jump}
     (nil)
 -> 64)
;; End of basic block 7 -> ( 10)

;; Succ edge  10

(barrier 54 53 55)

;; Start of basic block ( 6) -> 8
;; Pred edge  6
(code_label 55 54 56 8 58 "" [1 uses])

(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 (set (reg:SI 161)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 sum+0 S4 A32])) integer_fft.c:300 625 {*arm_movsi_vfp}
     (nil))

(insn 58 57 59 8 (set (reg:SI 162)
        (const_int -32767 [0xffffffffffff8001])) integer_fft.c:300 625 {*arm_movsi_vfp}
     (nil))

(insn 59 58 60 8 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (reg:SI 162))) integer_fft.c:300 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 60 59 61 8 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) integer_fft.c:300 211 {*arm_cond_branch}
     (nil)
 -> 64)
;; End of basic block 8 -> ( 9 10)

;; Succ edge  9 (fallthru)
;; Succ edge  10

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 61 60 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 9 (set (reg:SI 163)
        (const_int -32767 [0xffffffffffff8001])) integer_fft.c:301 625 {*arm_movsi_vfp}
     (nil))

(insn 63 62 64 9 (set (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 sum+0 S4 A32])
        (reg:SI 163)) integer_fft.c:301 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 (fallthru)

;; Start of basic block ( 7 8 9) -> 10
;; Pred edge  7
;; Pred edge  8
;; Pred edge  9 (fallthru)
(code_label 64 63 65 10 59 "" [2 uses])

(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 10 (set (reg:SI 164)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 sum+0 S4 A32])) integer_fft.c:303 625 {*arm_movsi_vfp}
     (nil))

(insn 67 66 68 10 (set (reg:SI 142 [ D.1388 ])
        (zero_extend:SI (subreg:HI (reg:SI 164) 0))) integer_fft.c:303 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 68 67 69 10 (set (reg:SI 166)
        (sign_extend:SI (subreg/s/u:HI (reg:SI 142 [ D.1388 ]) 0))) integer_fft.c:303 158 {*arm_extendhisi2_v6}
     (nil))

(insn 69 68 70 10 (set (reg:SI 143 [ <retval> ])
        (reg:SI 166)) integer_fft.c:303 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 70 69 71 10 (set (pc)
        (label_ref 72)) integer_fft.c:303 223 {*arm_jump}
     (nil)
 -> 72)
;; End of basic block 10 -> ( 12)

;; Succ edge  12

(barrier 71 70 77)

;; Start of basic block () -> 11
(note 77 71 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 74 77 75 11 (clobber (reg/i:SI 0 r0)) integer_fft.c:340 -1
     (nil))

(insn 75 74 72 11 (clobber (reg:SI 143 [ <retval> ])) integer_fft.c:340 -1
     (nil))
;; End of basic block 11 -> ( 12)

;; Succ edge  12 (fallthru)

;; Start of basic block ( 10 11) -> 12
;; Pred edge  10
;; Pred edge  11 (fallthru)
(code_label 72 75 78 12 55 "" [1 uses])

(note 78 72 73 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 73 78 76 12 (set (reg/i:SI 0 r0)
        (reg:SI 143 [ <retval> ])) integer_fft.c:340 625 {*arm_movsi_vfp}
     (nil))

(insn 76 73 0 12 (use (reg/i:SI 0 r0)) integer_fft.c:340 -1
     (nil))
;; End of basic block 12 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

