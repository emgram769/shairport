
;; Function fix_fft (fix_fft)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 43 n_edges 59 count 82 (  1.9)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r381: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a2 (r381,l0) best GENERAL_REGS, cover GENERAL_REGS
    r380: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a3 (r380,l0) best GENERAL_REGS, cover GENERAL_REGS
    r379: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a4 (r379,l0) best GENERAL_REGS, cover GENERAL_REGS
    r378: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a5 (r378,l0) best GENERAL_REGS, cover GENERAL_REGS
    r377: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a6 (r377,l0) best GENERAL_REGS, cover GENERAL_REGS
    r376: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a7 (r376,l0) best GENERAL_REGS, cover GENERAL_REGS
    r375: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a8 (r375,l0) best GENERAL_REGS, cover GENERAL_REGS
    r374: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a9 (r374,l0) best GENERAL_REGS, cover GENERAL_REGS
    r373: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a10 (r373,l0) best GENERAL_REGS, cover GENERAL_REGS
    r372: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a11 (r372,l0) best GENERAL_REGS, cover GENERAL_REGS
    r371: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a12 (r371,l0) best GENERAL_REGS, cover GENERAL_REGS
    r370: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a13 (r370,l0) best GENERAL_REGS, cover GENERAL_REGS
    r369: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a14 (r369,l0) best GENERAL_REGS, cover GENERAL_REGS
    r368: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a15 (r368,l0) best GENERAL_REGS, cover GENERAL_REGS
    r367: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a19 (r367,l0) best GENERAL_REGS, cover GENERAL_REGS
    r366: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a23 (r366,l0) best GENERAL_REGS, cover GENERAL_REGS
    r365: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a28 (r365,l0) best GENERAL_REGS, cover GENERAL_REGS
    r364: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a32 (r364,l0) best GENERAL_REGS, cover GENERAL_REGS
    r363: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a37 (r363,l0) best GENERAL_REGS, cover GENERAL_REGS
    r362: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a41 (r362,l0) best GENERAL_REGS, cover GENERAL_REGS
    r361: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a46 (r361,l0) best GENERAL_REGS, cover GENERAL_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a50 (r360,l0) best GENERAL_REGS, cover GENERAL_REGS
    r359: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a52 (r359,l0) best GENERAL_REGS, cover GENERAL_REGS
    r358: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a53 (r358,l0) best GENERAL_REGS, cover GENERAL_REGS
    r357: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a54 (r357,l0) best GENERAL_REGS, cover GENERAL_REGS
    r356: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a55 (r356,l0) best GENERAL_REGS, cover GENERAL_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a56 (r355,l0) best GENERAL_REGS, cover GENERAL_REGS
    r354: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a57 (r354,l0) best GENERAL_REGS, cover GENERAL_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a60 (r353,l0) best GENERAL_REGS, cover GENERAL_REGS
    r352: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a62 (r352,l0) best GENERAL_REGS, cover GENERAL_REGS
    r351: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a65 (r351,l0) best GENERAL_REGS, cover GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a68 (r350,l0) best GENERAL_REGS, cover GENERAL_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a72 (r349,l0) best GENERAL_REGS, cover GENERAL_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a73 (r348,l0) best GENERAL_REGS, cover GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a74 (r347,l0) best GENERAL_REGS, cover GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a78 (r346,l0) best GENERAL_REGS, cover GENERAL_REGS
    r345: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a81 (r345,l0) best GENERAL_REGS, cover GENERAL_REGS
    r344: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a82 (r344,l0) best GENERAL_REGS, cover GENERAL_REGS
    r343: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a83 (r343,l0) best GENERAL_REGS, cover GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a87 (r342,l0) best GENERAL_REGS, cover GENERAL_REGS
    r341: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a90 (r341,l0) best GENERAL_REGS, cover GENERAL_REGS
    r340: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a94 (r340,l0) best GENERAL_REGS, cover GENERAL_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a95 (r339,l0) best GENERAL_REGS, cover GENERAL_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a96 (r338,l0) best GENERAL_REGS, cover GENERAL_REGS
    r337: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a100 (r337,l0) best GENERAL_REGS, cover GENERAL_REGS
    r336: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a103 (r336,l0) best GENERAL_REGS, cover GENERAL_REGS
    r335: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a104 (r335,l0) best GENERAL_REGS, cover GENERAL_REGS
    r334: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a105 (r334,l0) best GENERAL_REGS, cover GENERAL_REGS
    r333: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a109 (r333,l0) best GENERAL_REGS, cover GENERAL_REGS
    r332: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a111 (r332,l0) best GENERAL_REGS, cover GENERAL_REGS
    r331: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a112 (r331,l0) best GENERAL_REGS, cover GENERAL_REGS
    r330: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a113 (r330,l0) best GENERAL_REGS, cover GENERAL_REGS
    r329: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a114 (r329,l0) best GENERAL_REGS, cover GENERAL_REGS
    r328: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a115 (r328,l0) best GENERAL_REGS, cover GENERAL_REGS
    r327: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a116 (r327,l0) best GENERAL_REGS, cover GENERAL_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a117 (r326,l0) best GENERAL_REGS, cover GENERAL_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a118 (r325,l0) best GENERAL_REGS, cover GENERAL_REGS
    r324: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a119 (r324,l0) best GENERAL_REGS, cover GENERAL_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a121 (r323,l0) best GENERAL_REGS, cover GENERAL_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a122 (r322,l0) best GENERAL_REGS, cover GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a124 (r321,l0) best GENERAL_REGS, cover GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a126 (r320,l0) best GENERAL_REGS, cover GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a127 (r319,l0) best GENERAL_REGS, cover GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a130 (r318,l0) best GENERAL_REGS, cover GENERAL_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a131 (r317,l0) best GENERAL_REGS, cover GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a133 (r316,l0) best GENERAL_REGS, cover GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a132 (r315,l0) best GENERAL_REGS, cover GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a134 (r314,l0) best GENERAL_REGS, cover GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a135 (r313,l0) best GENERAL_REGS, cover GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a136 (r312,l0) best GENERAL_REGS, cover GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a137 (r311,l0) best GENERAL_REGS, cover GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a139 (r310,l0) best GENERAL_REGS, cover GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a140 (r309,l0) best GENERAL_REGS, cover GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a141 (r308,l0) best GENERAL_REGS, cover GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a142 (r307,l0) best GENERAL_REGS, cover GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a143 (r306,l0) best GENERAL_REGS, cover GENERAL_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a144 (r305,l0) best GENERAL_REGS, cover GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a145 (r304,l0) best GENERAL_REGS, cover GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a146 (r303,l0) best GENERAL_REGS, cover GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a147 (r302,l0) best GENERAL_REGS, cover GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a148 (r301,l0) best GENERAL_REGS, cover GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a149 (r300,l0) best GENERAL_REGS, cover GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a150 (r299,l0) best GENERAL_REGS, cover GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a151 (r298,l0) best GENERAL_REGS, cover GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a152 (r297,l0) best GENERAL_REGS, cover GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a153 (r296,l0) best GENERAL_REGS, cover GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a154 (r295,l0) best GENERAL_REGS, cover GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a155 (r294,l0) best GENERAL_REGS, cover GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a156 (r293,l0) best GENERAL_REGS, cover GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a157 (r292,l0) best GENERAL_REGS, cover GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a158 (r291,l0) best GENERAL_REGS, cover GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a159 (r290,l0) best GENERAL_REGS, cover GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a160 (r289,l0) best GENERAL_REGS, cover GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a161 (r288,l0) best GENERAL_REGS, cover GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a162 (r287,l0) best GENERAL_REGS, cover GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a166 (r286,l0) best GENERAL_REGS, cover GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a168 (r285,l0) best GENERAL_REGS, cover GENERAL_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a169 (r284,l0) best GENERAL_REGS, cover GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a170 (r283,l0) best GENERAL_REGS, cover GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a171 (r282,l0) best GENERAL_REGS, cover GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a175 (r281,l0) best GENERAL_REGS, cover GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a177 (r280,l0) best GENERAL_REGS, cover GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a178 (r279,l0) best GENERAL_REGS, cover GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a179 (r278,l0) best GENERAL_REGS, cover GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a180 (r277,l0) best GENERAL_REGS, cover GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a181 (r276,l0) best GENERAL_REGS, cover GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a182 (r275,l0) best GENERAL_REGS, cover GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a183 (r274,l0) best GENERAL_REGS, cover GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a184 (r273,l0) best GENERAL_REGS, cover GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a185 (r272,l0) best GENERAL_REGS, cover GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a187 (r271,l0) best GENERAL_REGS, cover GENERAL_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a189 (r270,l0) best GENERAL_REGS, cover GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a195 (r269,l0) best GENERAL_REGS, cover GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a198 (r268,l0) best GENERAL_REGS, cover GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a200 (r267,l0) best GENERAL_REGS, cover GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a203 (r266,l0) best GENERAL_REGS, cover GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a206 (r265,l0) best GENERAL_REGS, cover GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a208 (r264,l0) best GENERAL_REGS, cover GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a214 (r263,l0) best GENERAL_REGS, cover GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a217 (r262,l0) best GENERAL_REGS, cover GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a219 (r261,l0) best GENERAL_REGS, cover GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a222 (r260,l0) best GENERAL_REGS, cover GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a224 (r259,l0) best GENERAL_REGS, cover GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a225 (r258,l0) best GENERAL_REGS, cover GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a226 (r257,l0) best GENERAL_REGS, cover GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a227 (r256,l0) best GENERAL_REGS, cover GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a229 (r255,l0) best GENERAL_REGS, cover GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a231 (r254,l0) best GENERAL_REGS, cover GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a232 (r253,l0) best GENERAL_REGS, cover GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a234 (r252,l0) best GENERAL_REGS, cover GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a235 (r251,l0) best GENERAL_REGS, cover GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a236 (r250,l0) best GENERAL_REGS, cover GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a237 (r249,l0) best GENERAL_REGS, cover GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a238 (r248,l0) best GENERAL_REGS, cover GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a239 (r247,l0) best GENERAL_REGS, cover GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a240 (r246,l0) best GENERAL_REGS, cover GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a241 (r245,l0) best GENERAL_REGS, cover GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a242 (r244,l0) best GENERAL_REGS, cover GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a243 (r243,l0) best GENERAL_REGS, cover GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a244 (r242,l0) best GENERAL_REGS, cover GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a245 (r241,l0) best GENERAL_REGS, cover GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a246 (r240,l0) best GENERAL_REGS, cover GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a247 (r239,l0) best GENERAL_REGS, cover GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a0 (r238,l0) best GENERAL_REGS, cover GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a17 (r237,l0) best GENERAL_REGS, cover GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a18 (r236,l0) best GENERAL_REGS, cover GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a20 (r235,l0) best GENERAL_REGS, cover GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a21 (r234,l0) best GENERAL_REGS, cover GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a16 (r233,l0) best GENERAL_REGS, cover GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a22 (r232,l0) best GENERAL_REGS, cover GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a24 (r231,l0) best GENERAL_REGS, cover GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a26 (r230,l0) best GENERAL_REGS, cover GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a27 (r229,l0) best GENERAL_REGS, cover GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a29 (r228,l0) best GENERAL_REGS, cover GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a30 (r227,l0) best GENERAL_REGS, cover GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a25 (r226,l0) best GENERAL_REGS, cover GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a31 (r225,l0) best GENERAL_REGS, cover GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a33 (r224,l0) best GENERAL_REGS, cover GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a35 (r223,l0) best GENERAL_REGS, cover GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a36 (r222,l0) best GENERAL_REGS, cover GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a38 (r221,l0) best GENERAL_REGS, cover GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a39 (r220,l0) best GENERAL_REGS, cover GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a34 (r219,l0) best GENERAL_REGS, cover GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a40 (r218,l0) best GENERAL_REGS, cover GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a42 (r217,l0) best GENERAL_REGS, cover GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a44 (r216,l0) best GENERAL_REGS, cover GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a45 (r215,l0) best GENERAL_REGS, cover GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a47 (r214,l0) best GENERAL_REGS, cover GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a48 (r213,l0) best GENERAL_REGS, cover GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a43 (r212,l0) best GENERAL_REGS, cover GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a49 (r211,l0) best GENERAL_REGS, cover GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a51 (r210,l0) best GENERAL_REGS, cover GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a58 (r209,l0) best GENERAL_REGS, cover GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a59 (r208,l0) best GENERAL_REGS, cover GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a61 (r207,l0) best GENERAL_REGS, cover GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a63 (r206,l0) best GENERAL_REGS, cover GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a64 (r205,l0) best GENERAL_REGS, cover GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a66 (r204,l0) best GENERAL_REGS, cover GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a67 (r203,l0) best GENERAL_REGS, cover GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a69 (r202,l0) best GENERAL_REGS, cover GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a71 (r201,l0) best GENERAL_REGS, cover GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a75 (r200,l0) best GENERAL_REGS, cover GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a76 (r199,l0) best GENERAL_REGS, cover GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a77 (r198,l0) best GENERAL_REGS, cover GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a79 (r197,l0) best GENERAL_REGS, cover GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a70 (r196,l0) best GENERAL_REGS, cover GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a80 (r195,l0) best GENERAL_REGS, cover GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a84 (r194,l0) best GENERAL_REGS, cover GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a85 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a86 (r192,l0) best GENERAL_REGS, cover GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a88 (r191,l0) best GENERAL_REGS, cover GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a89 (r190,l0) best GENERAL_REGS, cover GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a91 (r189,l0) best GENERAL_REGS, cover GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a93 (r188,l0) best GENERAL_REGS, cover GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a97 (r187,l0) best GENERAL_REGS, cover GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a98 (r186,l0) best GENERAL_REGS, cover GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a99 (r185,l0) best GENERAL_REGS, cover GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a101 (r184,l0) best GENERAL_REGS, cover GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a92 (r183,l0) best GENERAL_REGS, cover GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a102 (r182,l0) best GENERAL_REGS, cover GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a106 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a107 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a108 (r179,l0) best GENERAL_REGS, cover GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a110 (r178,l0) best GENERAL_REGS, cover GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a120 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a123 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a125 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a128 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a129 (r173,l0) best GENERAL_REGS, cover GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a138 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a163 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a164 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a165 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a167 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a172 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a173 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a174 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a176 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a186 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a188 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a190 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a192 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a193 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a194 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a196 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a191 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a197 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a199 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a201 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a202 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a204 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a205 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a207 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a209 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a211 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a212 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a213 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a215 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a210 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a216 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a218 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a220 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a221 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a223 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a228 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a230 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a233 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r238,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:45,45 VFP_REGS:45,45 MEM:30
  a2(r381,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a3(r380,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a4(r379,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a5(r378,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a6(r377,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a7(r376,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a8(r375,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a9(r374,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a10(r373,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a11(r372,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a12(r371,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a13(r370,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a14(r369,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a15(r368,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a16(r233,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a17(r237,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a18(r236,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a19(r367,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a20(r235,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a21(r234,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a22(r232,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a23(r366,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a24(r231,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a25(r226,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a26(r230,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a27(r229,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a28(r365,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a29(r228,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a30(r227,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a31(r225,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a32(r364,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a33(r224,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a34(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a35(r223,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a36(r222,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a37(r363,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a38(r221,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a39(r220,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a40(r218,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a41(r362,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a42(r217,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a43(r212,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a44(r216,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a45(r215,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a46(r361,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a47(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a48(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a49(r211,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a50(r360,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a51(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a52(r359,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a53(r358,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a54(r357,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a55(r356,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a56(r355,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a57(r354,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20
  a58(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a59(r208,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a60(r353,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a61(r207,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a62(r352,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20
  a63(r206,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a64(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a65(r351,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a66(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a67(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a68(r350,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a69(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a70(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a71(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a72(r349,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a73(r348,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a74(r347,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a75(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a76(r199,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a77(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a78(r346,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a79(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a80(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a81(r345,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a82(r344,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a83(r343,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a84(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a85(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a86(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a87(r342,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a88(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a89(r190,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a90(r341,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a91(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a92(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a93(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a94(r340,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a95(r339,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a96(r338,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a97(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a98(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a99(r185,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a100(r337,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a101(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a102(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a103(r336,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a104(r335,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a105(r334,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a106(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a107(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a108(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a109(r333,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a110(r178,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a111(r332,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a112(r331,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a113(r330,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a114(r329,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a115(r328,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a116(r327,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a117(r326,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a118(r325,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a119(r324,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a120(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a121(r323,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a122(r322,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20
  a123(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a124(r321,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a125(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a126(r320,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a127(r319,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20
  a128(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a129(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a130(r318,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a131(r317,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a132(r315,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a133(r316,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a134(r314,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20
  a135(r313,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a136(r312,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a137(r311,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a138(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a139(r310,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a140(r309,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a141(r308,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a142(r307,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a143(r306,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a144(r305,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a145(r304,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a146(r303,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a147(r302,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a148(r301,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a149(r300,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a150(r299,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a151(r298,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a152(r297,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a153(r296,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a154(r295,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a155(r294,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a156(r293,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a157(r292,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a158(r291,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a159(r290,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a160(r289,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a161(r288,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a162(r287,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a163(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a164(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a165(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a166(r286,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a167(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a168(r285,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a169(r284,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a170(r283,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a171(r282,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a172(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a173(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a174(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a175(r281,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a176(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a177(r280,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a178(r279,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a179(r278,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a180(r277,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a181(r276,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a182(r275,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a183(r274,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a184(r273,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a185(r272,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a186(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a187(r271,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20
  a188(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a189(r270,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a190(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a191(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a192(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a193(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a194(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a195(r269,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a196(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a197(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a198(r268,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a199(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a200(r267,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20
  a201(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a202(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a203(r266,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a204(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a205(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a206(r265,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20
  a207(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a208(r264,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a209(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a210(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a211(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a212(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a213(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a214(r263,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a215(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a216(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a217(r262,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a218(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a219(r261,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20
  a220(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a221(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a222(r260,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a223(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a224(r259,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a225(r258,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a226(r257,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a227(r256,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a228(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a229(r255,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a230(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a231(r254,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a232(r253,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a233(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a234(r252,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a235(r251,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a236(r250,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a237(r249,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a238(r248,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a239(r247,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a240(r246,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a241(r245,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a242(r244,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a243(r243,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a244(r242,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a245(r241,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a246(r240,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a247(r239,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20

   Insn 444(l0): point = 0
   Insn 441(l0): point = 2
   Insn 437(l0): point = 4
   Insn 434(l0): point = 7
   Insn 432(l0): point = 10
   Insn 431(l0): point = 12
   Insn 430(l0): point = 14
   Insn 429(l0): point = 16
   Insn 425(l0): point = 19
   Insn 424(l0): point = 21
   Insn 423(l0): point = 23
   Insn 422(l0): point = 25
   Insn 421(l0): point = 27
   Insn 419(l0): point = 30
   Insn 418(l0): point = 32
   Insn 417(l0): point = 34
   Insn 416(l0): point = 36
   Insn 412(l0): point = 39
   Insn 411(l0): point = 41
   Insn 410(l0): point = 43
   Insn 408(l0): point = 46
   Insn 407(l0): point = 48
   Insn 406(l0): point = 50
   Insn 405(l0): point = 52
   Insn 401(l0): point = 55
   Insn 400(l0): point = 57
   Insn 399(l0): point = 59
   Insn 398(l0): point = 61
   Insn 397(l0): point = 63
   Insn 396(l0): point = 65
   Insn 395(l0): point = 67
   Insn 394(l0): point = 69
   Insn 393(l0): point = 71
   Insn 392(l0): point = 73
   Insn 391(l0): point = 75
   Insn 390(l0): point = 77
   Insn 389(l0): point = 79
   Insn 388(l0): point = 81
   Insn 387(l0): point = 83
   Insn 386(l0): point = 85
   Insn 385(l0): point = 87
   Insn 384(l0): point = 89
   Insn 383(l0): point = 91
   Insn 382(l0): point = 93
   Insn 381(l0): point = 95
   Insn 380(l0): point = 97
   Insn 379(l0): point = 99
   Insn 378(l0): point = 101
   Insn 377(l0): point = 103
   Insn 376(l0): point = 105
   Insn 375(l0): point = 107
   Insn 374(l0): point = 109
   Insn 373(l0): point = 111
   Insn 372(l0): point = 113
   Insn 371(l0): point = 115
   Insn 370(l0): point = 117
   Insn 369(l0): point = 119
   Insn 368(l0): point = 121
   Insn 367(l0): point = 123
   Insn 366(l0): point = 125
   Insn 365(l0): point = 127
   Insn 364(l0): point = 129
   Insn 363(l0): point = 131
   Insn 362(l0): point = 133
   Insn 361(l0): point = 135
   Insn 360(l0): point = 137
   Insn 359(l0): point = 139
   Insn 358(l0): point = 141
   Insn 355(l0): point = 144
   Insn 354(l0): point = 146
   Insn 353(l0): point = 148
   Insn 352(l0): point = 150
   Insn 351(l0): point = 152
   Insn 350(l0): point = 154
   Insn 348(l0): point = 157
   Insn 347(l0): point = 159
   Insn 346(l0): point = 161
   Insn 345(l0): point = 163
   Insn 344(l0): point = 165
   Insn 343(l0): point = 167
   Insn 342(l0): point = 169
   Insn 341(l0): point = 171
   Insn 340(l0): point = 173
   Insn 339(l0): point = 175
   Insn 338(l0): point = 177
   Insn 337(l0): point = 179
   Insn 336(l0): point = 181
   Insn 335(l0): point = 183
   Insn 334(l0): point = 185
   Insn 333(l0): point = 187
   Insn 332(l0): point = 189
   Insn 331(l0): point = 191
   Insn 330(l0): point = 193
   Insn 329(l0): point = 195
   Insn 328(l0): point = 197
   Insn 327(l0): point = 199
   Insn 326(l0): point = 201
   Insn 325(l0): point = 203
   Insn 324(l0): point = 205
   Insn 323(l0): point = 207
   Insn 322(l0): point = 209
   Insn 321(l0): point = 211
   Insn 320(l0): point = 213
   Insn 319(l0): point = 215
   Insn 318(l0): point = 217
   Insn 317(l0): point = 219
   Insn 316(l0): point = 221
   Insn 315(l0): point = 223
   Insn 314(l0): point = 225
   Insn 313(l0): point = 227
   Insn 312(l0): point = 229
   Insn 311(l0): point = 231
   Insn 310(l0): point = 233
   Insn 309(l0): point = 235
   Insn 308(l0): point = 237
   Insn 307(l0): point = 239
   Insn 306(l0): point = 241
   Insn 305(l0): point = 243
   Insn 304(l0): point = 245
   Insn 303(l0): point = 247
   Insn 302(l0): point = 249
   Insn 301(l0): point = 251
   Insn 300(l0): point = 253
   Insn 299(l0): point = 255
   Insn 298(l0): point = 257
   Insn 297(l0): point = 259
   Insn 296(l0): point = 261
   Insn 295(l0): point = 263
   Insn 294(l0): point = 265
   Insn 293(l0): point = 267
   Insn 292(l0): point = 269
   Insn 291(l0): point = 271
   Insn 290(l0): point = 273
   Insn 289(l0): point = 275
   Insn 288(l0): point = 277
   Insn 287(l0): point = 279
   Insn 286(l0): point = 281
   Insn 285(l0): point = 283
   Insn 284(l0): point = 285
   Insn 283(l0): point = 287
   Insn 282(l0): point = 289
   Insn 281(l0): point = 291
   Insn 280(l0): point = 293
   Insn 279(l0): point = 295
   Insn 278(l0): point = 297
   Insn 277(l0): point = 299
   Insn 276(l0): point = 301
   Insn 275(l0): point = 303
   Insn 274(l0): point = 305
   Insn 273(l0): point = 307
   Insn 272(l0): point = 309
   Insn 461(l0): point = 312
   Insn 268(l0): point = 314
   Insn 267(l0): point = 316
   Insn 264(l0): point = 319
   Insn 263(l0): point = 321
   Insn 262(l0): point = 323
   Insn 261(l0): point = 325
   Insn 260(l0): point = 327
   Insn 259(l0): point = 329
   Insn 257(l0): point = 332
   Insn 256(l0): point = 334
   Insn 255(l0): point = 336
   Insn 252(l0): point = 339
   Insn 251(l0): point = 341
   Insn 250(l0): point = 343
   Insn 249(l0): point = 345
   Insn 248(l0): point = 347
   Insn 246(l0): point = 350
   Insn 245(l0): point = 352
   Insn 244(l0): point = 354
   Insn 243(l0): point = 356
   Insn 242(l0): point = 358
   Insn 241(l0): point = 360
   Insn 240(l0): point = 362
   Insn 239(l0): point = 364
   Insn 238(l0): point = 366
   Insn 237(l0): point = 368
   Insn 236(l0): point = 370
   Insn 235(l0): point = 372
   Insn 234(l0): point = 374
   Insn 233(l0): point = 376
   Insn 232(l0): point = 378
   Insn 231(l0): point = 380
   Insn 230(l0): point = 382
   Insn 229(l0): point = 384
   Insn 228(l0): point = 386
   Insn 227(l0): point = 388
   Insn 226(l0): point = 390
   Insn 225(l0): point = 392
   Insn 224(l0): point = 394
   Insn 223(l0): point = 396
   Insn 459(l0): point = 399
   Insn 219(l0): point = 401
   Insn 218(l0): point = 403
   Insn 217(l0): point = 405
   Insn 216(l0): point = 407
   Insn 215(l0): point = 409
   Insn 212(l0): point = 412
   Insn 211(l0): point = 414
   Insn 457(l0): point = 417
   Insn 206(l0): point = 419
   Insn 205(l0): point = 421
   Insn 204(l0): point = 423
   Insn 202(l0): point = 426
   Insn 201(l0): point = 428
   Insn 200(l0): point = 430
   Insn 197(l0): point = 433
   Insn 196(l0): point = 435
   Insn 195(l0): point = 437
   Insn 194(l0): point = 439
   Insn 190(l0): point = 442
   Insn 189(l0): point = 444
   Insn 188(l0): point = 446
   Insn 455(l0): point = 449
   Insn 183(l0): point = 451
   Insn 182(l0): point = 453
   Insn 179(l0): point = 456
   Insn 178(l0): point = 458
   Insn 177(l0): point = 460
   Insn 176(l0): point = 462
   Insn 174(l0): point = 465
   Insn 173(l0): point = 467
   Insn 172(l0): point = 469
   Insn 171(l0): point = 471
   Insn 168(l0): point = 474
   Insn 167(l0): point = 476
   Insn 166(l0): point = 478
   Insn 164(l0): point = 481
   Insn 163(l0): point = 483
   Insn 162(l0): point = 485
   Insn 161(l0): point = 487
   Insn 160(l0): point = 489
   Insn 159(l0): point = 491
   Insn 158(l0): point = 493
   Insn 157(l0): point = 495
   Insn 156(l0): point = 497
   Insn 155(l0): point = 499
   Insn 152(l0): point = 502
   Insn 151(l0): point = 504
   Insn 150(l0): point = 506
   Insn 148(l0): point = 509
   Insn 147(l0): point = 511
   Insn 146(l0): point = 513
   Insn 145(l0): point = 515
   Insn 144(l0): point = 517
   Insn 143(l0): point = 519
   Insn 142(l0): point = 521
   Insn 141(l0): point = 523
   Insn 140(l0): point = 525
   Insn 139(l0): point = 527
   Insn 453(l0): point = 530
   Insn 135(l0): point = 532
   Insn 134(l0): point = 534
   Insn 133(l0): point = 536
   Insn 132(l0): point = 538
   Insn 130(l0): point = 541
   Insn 129(l0): point = 543
   Insn 128(l0): point = 545
   Insn 451(l0): point = 548
   Insn 124(l0): point = 550
   Insn 123(l0): point = 552
   Insn 122(l0): point = 554
   Insn 121(l0): point = 556
   Insn 119(l0): point = 559
   Insn 118(l0): point = 561
   Insn 117(l0): point = 563
   Insn 116(l0): point = 565
   Insn 112(l0): point = 568
   Insn 111(l0): point = 570
   Insn 110(l0): point = 572
   Insn 467(l0): point = 575
   Insn 463(l0): point = 578
   Insn 107(l0): point = 580
   Insn 106(l0): point = 582
   Insn 105(l0): point = 584
   Insn 104(l0): point = 586
   Insn 103(l0): point = 588
   Insn 102(l0): point = 590
   Insn 101(l0): point = 592
   Insn 100(l0): point = 594
   Insn 99(l0): point = 596
   Insn 98(l0): point = 598
   Insn 97(l0): point = 600
   Insn 96(l0): point = 602
   Insn 95(l0): point = 604
   Insn 94(l0): point = 606
   Insn 93(l0): point = 608
   Insn 92(l0): point = 610
   Insn 91(l0): point = 612
   Insn 90(l0): point = 614
   Insn 89(l0): point = 616
   Insn 88(l0): point = 618
   Insn 87(l0): point = 620
   Insn 86(l0): point = 622
   Insn 85(l0): point = 624
   Insn 84(l0): point = 626
   Insn 83(l0): point = 628
   Insn 82(l0): point = 630
   Insn 81(l0): point = 632
   Insn 80(l0): point = 634
   Insn 79(l0): point = 636
   Insn 78(l0): point = 638
   Insn 77(l0): point = 640
   Insn 76(l0): point = 642
   Insn 75(l0): point = 644
   Insn 74(l0): point = 646
   Insn 73(l0): point = 648
   Insn 72(l0): point = 650
   Insn 71(l0): point = 652
   Insn 70(l0): point = 654
   Insn 69(l0): point = 656
   Insn 68(l0): point = 658
   Insn 67(l0): point = 660
   Insn 66(l0): point = 662
   Insn 65(l0): point = 664
   Insn 64(l0): point = 666
   Insn 58(l0): point = 669
   Insn 57(l0): point = 671
   Insn 56(l0): point = 673
   Insn 55(l0): point = 675
   Insn 54(l0): point = 677
   Insn 53(l0): point = 679
   Insn 52(l0): point = 681
   Insn 51(l0): point = 683
   Insn 50(l0): point = 685
   Insn 49(l0): point = 687
   Insn 48(l0): point = 689
   Insn 46(l0): point = 692
   Insn 45(l0): point = 694
   Insn 44(l0): point = 696
   Insn 42(l0): point = 698
   Insn 41(l0): point = 700
   Insn 40(l0): point = 702
   Insn 39(l0): point = 704
   Insn 38(l0): point = 706
   Insn 37(l0): point = 708
   Insn 35(l0): point = 711
   Insn 34(l0): point = 713
   Insn 449(l0): point = 716
   Insn 30(l0): point = 718
   Insn 29(l0): point = 720
   Insn 28(l0): point = 722
   Insn 27(l0): point = 724
   Insn 26(l0): point = 726
   Insn 25(l0): point = 728
   Insn 24(l0): point = 730
   Insn 23(l0): point = 732
   Insn 22(l0): point = 734
   Insn 447(l0): point = 737
   Insn 17(l0): point = 739
   Insn 15(l0): point = 742
   Insn 14(l0): point = 744
   Insn 13(l0): point = 746
   Insn 12(l0): point = 748
   Insn 11(l0): point = 750
   Insn 10(l0): point = 752
   Insn 9(l0): point = 754
   Insn 5(l0): point = 756
   Insn 4(l0): point = 758
   Insn 3(l0): point = 760
   Insn 2(l0): point = 762
 a0(r238): [3..4]
 a1(r134): [737..739] [5..7]
 a2(r381): [13..14]
 a3(r380): [13..16]
 a4(r379): [20..21]
 a5(r378): [24..25]
 a6(r377): [26..27]
 a7(r376): [33..34]
 a8(r375): [33..36]
 a9(r374): [40..41]
 a10(r373): [42..43]
 a11(r372): [49..50]
 a12(r371): [49..52]
 a13(r370): [56..57]
 a14(r369): [58..59]
 a15(r368): [58..61]
 a16(r233): [64..75]
 a17(r237): [64..65]
 a18(r236): [66..67]
 a19(r367): [68..69]
 a20(r235): [70..71]
 a21(r234): [70..73]
 a22(r232): [76..79]
 a23(r366): [76..77]
 a24(r231): [80..81]
 a25(r226): [84..95]
 a26(r230): [84..85]
 a27(r229): [86..87]
 a28(r365): [88..89]
 a29(r228): [90..91]
 a30(r227): [90..93]
 a31(r225): [96..99]
 a32(r364): [96..97]
 a33(r224): [100..101]
 a34(r219): [104..115]
 a35(r223): [104..105]
 a36(r222): [106..107]
 a37(r363): [108..109]
 a38(r221): [110..111]
 a39(r220): [110..113]
 a40(r218): [116..119]
 a41(r362): [116..117]
 a42(r217): [120..121]
 a43(r212): [124..135]
 a44(r216): [124..125]
 a45(r215): [126..127]
 a46(r361): [128..129]
 a47(r214): [130..131]
 a48(r213): [130..133]
 a49(r211): [136..139]
 a50(r360): [136..137]
 a51(r210): [140..141]
 a52(r359): [145..146]
 a53(r358): [147..148]
 a54(r357): [151..152]
 a55(r356): [153..154]
 a56(r355): [160..161]
 a57(r354): [164..165]
 a58(r209): [166..167]
 a59(r208): [168..171]
 a60(r353): [168..169]
 a61(r207): [172..173]
 a62(r352): [176..177]
 a63(r206): [178..179]
 a64(r205): [180..183]
 a65(r351): [180..181]
 a66(r204): [184..185]
 a67(r203): [188..189]
 a68(r350): [190..191]
 a69(r202): [192..193]
 a70(r196): [192..219]
 a71(r201): [194..195]
 a72(r349): [196..197]
 a73(r348): [202..205]
 a74(r347): [204..207]
 a75(r200): [206..209]
 a76(r199): [210..211]
 a77(r198): [212..215]
 a78(r346): [212..213]
 a79(r197): [216..217]
 a80(r195): [220..221]
 a81(r345): [222..223]
 a82(r344): [228..231]
 a83(r343): [230..233]
 a84(r194): [232..235]
 a85(r193): [236..237]
 a86(r192): [238..241]
 a87(r342): [238..239]
 a88(r191): [242..243]
 a89(r190): [246..247]
 a90(r341): [248..249]
 a91(r189): [250..251]
 a92(r183): [250..277]
 a93(r188): [252..253]
 a94(r340): [254..255]
 a95(r339): [260..263]
 a96(r338): [262..265]
 a97(r187): [264..267]
 a98(r186): [268..269]
 a99(r185): [270..273]
 a100(r337): [270..271]
 a101(r184): [274..275]
 a102(r182): [278..279]
 a103(r336): [280..281]
 a104(r335): [286..289]
 a105(r334): [288..291]
 a106(r181): [290..293]
 a107(r180): [294..295]
 a108(r179): [296..299]
 a109(r333): [296..297]
 a110(r178): [300..301]
 a111(r332): [304..305]
 a112(r331): [306..307]
 a113(r330): [306..309]
 a114(r329): [315..316]
 a115(r328): [320..321]
 a116(r327): [322..323]
 a117(r326): [326..327]
 a118(r325): [328..329]
 a119(r324): [335..336]
 a120(r177): [340..341]
 a121(r323): [342..343]
 a122(r322): [344..345]
 a123(r176): [346..347]
 a124(r321): [353..354]
 a125(r175): [357..358]
 a126(r320): [359..360]
 a127(r319): [361..362]
 a128(r174): [363..364]
 a129(r173): [365..366]
 a130(r318): [367..368]
 a131(r317): [369..370]
 a132(r315): [369..374]
 a133(r316): [371..372]
 a134(r314): [377..378]
 a135(r313): [379..380]
 a136(r312): [381..382]
 a137(r311): [381..384]
 a138(r172): [383..386]
 a139(r310): [387..388]
 a140(r309): [391..392]
 a141(r308): [393..394]
 a142(r307): [393..396]
 a143(r306): [402..403]
 a144(r305): [406..407]
 a145(r304): [408..409]
 a146(r303): [413..414]
 a147(r302): [420..421]
 a148(r301): [422..423]
 a149(r300): [429..430]
 a150(r299): [436..437]
 a151(r298): [436..439]
 a152(r297): [443..444]
 a153(r296): [445..446]
 a154(r295): [452..453]
 a155(r294): [459..460]
 a156(r293): [459..462]
 a157(r292): [468..469]
 a158(r291): [468..471]
 a159(r290): [475..476]
 a160(r289): [477..478]
 a161(r288): [484..485]
 a162(r287): [488..489]
 a163(r171): [490..491]
 a164(r170): [492..493]
 a165(r169): [494..497]
 a166(r286): [494..495]
 a167(r168): [498..499]
 a168(r285): [503..504]
 a169(r284): [505..506]
 a170(r283): [512..513]
 a171(r282): [516..517]
 a172(r167): [518..519]
 a173(r166): [520..521]
 a174(r165): [522..525]
 a175(r281): [522..523]
 a176(r164): [526..527]
 a177(r280): [533..534]
 a178(r279): [537..538]
 a179(r278): [544..545]
 a180(r277): [551..552]
 a181(r276): [555..556]
 a182(r275): [562..563]
 a183(r274): [562..565]
 a184(r273): [569..570]
 a185(r272): [571..572]
 a186(r163): [581..584]
 a187(r271): [581..582]
 a188(r162): [585..588]
 a189(r270): [585..586]
 a190(r161): [589..590]
 a191(r156): [593..604]
 a192(r160): [593..594]
 a193(r159): [595..596]
 a194(r158): [597..600]
 a195(r269): [597..598]
 a196(r157): [601..602]
 a197(r155): [605..608]
 a198(r268): [605..606]
 a199(r154): [609..610]
 a200(r267): [613..614]
 a201(r153): [615..616]
 a202(r152): [617..620]
 a203(r266): [617..618]
 a204(r151): [621..622]
 a205(r150): [625..628]
 a206(r265): [625..626]
 a207(r149): [629..632]
 a208(r264): [629..630]
 a209(r148): [633..634]
 a210(r143): [637..648]
 a211(r147): [637..638]
 a212(r146): [639..640]
 a213(r145): [641..644]
 a214(r263): [641..642]
 a215(r144): [645..646]
 a216(r142): [649..652]
 a217(r262): [649..650]
 a218(r141): [653..654]
 a219(r261): [657..658]
 a220(r140): [659..660]
 a221(r139): [661..664]
 a222(r260): [661..662]
 a223(r138): [665..666]
 a224(r259): [672..673]
 a225(r258): [672..675]
 a226(r257): [678..679]
 a227(r256): [680..681]
 a228(r137): [680..683]
 a229(r255): [684..685]
 a230(r136): [684..687]
 a231(r254): [688..689]
 a232(r253): [695..696]
 a233(r135): [695..698]
 a234(r252): [699..700]
 a235(r251): [699..702]
 a236(r250): [705..706]
 a237(r249): [707..708]
 a238(r248): [712..713]
 a239(r247): [719..720]
 a240(r246): [723..724]
 a241(r245): [727..728]
 a242(r244): [729..730]
 a243(r243): [733..734]
 a244(r242): [745..746]
 a245(r241): [749..750]
 a246(r240): [751..752]
 a247(r239): [751..754]
Compressing live ranges: from 765 to 386 - 50%
Ranges after the compression:
 a0(r238): [0..1]
 a1(r134): [378..379] [2..3]
 a2(r381): [4..5]
 a3(r380): [4..5]
 a4(r379): [6..7]
 a5(r378): [8..9]
 a6(r377): [10..11]
 a7(r376): [12..13]
 a8(r375): [12..13]
 a9(r374): [14..15]
 a10(r373): [16..17]
 a11(r372): [18..19]
 a12(r371): [18..19]
 a13(r370): [20..21]
 a14(r369): [22..23]
 a15(r368): [22..23]
 a16(r233): [24..31]
 a17(r237): [24..25]
 a18(r236): [26..27]
 a19(r367): [28..29]
 a20(r235): [30..31]
 a21(r234): [30..31]
 a22(r232): [32..33]
 a23(r366): [32..33]
 a24(r231): [34..35]
 a25(r226): [36..43]
 a26(r230): [36..37]
 a27(r229): [38..39]
 a28(r365): [40..41]
 a29(r228): [42..43]
 a30(r227): [42..43]
 a31(r225): [44..45]
 a32(r364): [44..45]
 a33(r224): [46..47]
 a34(r219): [48..55]
 a35(r223): [48..49]
 a36(r222): [50..51]
 a37(r363): [52..53]
 a38(r221): [54..55]
 a39(r220): [54..55]
 a40(r218): [56..57]
 a41(r362): [56..57]
 a42(r217): [58..59]
 a43(r212): [60..67]
 a44(r216): [60..61]
 a45(r215): [62..63]
 a46(r361): [64..65]
 a47(r214): [66..67]
 a48(r213): [66..67]
 a49(r211): [68..69]
 a50(r360): [68..69]
 a51(r210): [70..71]
 a52(r359): [72..73]
 a53(r358): [74..75]
 a54(r357): [76..77]
 a55(r356): [78..79]
 a56(r355): [80..81]
 a57(r354): [82..83]
 a58(r209): [84..85]
 a59(r208): [86..87]
 a60(r353): [86..87]
 a61(r207): [88..89]
 a62(r352): [90..91]
 a63(r206): [92..93]
 a64(r205): [94..95]
 a65(r351): [94..95]
 a66(r204): [96..97]
 a67(r203): [98..99]
 a68(r350): [100..101]
 a69(r202): [102..103]
 a70(r196): [102..117]
 a71(r201): [104..105]
 a72(r349): [106..107]
 a73(r348): [108..109]
 a74(r347): [108..111]
 a75(r200): [110..111]
 a76(r199): [112..113]
 a77(r198): [114..115]
 a78(r346): [114..115]
 a79(r197): [116..117]
 a80(r195): [118..119]
 a81(r345): [120..121]
 a82(r344): [122..123]
 a83(r343): [122..125]
 a84(r194): [124..125]
 a85(r193): [126..127]
 a86(r192): [128..129]
 a87(r342): [128..129]
 a88(r191): [130..131]
 a89(r190): [132..133]
 a90(r341): [134..135]
 a91(r189): [136..137]
 a92(r183): [136..151]
 a93(r188): [138..139]
 a94(r340): [140..141]
 a95(r339): [142..143]
 a96(r338): [142..145]
 a97(r187): [144..145]
 a98(r186): [146..147]
 a99(r185): [148..149]
 a100(r337): [148..149]
 a101(r184): [150..151]
 a102(r182): [152..153]
 a103(r336): [154..155]
 a104(r335): [156..157]
 a105(r334): [156..159]
 a106(r181): [158..159]
 a107(r180): [160..161]
 a108(r179): [162..163]
 a109(r333): [162..163]
 a110(r178): [164..165]
 a111(r332): [166..167]
 a112(r331): [168..169]
 a113(r330): [168..169]
 a114(r329): [170..171]
 a115(r328): [172..173]
 a116(r327): [174..175]
 a117(r326): [176..177]
 a118(r325): [178..179]
 a119(r324): [180..181]
 a120(r177): [182..183]
 a121(r323): [184..185]
 a122(r322): [186..187]
 a123(r176): [188..189]
 a124(r321): [190..191]
 a125(r175): [192..193]
 a126(r320): [194..195]
 a127(r319): [196..197]
 a128(r174): [198..199]
 a129(r173): [200..201]
 a130(r318): [202..203]
 a131(r317): [204..205]
 a132(r315): [204..207]
 a133(r316): [206..207]
 a134(r314): [208..209]
 a135(r313): [210..211]
 a136(r312): [212..213]
 a137(r311): [212..215]
 a138(r172): [214..215]
 a139(r310): [216..217]
 a140(r309): [218..219]
 a141(r308): [220..221]
 a142(r307): [220..221]
 a143(r306): [222..223]
 a144(r305): [224..225]
 a145(r304): [226..227]
 a146(r303): [228..229]
 a147(r302): [230..231]
 a148(r301): [232..233]
 a149(r300): [234..235]
 a150(r299): [236..237]
 a151(r298): [236..237]
 a152(r297): [238..239]
 a153(r296): [240..241]
 a154(r295): [242..243]
 a155(r294): [244..245]
 a156(r293): [244..245]
 a157(r292): [246..247]
 a158(r291): [246..247]
 a159(r290): [248..249]
 a160(r289): [250..251]
 a161(r288): [252..253]
 a162(r287): [254..255]
 a163(r171): [256..257]
 a164(r170): [258..259]
 a165(r169): [260..261]
 a166(r286): [260..261]
 a167(r168): [262..263]
 a168(r285): [264..265]
 a169(r284): [266..267]
 a170(r283): [268..269]
 a171(r282): [270..271]
 a172(r167): [272..273]
 a173(r166): [274..275]
 a174(r165): [276..277]
 a175(r281): [276..277]
 a176(r164): [278..279]
 a177(r280): [280..281]
 a178(r279): [282..283]
 a179(r278): [284..285]
 a180(r277): [286..287]
 a181(r276): [288..289]
 a182(r275): [290..291]
 a183(r274): [290..291]
 a184(r273): [292..293]
 a185(r272): [294..295]
 a186(r163): [296..297]
 a187(r271): [296..297]
 a188(r162): [298..299]
 a189(r270): [298..299]
 a190(r161): [300..301]
 a191(r156): [302..309]
 a192(r160): [302..303]
 a193(r159): [304..305]
 a194(r158): [306..307]
 a195(r269): [306..307]
 a196(r157): [308..309]
 a197(r155): [310..311]
 a198(r268): [310..311]
 a199(r154): [312..313]
 a200(r267): [314..315]
 a201(r153): [316..317]
 a202(r152): [318..319]
 a203(r266): [318..319]
 a204(r151): [320..321]
 a205(r150): [322..323]
 a206(r265): [322..323]
 a207(r149): [324..325]
 a208(r264): [324..325]
 a209(r148): [326..327]
 a210(r143): [328..335]
 a211(r147): [328..329]
 a212(r146): [330..331]
 a213(r145): [332..333]
 a214(r263): [332..333]
 a215(r144): [334..335]
 a216(r142): [336..337]
 a217(r262): [336..337]
 a218(r141): [338..339]
 a219(r261): [340..341]
 a220(r140): [342..343]
 a221(r139): [344..345]
 a222(r260): [344..345]
 a223(r138): [346..347]
 a224(r259): [348..349]
 a225(r258): [348..349]
 a226(r257): [350..351]
 a227(r256): [352..353]
 a228(r137): [352..353]
 a229(r255): [354..355]
 a230(r136): [354..355]
 a231(r254): [356..357]
 a232(r253): [358..359]
 a233(r135): [358..359]
 a234(r252): [360..361]
 a235(r251): [360..361]
 a236(r250): [362..363]
 a237(r249): [364..365]
 a238(r248): [366..367]
 a239(r247): [368..369]
 a240(r246): [370..371]
 a241(r245): [372..373]
 a242(r244): [374..375]
 a243(r243): [376..377]
 a244(r242): [380..381]
 a245(r241): [382..383]
 a246(r240): [384..385]
 a247(r239): [384..385]
  regions=7, blocks=43, points=386
    allocnos=248 (big 0), copies=0, conflicts=0, ranges=249
Disposition:
    1:r134 l0     3  233:r135 l0     2  230:r136 l0     2  228:r137 l0     2
  223:r138 l0     3  221:r139 l0     3  220:r140 l0     3  218:r141 l0     3
  216:r142 l0     3  210:r143 l0     3  215:r144 l0     2  213:r145 l0     2
  212:r146 l0     2  211:r147 l0     2  209:r148 l0     3  207:r149 l0     3
  205:r150 l0     3  204:r151 l0     3  202:r152 l0     3  201:r153 l0     3
  199:r154 l0     3  197:r155 l0     3  191:r156 l0     3  196:r157 l0     2
  194:r158 l0     2  193:r159 l0     2  192:r160 l0     2  190:r161 l0     3
  188:r162 l0     3  186:r163 l0     3  176:r164 l0     3  174:r165 l0     3
  173:r166 l0     3  172:r167 l0     3  167:r168 l0     3  165:r169 l0     3
  164:r170 l0     3  163:r171 l0     3  138:r172 l0     3  129:r173 l0     3
  128:r174 l0     3  125:r175 l0     3  123:r176 l0     3  120:r177 l0     3
  110:r178 l0     3  108:r179 l0     3  107:r180 l0     3  106:r181 l0     3
  102:r182 l0     3   92:r183 l0     4  101:r184 l0     3   99:r185 l0     3
   98:r186 l0     3   97:r187 l0     3   93:r188 l0     3   91:r189 l0     3
   89:r190 l0     3   88:r191 l0     3   86:r192 l0     3   85:r193 l0     3
   84:r194 l0     3   80:r195 l0     3   70:r196 l0     4   79:r197 l0     3
   77:r198 l0     3   76:r199 l0     3   75:r200 l0     3   71:r201 l0     3
   69:r202 l0     3   67:r203 l0     3   66:r204 l0     3   64:r205 l0     3
   63:r206 l0     3   61:r207 l0     3   59:r208 l0     3   58:r209 l0     3
   51:r210 l0     3   49:r211 l0     3   43:r212 l0     3   48:r213 l0     1
   47:r214 l0     2   45:r215 l0     2   44:r216 l0     2   42:r217 l0     3
   40:r218 l0     3   34:r219 l0     3   39:r220 l0     1   38:r221 l0     2
   36:r222 l0     2   35:r223 l0     2   33:r224 l0     3   31:r225 l0     3
   25:r226 l0     3   30:r227 l0     1   29:r228 l0     2   27:r229 l0     2
   26:r230 l0     2   24:r231 l0     3   22:r232 l0     3   16:r233 l0     3
   21:r234 l0     1   20:r235 l0     2   18:r236 l0     2   17:r237 l0     2
    0:r238 l0     3  247:r239 l0     2  246:r240 l0     3  245:r241 l0     3
  244:r242 l0     3  243:r243 l0     3  242:r244 l0     3  241:r245 l0     3
  240:r246 l0     3  239:r247 l0     3  238:r248 l0     3  237:r249 l0     3
  236:r250 l0     3  235:r251 l0     2  234:r252 l0     3  232:r253 l0     3
  231:r254 l0     3  229:r255 l0     3  227:r256 l0     3  226:r257 l0     3
  225:r258 l0     2  224:r259 l0     3  222:r260 l0     2  219:r261 l0     3
  217:r262 l0     2  214:r263 l0     1  208:r264 l0     2  206:r265 l0     2
  203:r266 l0     2  200:r267 l0     3  198:r268 l0     2  195:r269 l0     1
  189:r270 l0     2  187:r271 l0     2  185:r272 l0     3  184:r273 l0     3
  183:r274 l0     2  182:r275 l0     3  181:r276 l0     3  180:r277 l0     3
  179:r278 l0     3  178:r279 l0     3  177:r280 l0     3  175:r281 l0     2
  171:r282 l0     3  170:r283 l0     3  169:r284 l0     3  168:r285 l0     3
  166:r286 l0     2  162:r287 l0     3  161:r288 l0     3  160:r289 l0     3
  159:r290 l0     3  158:r291 l0     2  157:r292 l0     3  156:r293 l0     2
  155:r294 l0     3  154:r295 l0     3  153:r296 l0     3  152:r297 l0     3
  151:r298 l0     2  150:r299 l0     3  149:r300 l0     3  148:r301 l0     3
  147:r302 l0     3  146:r303 l0     3  145:r304 l0     3  144:r305 l0     3
  143:r306 l0     3  142:r307 l0     2  141:r308 l0     3  140:r309 l0     3
  139:r310 l0     3  137:r311 l0     2  136:r312 l0     3  135:r313 l0     3
  134:r314 l0     3  132:r315 l0     2  133:r316 l0     3  131:r317 l0     3
  130:r318 l0     3  127:r319 l0     3  126:r320 l0     3  124:r321 l0     3
  122:r322 l0     3  121:r323 l0     3  119:r324 l0     3  118:r325 l0     3
  117:r326 l0     3  116:r327 l0     3  115:r328 l0     3  114:r329 l0     3
  113:r330 l0     2  112:r331 l0     3  111:r332 l0     3  109:r333 l0     2
  105:r334 l0     2  104:r335 l0     3  103:r336 l0     3  100:r337 l0     2
   96:r338 l0     2   95:r339 l0     3   94:r340 l0     3   90:r341 l0     3
   87:r342 l0     2   83:r343 l0     2   82:r344 l0     3   81:r345 l0     3
   78:r346 l0     2   74:r347 l0     2   73:r348 l0     3   72:r349 l0     3
   68:r350 l0     3   65:r351 l0     2   62:r352 l0     3   60:r353 l0     2
   57:r354 l0     3   56:r355 l0     3   55:r356 l0     3   54:r357 l0     3
   53:r358 l0     3   52:r359 l0     3   50:r360 l0     2   46:r361 l0     2
   41:r362 l0     2   37:r363 l0     2   32:r364 l0     2   28:r365 l0     2
   23:r366 l0     2   19:r367 l0     2   15:r368 l0     2   14:r369 l0     3
   13:r370 l0     3   12:r371 l0     2   11:r372 l0     3   10:r373 l0     3
    9:r374 l0     3    8:r375 l0     2    7:r376 l0     3    6:r377 l0     3
    5:r378 l0     3    4:r379 l0     3    3:r380 l0     2    2:r381 l0     3
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 3, 13, 14, dead_or_set: 0
insn=3, live_throughout: 2, 3, 13, 14, dead_or_set: 1
insn=4, live_throughout: 3, 13, 14, dead_or_set: 2
insn=5, live_throughout: 13, 14, dead_or_set: 3
insn=9, live_throughout: 13, 14, dead_or_set: 239
insn=10, live_throughout: 13, 14, 239, dead_or_set: 240
insn=11, live_throughout: 13, 14, dead_or_set: 239, 240, 241
insn=12, live_throughout: 13, 14, dead_or_set: 241
insn=13, live_throughout: 13, 14, dead_or_set: 242
insn=14, live_throughout: 13, 14, dead_or_set: 242
insn=15, live_throughout: 13, 14, dead_or_set: 
insn=17, live_throughout: 13, 14, dead_or_set: 134
insn=447, live_throughout: 13, 14, 134, dead_or_set: 
insn=20, live_throughout: 13, 14, dead_or_set: 
insn=22, live_throughout: 13, 14, dead_or_set: 243
insn=23, live_throughout: 13, 14, dead_or_set: 243
insn=24, live_throughout: 13, 14, dead_or_set: 244
insn=25, live_throughout: 13, 14, dead_or_set: 244, 245
insn=26, live_throughout: 13, 14, dead_or_set: 245
insn=27, live_throughout: 13, 14, dead_or_set: 246
insn=28, live_throughout: 13, 14, dead_or_set: 246
insn=29, live_throughout: 13, 14, dead_or_set: 247
insn=30, live_throughout: 13, 14, dead_or_set: 247
insn=449, live_throughout: 13, 14, dead_or_set: 
insn=115, live_throughout: 13, 14, dead_or_set: 
insn=34, live_throughout: 13, 14, dead_or_set: 248
insn=35, live_throughout: 13, 14, dead_or_set: 248
insn=43, live_throughout: 13, 14, dead_or_set: 
insn=37, live_throughout: 13, 14, dead_or_set: 249
insn=38, live_throughout: 13, 14, dead_or_set: 249, 250
insn=39, live_throughout: 13, 14, dead_or_set: 250
insn=40, live_throughout: 13, 14, dead_or_set: 251
insn=41, live_throughout: 13, 14, 251, dead_or_set: 252
insn=42, live_throughout: 13, 14, dead_or_set: 135, 251, 252
insn=44, live_throughout: 13, 14, 135, dead_or_set: 253
insn=45, live_throughout: 13, 14, dead_or_set: 135, 253
insn=46, live_throughout: 13, 14, dead_or_set: 
insn=48, live_throughout: 13, 14, dead_or_set: 254
insn=49, live_throughout: 13, 14, dead_or_set: 136, 254
insn=50, live_throughout: 13, 14, 136, dead_or_set: 255
insn=51, live_throughout: 13, 14, dead_or_set: 136, 137, 255
insn=52, live_throughout: 13, 14, 137, dead_or_set: 256
insn=53, live_throughout: 13, 14, dead_or_set: 137, 256, 257
insn=54, live_throughout: 13, 14, dead_or_set: 257
insn=55, live_throughout: 13, 14, dead_or_set: 258
insn=56, live_throughout: 13, 14, 258, dead_or_set: 259
insn=57, live_throughout: 13, 14, dead_or_set: 258, 259
insn=58, live_throughout: 13, 14, dead_or_set: 
insn=62, live_throughout: 13, 14, dead_or_set: 
insn=64, live_throughout: 13, 14, dead_or_set: 138
insn=65, live_throughout: 13, 14, dead_or_set: 138, 139
insn=66, live_throughout: 13, 14, 139, dead_or_set: 260
insn=67, live_throughout: 13, 14, dead_or_set: 139, 140, 260
insn=68, live_throughout: 13, 14, dead_or_set: 140, 261
insn=69, live_throughout: 13, 14, dead_or_set: 261
insn=70, live_throughout: 13, 14, dead_or_set: 141
insn=71, live_throughout: 13, 14, dead_or_set: 141, 142
insn=72, live_throughout: 13, 14, 142, dead_or_set: 262
insn=73, live_throughout: 13, 14, dead_or_set: 142, 143, 262
insn=74, live_throughout: 13, 14, 143, dead_or_set: 144
insn=75, live_throughout: 13, 14, 143, dead_or_set: 144, 145
insn=76, live_throughout: 13, 14, 143, 145, dead_or_set: 263
insn=77, live_throughout: 13, 14, 143, dead_or_set: 145, 146, 263
insn=78, live_throughout: 13, 14, 143, dead_or_set: 146, 147
insn=79, live_throughout: 13, 14, dead_or_set: 143, 147
insn=80, live_throughout: 13, 14, dead_or_set: 148
insn=81, live_throughout: 13, 14, dead_or_set: 148, 149
insn=82, live_throughout: 13, 14, 149, dead_or_set: 264
insn=83, live_throughout: 13, 14, dead_or_set: 149, 150, 264
insn=84, live_throughout: 13, 14, 150, dead_or_set: 265
insn=85, live_throughout: 13, 14, dead_or_set: 150, 265
insn=86, live_throughout: 13, 14, dead_or_set: 151
insn=87, live_throughout: 13, 14, dead_or_set: 151, 152
insn=88, live_throughout: 13, 14, 152, dead_or_set: 266
insn=89, live_throughout: 13, 14, dead_or_set: 152, 153, 266
insn=90, live_throughout: 13, 14, dead_or_set: 153, 267
insn=91, live_throughout: 13, 14, dead_or_set: 267
insn=92, live_throughout: 13, 14, dead_or_set: 154
insn=93, live_throughout: 13, 14, dead_or_set: 154, 155
insn=94, live_throughout: 13, 14, 155, dead_or_set: 268
insn=95, live_throughout: 13, 14, dead_or_set: 155, 156, 268
insn=96, live_throughout: 13, 14, 156, dead_or_set: 157
insn=97, live_throughout: 13, 14, 156, dead_or_set: 157, 158
insn=98, live_throughout: 13, 14, 156, 158, dead_or_set: 269
insn=99, live_throughout: 13, 14, 156, dead_or_set: 158, 159, 269
insn=100, live_throughout: 13, 14, 156, dead_or_set: 159, 160
insn=101, live_throughout: 13, 14, dead_or_set: 156, 160
insn=102, live_throughout: 13, 14, dead_or_set: 161
insn=103, live_throughout: 13, 14, dead_or_set: 161, 162
insn=104, live_throughout: 13, 14, 162, dead_or_set: 270
insn=105, live_throughout: 13, 14, dead_or_set: 162, 163, 270
insn=106, live_throughout: 13, 14, 163, dead_or_set: 271
insn=107, live_throughout: 13, 14, dead_or_set: 163, 271
insn=463, live_throughout: 13, 14, dead_or_set: 
insn=466, live_throughout: 13, 14, dead_or_set: 
insn=467, live_throughout: 13, 14, dead_or_set: 
insn=108, live_throughout: 13, 14, dead_or_set: 
insn=110, live_throughout: 13, 14, dead_or_set: 272
insn=111, live_throughout: 13, 14, dead_or_set: 272, 273
insn=112, live_throughout: 13, 14, dead_or_set: 273
insn=113, live_throughout: 13, 14, dead_or_set: 
insn=116, live_throughout: 13, 14, dead_or_set: 274
insn=117, live_throughout: 13, 14, 274, dead_or_set: 275
insn=118, live_throughout: 13, 14, dead_or_set: 274, 275
insn=119, live_throughout: 13, 14, dead_or_set: 
insn=121, live_throughout: 13, 14, dead_or_set: 276
insn=122, live_throughout: 13, 14, dead_or_set: 276
insn=123, live_throughout: 13, 14, dead_or_set: 277
insn=124, live_throughout: 13, 14, dead_or_set: 277
insn=451, live_throughout: 13, 14, dead_or_set: 
insn=428, live_throughout: 13, 14, dead_or_set: 
insn=128, live_throughout: 13, 14, dead_or_set: 278
insn=129, live_throughout: 13, 14, dead_or_set: 278
insn=130, live_throughout: 13, 14, dead_or_set: 
insn=132, live_throughout: 13, 14, dead_or_set: 279
insn=133, live_throughout: 13, 14, dead_or_set: 279
insn=134, live_throughout: 13, 14, dead_or_set: 280
insn=135, live_throughout: 13, 14, dead_or_set: 280
insn=453, live_throughout: 13, 14, dead_or_set: 
insn=193, live_throughout: 13, 14, dead_or_set: 
insn=139, live_throughout: 13, 14, dead_or_set: 164
insn=140, live_throughout: 13, 14, dead_or_set: 164, 165
insn=141, live_throughout: 13, 14, 165, dead_or_set: 281
insn=142, live_throughout: 13, 14, dead_or_set: 165, 166, 281
insn=143, live_throughout: 13, 14, dead_or_set: 166, 167
insn=144, live_throughout: 13, 14, dead_or_set: 167, 282
insn=145, live_throughout: 13, 14, dead_or_set: 282
insn=146, live_throughout: 13, 14, dead_or_set: 283
insn=147, live_throughout: 13, 14, dead_or_set: 283
insn=148, live_throughout: 13, 14, dead_or_set: 
insn=150, live_throughout: 13, 14, dead_or_set: 284
insn=151, live_throughout: 13, 14, dead_or_set: 284, 285
insn=152, live_throughout: 13, 14, dead_or_set: 285
insn=153, live_throughout: 13, 14, dead_or_set: 
insn=155, live_throughout: 13, 14, dead_or_set: 168
insn=156, live_throughout: 13, 14, dead_or_set: 168, 169
insn=157, live_throughout: 13, 14, 169, dead_or_set: 286
insn=158, live_throughout: 13, 14, dead_or_set: 169, 170, 286
insn=159, live_throughout: 13, 14, dead_or_set: 170, 171
insn=160, live_throughout: 13, 14, dead_or_set: 171, 287
insn=161, live_throughout: 13, 14, dead_or_set: 287
insn=162, live_throughout: 13, 14, dead_or_set: 288
insn=163, live_throughout: 13, 14, dead_or_set: 288
insn=164, live_throughout: 13, 14, dead_or_set: 
insn=166, live_throughout: 13, 14, dead_or_set: 289
insn=167, live_throughout: 13, 14, dead_or_set: 289, 290
insn=168, live_throughout: 13, 14, dead_or_set: 290
insn=169, live_throughout: 13, 14, dead_or_set: 
insn=171, live_throughout: 13, 14, dead_or_set: 291
insn=172, live_throughout: 13, 14, 291, dead_or_set: 292
insn=173, live_throughout: 13, 14, dead_or_set: 291, 292
insn=174, live_throughout: 13, 14, dead_or_set: 
insn=176, live_throughout: 13, 14, dead_or_set: 293
insn=177, live_throughout: 13, 14, 293, dead_or_set: 294
insn=178, live_throughout: 13, 14, dead_or_set: 293, 294
insn=179, live_throughout: 13, 14, dead_or_set: 
insn=180, live_throughout: 13, 14, dead_or_set: 
insn=182, live_throughout: 13, 14, dead_or_set: 295
insn=183, live_throughout: 13, 14, dead_or_set: 295
insn=455, live_throughout: 13, 14, dead_or_set: 
insn=186, live_throughout: 13, 14, dead_or_set: 
insn=188, live_throughout: 13, 14, dead_or_set: 296
insn=189, live_throughout: 13, 14, dead_or_set: 296, 297
insn=190, live_throughout: 13, 14, dead_or_set: 297
insn=191, live_throughout: 13, 14, dead_or_set: 
insn=194, live_throughout: 13, 14, dead_or_set: 298
insn=195, live_throughout: 13, 14, 298, dead_or_set: 299
insn=196, live_throughout: 13, 14, dead_or_set: 298, 299
insn=197, live_throughout: 13, 14, dead_or_set: 
insn=198, live_throughout: 13, 14, dead_or_set: 
insn=200, live_throughout: 13, 14, dead_or_set: 300
insn=201, live_throughout: 13, 14, dead_or_set: 300
insn=202, live_throughout: 13, 14, dead_or_set: 
insn=204, live_throughout: 13, 14, dead_or_set: 301
insn=205, live_throughout: 13, 14, dead_or_set: 301, 302
insn=206, live_throughout: 13, 14, dead_or_set: 302
insn=457, live_throughout: 13, 14, dead_or_set: 
insn=209, live_throughout: 13, 14, dead_or_set: 
insn=211, live_throughout: 13, 14, dead_or_set: 303
insn=212, live_throughout: 13, 14, dead_or_set: 303
insn=213, live_throughout: 13, 14, dead_or_set: 
insn=215, live_throughout: 13, 14, dead_or_set: 304
insn=216, live_throughout: 13, 14, dead_or_set: 304, 305
insn=217, live_throughout: 13, 14, dead_or_set: 305
insn=218, live_throughout: 13, 14, dead_or_set: 306
insn=219, live_throughout: 13, 14, dead_or_set: 306
insn=459, live_throughout: 13, 14, dead_or_set: 
insn=415, live_throughout: 13, 14, dead_or_set: 
insn=223, live_throughout: 13, 14, dead_or_set: 307
insn=224, live_throughout: 13, 14, 307, dead_or_set: 308
insn=225, live_throughout: 13, 14, dead_or_set: 307, 308, 309
insn=226, live_throughout: 13, 14, dead_or_set: 309
insn=227, live_throughout: 13, 14, dead_or_set: 310
insn=228, live_throughout: 13, 14, dead_or_set: 172, 310
insn=229, live_throughout: 13, 14, 172, dead_or_set: 311
insn=230, live_throughout: 13, 14, 311, dead_or_set: 172, 312
insn=231, live_throughout: 13, 14, dead_or_set: 311, 312, 313
insn=232, live_throughout: 13, 14, dead_or_set: 313, 314
insn=233, live_throughout: 13, 14, dead_or_set: 314
insn=234, live_throughout: 13, 14, dead_or_set: 315
insn=235, live_throughout: 13, 14, 315, dead_or_set: 316
insn=236, live_throughout: 13, 14, 315, dead_or_set: 316, 317
insn=237, live_throughout: 13, 14, dead_or_set: 315, 317, 318
insn=238, live_throughout: 13, 14, dead_or_set: 173, 318
insn=239, live_throughout: 13, 14, dead_or_set: 173, 174
insn=240, live_throughout: 13, 14, dead_or_set: 174, 319
insn=241, live_throughout: 13, 14, dead_or_set: 319, 320
insn=242, live_throughout: 13, 14, dead_or_set: 175, 320
insn=243, live_throughout: 13, 14, dead_or_set: 175
insn=244, live_throughout: 13, 14, dead_or_set: 321
insn=245, live_throughout: 13, 14, dead_or_set: 321
insn=246, live_throughout: 13, 14, dead_or_set: 
insn=248, live_throughout: 13, 14, dead_or_set: 176
insn=249, live_throughout: 13, 14, dead_or_set: 176, 322
insn=250, live_throughout: 13, 14, dead_or_set: 322, 323
insn=251, live_throughout: 13, 14, dead_or_set: 177, 323
insn=252, live_throughout: 13, 14, dead_or_set: 177
insn=253, live_throughout: 13, 14, dead_or_set: 
insn=255, live_throughout: 13, 14, dead_or_set: 324
insn=256, live_throughout: 13, 14, dead_or_set: 324
insn=257, live_throughout: 13, 14, dead_or_set: 
insn=259, live_throughout: 13, 14, dead_or_set: 325
insn=260, live_throughout: 13, 14, dead_or_set: 325, 326
insn=261, live_throughout: 13, 14, dead_or_set: 326
insn=262, live_throughout: 13, 14, dead_or_set: 327
insn=263, live_throughout: 13, 14, dead_or_set: 327, 328
insn=264, live_throughout: 13, 14, dead_or_set: 328
insn=265, live_throughout: 13, 14, dead_or_set: 
insn=267, live_throughout: 13, 14, dead_or_set: 329
insn=268, live_throughout: 13, 14, dead_or_set: 329
insn=461, live_throughout: 13, 14, dead_or_set: 
insn=404, live_throughout: 13, dead_or_set: 
insn=272, live_throughout: 13, dead_or_set: 330
insn=273, live_throughout: 13, 330, dead_or_set: 331
insn=274, live_throughout: 13, dead_or_set: 330, 331, 332
insn=275, live_throughout: 13, dead_or_set: 332
insn=276, live_throughout: 13, dead_or_set: 178
insn=277, live_throughout: 13, dead_or_set: 178, 179
insn=278, live_throughout: 13, 179, dead_or_set: 333
insn=279, live_throughout: 13, dead_or_set: 179, 180, 333
insn=280, live_throughout: 13, dead_or_set: 180, 181
insn=281, live_throughout: 13, 181, dead_or_set: 334
insn=282, live_throughout: 13, 334, dead_or_set: 181, 335
insn=283, live_throughout: 13, 335, dead_or_set: 0, 334
insn=284, live_throughout: 0, 13, dead_or_set: 1, 335
insn=285, live_throughout: 13, dead_or_set: 0, 1, 14
insn=286, live_throughout: 13, dead_or_set: 0, 336
insn=287, live_throughout: 13, dead_or_set: 182, 336
insn=288, live_throughout: 13, dead_or_set: 182, 183
insn=289, live_throughout: 13, 183, dead_or_set: 184
insn=290, live_throughout: 13, 183, dead_or_set: 184, 185
insn=291, live_throughout: 13, 183, 185, dead_or_set: 337
insn=292, live_throughout: 13, 183, dead_or_set: 185, 186, 337
insn=293, live_throughout: 13, 183, dead_or_set: 186, 187
insn=294, live_throughout: 13, 183, 187, dead_or_set: 338
insn=295, live_throughout: 13, 183, 338, dead_or_set: 187, 339
insn=296, live_throughout: 13, 183, 339, dead_or_set: 0, 338
insn=297, live_throughout: 0, 13, 183, dead_or_set: 1, 339
insn=298, live_throughout: 13, 183, dead_or_set: 0, 1, 14
insn=299, live_throughout: 13, 183, dead_or_set: 0, 340
insn=300, live_throughout: 13, 183, dead_or_set: 188, 340
insn=301, live_throughout: 13, 183, dead_or_set: 188, 189
insn=302, live_throughout: 13, dead_or_set: 183, 189, 341
insn=303, live_throughout: 13, dead_or_set: 190, 341
insn=304, live_throughout: 13, dead_or_set: 190
insn=305, live_throughout: 13, dead_or_set: 191
insn=306, live_throughout: 13, dead_or_set: 191, 192
insn=307, live_throughout: 13, 192, dead_or_set: 342
insn=308, live_throughout: 13, dead_or_set: 192, 193, 342
insn=309, live_throughout: 13, dead_or_set: 193, 194
insn=310, live_throughout: 13, 194, dead_or_set: 343
insn=311, live_throughout: 13, 343, dead_or_set: 194, 344
insn=312, live_throughout: 13, 344, dead_or_set: 0, 343
insn=313, live_throughout: 0, 13, dead_or_set: 1, 344
insn=314, live_throughout: 13, dead_or_set: 0, 1, 14
insn=315, live_throughout: 13, dead_or_set: 0, 345
insn=316, live_throughout: 13, dead_or_set: 195, 345
insn=317, live_throughout: 13, dead_or_set: 195, 196
insn=318, live_throughout: 13, 196, dead_or_set: 197
insn=319, live_throughout: 13, 196, dead_or_set: 197, 198
insn=320, live_throughout: 13, 196, 198, dead_or_set: 346
insn=321, live_throughout: 13, 196, dead_or_set: 198, 199, 346
insn=322, live_throughout: 13, 196, dead_or_set: 199, 200
insn=323, live_throughout: 13, 196, 200, dead_or_set: 347
insn=324, live_throughout: 13, 196, 347, dead_or_set: 200, 348
insn=325, live_throughout: 13, 196, 348, dead_or_set: 0, 347
insn=326, live_throughout: 0, 13, 196, dead_or_set: 1, 348
insn=327, live_throughout: 13, 196, dead_or_set: 0, 1, 14
insn=328, live_throughout: 13, 14, 196, dead_or_set: 0, 349
insn=329, live_throughout: 13, 14, 196, dead_or_set: 201, 349
insn=330, live_throughout: 13, 14, 196, dead_or_set: 201, 202
insn=331, live_throughout: 13, 14, dead_or_set: 196, 202, 350
insn=332, live_throughout: 13, 14, dead_or_set: 203, 350
insn=333, live_throughout: 13, 14, dead_or_set: 203
insn=334, live_throughout: 13, 14, dead_or_set: 204
insn=335, live_throughout: 13, 14, dead_or_set: 204, 205
insn=336, live_throughout: 13, 14, 205, dead_or_set: 351
insn=337, live_throughout: 13, 14, dead_or_set: 205, 206, 351
insn=338, live_throughout: 13, 14, dead_or_set: 206, 352
insn=339, live_throughout: 13, 14, dead_or_set: 352
insn=340, live_throughout: 13, 14, dead_or_set: 207
insn=341, live_throughout: 13, 14, dead_or_set: 207, 208
insn=342, live_throughout: 13, 14, 208, dead_or_set: 353
insn=343, live_throughout: 13, 14, dead_or_set: 208, 209, 353
insn=344, live_throughout: 13, 14, dead_or_set: 209, 354
insn=345, live_throughout: 13, 14, dead_or_set: 354
insn=346, live_throughout: 13, 14, dead_or_set: 355
insn=347, live_throughout: 13, 14, dead_or_set: 355
insn=348, live_throughout: 13, 14, dead_or_set: 
insn=350, live_throughout: 13, 14, dead_or_set: 356
insn=351, live_throughout: 13, 14, dead_or_set: 356, 357
insn=352, live_throughout: 13, 14, dead_or_set: 357
insn=353, live_throughout: 13, 14, dead_or_set: 358
insn=354, live_throughout: 13, 14, dead_or_set: 358, 359
insn=355, live_throughout: 13, 14, dead_or_set: 359
insn=356, live_throughout: 13, 14, dead_or_set: 
insn=358, live_throughout: 13, 14, dead_or_set: 210
insn=359, live_throughout: 13, 14, dead_or_set: 210, 211
insn=360, live_throughout: 13, 14, 211, dead_or_set: 360
insn=361, live_throughout: 13, 14, dead_or_set: 211, 212, 360
insn=362, live_throughout: 13, 14, 212, dead_or_set: 213
insn=363, live_throughout: 13, 14, 212, 213, dead_or_set: 214
insn=364, live_throughout: 13, 14, 212, dead_or_set: 213, 214, 361
insn=365, live_throughout: 13, 14, 212, dead_or_set: 215, 361
insn=366, live_throughout: 13, 14, 212, dead_or_set: 215, 216
insn=367, live_throughout: 13, 14, dead_or_set: 212, 216
insn=368, live_throughout: 13, 14, dead_or_set: 217
insn=369, live_throughout: 13, 14, dead_or_set: 217, 218
insn=370, live_throughout: 13, 14, 218, dead_or_set: 362
insn=371, live_throughout: 13, 14, dead_or_set: 218, 219, 362
insn=372, live_throughout: 13, 14, 219, dead_or_set: 220
insn=373, live_throughout: 13, 14, 219, 220, dead_or_set: 221
insn=374, live_throughout: 13, 14, 219, dead_or_set: 220, 221, 363
insn=375, live_throughout: 13, 14, 219, dead_or_set: 222, 363
insn=376, live_throughout: 13, 14, 219, dead_or_set: 222, 223
insn=377, live_throughout: 13, 14, dead_or_set: 219, 223
insn=378, live_throughout: 13, 14, dead_or_set: 224
insn=379, live_throughout: 13, 14, dead_or_set: 224, 225
insn=380, live_throughout: 13, 14, 225, dead_or_set: 364
insn=381, live_throughout: 13, 14, dead_or_set: 225, 226, 364
insn=382, live_throughout: 13, 14, 226, dead_or_set: 227
insn=383, live_throughout: 13, 14, 226, 227, dead_or_set: 228
insn=384, live_throughout: 13, 14, 226, dead_or_set: 227, 228, 365
insn=385, live_throughout: 13, 14, 226, dead_or_set: 229, 365
insn=386, live_throughout: 13, 14, 226, dead_or_set: 229, 230
insn=387, live_throughout: 13, 14, dead_or_set: 226, 230
insn=388, live_throughout: 13, 14, dead_or_set: 231
insn=389, live_throughout: 13, 14, dead_or_set: 231, 232
insn=390, live_throughout: 13, 14, 232, dead_or_set: 366
insn=391, live_throughout: 13, 14, dead_or_set: 232, 233, 366
insn=392, live_throughout: 13, 14, 233, dead_or_set: 234
insn=393, live_throughout: 13, 14, 233, 234, dead_or_set: 235
insn=394, live_throughout: 13, 14, 233, dead_or_set: 234, 235, 367
insn=395, live_throughout: 13, 14, 233, dead_or_set: 236, 367
insn=396, live_throughout: 13, 14, 233, dead_or_set: 236, 237
insn=397, live_throughout: 13, 14, dead_or_set: 233, 237
insn=398, live_throughout: 13, 14, dead_or_set: 368
insn=399, live_throughout: 13, 14, 368, dead_or_set: 369
insn=400, live_throughout: 13, 14, dead_or_set: 368, 369, 370
insn=401, live_throughout: 13, 14, dead_or_set: 370
insn=402, live_throughout: 13, 14, dead_or_set: 
insn=405, live_throughout: 13, 14, dead_or_set: 371
insn=406, live_throughout: 13, 14, 371, dead_or_set: 372
insn=407, live_throughout: 13, 14, dead_or_set: 371, 372
insn=408, live_throughout: 13, 14, dead_or_set: 
insn=410, live_throughout: 13, 14, dead_or_set: 373
insn=411, live_throughout: 13, 14, dead_or_set: 373, 374
insn=412, live_throughout: 13, 14, dead_or_set: 374
insn=413, live_throughout: 13, 14, dead_or_set: 
insn=416, live_throughout: 13, 14, dead_or_set: 375
insn=417, live_throughout: 13, 14, 375, dead_or_set: 376
insn=418, live_throughout: 13, 14, dead_or_set: 375, 376
insn=419, live_throughout: 13, 14, dead_or_set: 
insn=421, live_throughout: 13, 14, dead_or_set: 377
insn=422, live_throughout: 13, 14, dead_or_set: 377, 378
insn=423, live_throughout: 13, 14, dead_or_set: 378
insn=424, live_throughout: 13, 14, dead_or_set: 379
insn=425, live_throughout: 13, 14, dead_or_set: 379
insn=426, live_throughout: 13, 14, dead_or_set: 
insn=429, live_throughout: 13, 14, dead_or_set: 380
insn=430, live_throughout: 13, 14, 380, dead_or_set: 381
insn=431, live_throughout: 13, 14, dead_or_set: 380, 381
insn=432, live_throughout: 13, 14, dead_or_set: 
insn=434, live_throughout: 13, 14, dead_or_set: 134
insn=435, live_throughout: 13, 14, 134, dead_or_set: 
insn=437, live_throughout: 13, 14, dead_or_set: 134, 238
insn=441, live_throughout: 13, 14, dead_or_set: 0, 238
insn=444, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 434
changing reg in insn 17
changing reg in insn 437
changing reg in insn 42
changing reg in insn 45
changing reg in insn 49
changing reg in insn 51
changing reg in insn 51
changing reg in insn 53
changing reg in insn 64
changing reg in insn 65
changing reg in insn 65
changing reg in insn 67
changing reg in insn 67
changing reg in insn 68
changing reg in insn 70
changing reg in insn 71
changing reg in insn 71
changing reg in insn 73
changing reg in insn 73
changing reg in insn 79
changing reg in insn 74
changing reg in insn 75
changing reg in insn 75
changing reg in insn 77
changing reg in insn 77
changing reg in insn 78
changing reg in insn 78
changing reg in insn 80
changing reg in insn 81
changing reg in insn 81
changing reg in insn 83
changing reg in insn 83
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 87
changing reg in insn 89
changing reg in insn 89
changing reg in insn 90
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 95
changing reg in insn 95
changing reg in insn 101
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 99
changing reg in insn 99
changing reg in insn 100
changing reg in insn 100
changing reg in insn 102
changing reg in insn 103
changing reg in insn 103
changing reg in insn 105
changing reg in insn 105
changing reg in insn 107
changing reg in insn 139
changing reg in insn 140
changing reg in insn 140
changing reg in insn 142
changing reg in insn 142
changing reg in insn 143
changing reg in insn 143
changing reg in insn 155
changing reg in insn 156
changing reg in insn 156
changing reg in insn 158
changing reg in insn 158
changing reg in insn 159
changing reg in insn 159
changing reg in insn 228
changing reg in insn 230
changing reg in insn 238
changing reg in insn 239
changing reg in insn 242
changing reg in insn 248
changing reg in insn 251
changing reg in insn 276
changing reg in insn 277
changing reg in insn 277
changing reg in insn 279
changing reg in insn 279
changing reg in insn 280
changing reg in insn 280
changing reg in insn 287
changing reg in insn 288
changing reg in insn 302
changing reg in insn 289
changing reg in insn 290
changing reg in insn 290
changing reg in insn 292
changing reg in insn 292
changing reg in insn 293
changing reg in insn 293
changing reg in insn 300
changing reg in insn 301
changing reg in insn 302
changing reg in insn 303
changing reg in insn 305
changing reg in insn 306
changing reg in insn 306
changing reg in insn 308
changing reg in insn 308
changing reg in insn 309
changing reg in insn 309
changing reg in insn 316
changing reg in insn 317
changing reg in insn 331
changing reg in insn 318
changing reg in insn 319
changing reg in insn 319
changing reg in insn 321
changing reg in insn 321
changing reg in insn 322
changing reg in insn 322
changing reg in insn 329
changing reg in insn 330
changing reg in insn 331
changing reg in insn 332
changing reg in insn 334
changing reg in insn 335
changing reg in insn 335
changing reg in insn 337
changing reg in insn 337
changing reg in insn 338
changing reg in insn 340
changing reg in insn 341
changing reg in insn 341
changing reg in insn 343
changing reg in insn 343
changing reg in insn 344
changing reg in insn 358
changing reg in insn 359
changing reg in insn 359
changing reg in insn 361
changing reg in insn 361
changing reg in insn 367
changing reg in insn 362
changing reg in insn 364
changing reg in insn 363
changing reg in insn 364
changing reg in insn 365
changing reg in insn 366
changing reg in insn 368
changing reg in insn 369
changing reg in insn 369
changing reg in insn 371
changing reg in insn 371
changing reg in insn 377
changing reg in insn 372
changing reg in insn 374
changing reg in insn 373
changing reg in insn 374
changing reg in insn 375
changing reg in insn 376
changing reg in insn 378
changing reg in insn 379
changing reg in insn 379
changing reg in insn 381
changing reg in insn 381
changing reg in insn 387
changing reg in insn 382
changing reg in insn 384
changing reg in insn 383
changing reg in insn 384
changing reg in insn 385
changing reg in insn 386
changing reg in insn 388
changing reg in insn 389
changing reg in insn 389
changing reg in insn 391
changing reg in insn 391
changing reg in insn 397
changing reg in insn 392
changing reg in insn 394
changing reg in insn 393
changing reg in insn 394
changing reg in insn 395
changing reg in insn 396
changing reg in insn 437
changing reg in insn 441
changing reg in insn 9
changing reg in insn 11
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 34
changing reg in insn 35
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 42
changing reg in insn 41
changing reg in insn 42
changing reg in insn 44
changing reg in insn 45
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 57
changing reg in insn 56
changing reg in insn 57
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 72
changing reg in insn 73
changing reg in insn 76
changing reg in insn 77
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 94
changing reg in insn 95
changing reg in insn 98
changing reg in insn 99
changing reg in insn 104
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 110
changing reg in insn 111
changing reg in insn 111
changing reg in insn 112
changing reg in insn 116
changing reg in insn 118
changing reg in insn 117
changing reg in insn 118
changing reg in insn 121
changing reg in insn 122
changing reg in insn 123
changing reg in insn 124
changing reg in insn 128
changing reg in insn 129
changing reg in insn 132
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 141
changing reg in insn 142
changing reg in insn 144
changing reg in insn 145
changing reg in insn 146
changing reg in insn 147
changing reg in insn 150
changing reg in insn 151
changing reg in insn 151
changing reg in insn 152
changing reg in insn 157
changing reg in insn 158
changing reg in insn 160
changing reg in insn 161
changing reg in insn 162
changing reg in insn 163
changing reg in insn 166
changing reg in insn 167
changing reg in insn 167
changing reg in insn 168
changing reg in insn 171
changing reg in insn 173
changing reg in insn 172
changing reg in insn 173
changing reg in insn 176
changing reg in insn 178
changing reg in insn 177
changing reg in insn 178
changing reg in insn 182
changing reg in insn 183
changing reg in insn 188
changing reg in insn 189
changing reg in insn 189
changing reg in insn 190
changing reg in insn 194
changing reg in insn 196
changing reg in insn 195
changing reg in insn 196
changing reg in insn 200
changing reg in insn 201
changing reg in insn 204
changing reg in insn 205
changing reg in insn 205
changing reg in insn 206
changing reg in insn 211
changing reg in insn 212
changing reg in insn 215
changing reg in insn 216
changing reg in insn 216
changing reg in insn 217
changing reg in insn 218
changing reg in insn 219
changing reg in insn 223
changing reg in insn 225
changing reg in insn 224
changing reg in insn 225
changing reg in insn 225
changing reg in insn 226
changing reg in insn 227
changing reg in insn 228
changing reg in insn 229
changing reg in insn 231
changing reg in insn 230
changing reg in insn 231
changing reg in insn 231
changing reg in insn 232
changing reg in insn 232
changing reg in insn 233
changing reg in insn 234
changing reg in insn 237
changing reg in insn 235
changing reg in insn 236
changing reg in insn 236
changing reg in insn 237
changing reg in insn 237
changing reg in insn 238
changing reg in insn 240
changing reg in insn 241
changing reg in insn 244
changing reg in insn 245
changing reg in insn 249
changing reg in insn 250
changing reg in insn 255
changing reg in insn 256
changing reg in insn 259
changing reg in insn 260
changing reg in insn 260
changing reg in insn 262
changing reg in insn 263
changing reg in insn 263
changing reg in insn 267
changing reg in insn 268
changing reg in insn 272
changing reg in insn 274
changing reg in insn 273
changing reg in insn 274
changing reg in insn 274
changing reg in insn 275
changing reg in insn 278
changing reg in insn 279
changing reg in insn 281
changing reg in insn 283
changing reg in insn 282
changing reg in insn 284
changing reg in insn 286
changing reg in insn 287
changing reg in insn 291
changing reg in insn 292
changing reg in insn 294
changing reg in insn 296
changing reg in insn 295
changing reg in insn 297
changing reg in insn 299
changing reg in insn 300
changing reg in insn 302
changing reg in insn 307
changing reg in insn 308
changing reg in insn 310
changing reg in insn 312
changing reg in insn 311
changing reg in insn 313
changing reg in insn 315
changing reg in insn 316
changing reg in insn 320
changing reg in insn 321
changing reg in insn 323
changing reg in insn 325
changing reg in insn 324
changing reg in insn 326
changing reg in insn 328
changing reg in insn 329
changing reg in insn 331
changing reg in insn 336
changing reg in insn 337
changing reg in insn 338
changing reg in insn 339
changing reg in insn 342
changing reg in insn 343
changing reg in insn 344
changing reg in insn 345
changing reg in insn 346
changing reg in insn 347
changing reg in insn 350
changing reg in insn 351
changing reg in insn 351
changing reg in insn 353
changing reg in insn 354
changing reg in insn 354
changing reg in insn 360
changing reg in insn 361
changing reg in insn 364
changing reg in insn 370
changing reg in insn 371
changing reg in insn 374
changing reg in insn 380
changing reg in insn 381
changing reg in insn 384
changing reg in insn 390
changing reg in insn 391
changing reg in insn 394
changing reg in insn 398
changing reg in insn 400
changing reg in insn 399
changing reg in insn 400
changing reg in insn 400
changing reg in insn 401
changing reg in insn 405
changing reg in insn 407
changing reg in insn 406
changing reg in insn 407
changing reg in insn 410
changing reg in insn 411
changing reg in insn 411
changing reg in insn 412
changing reg in insn 416
changing reg in insn 418
changing reg in insn 417
changing reg in insn 418
changing reg in insn 421
changing reg in insn 422
changing reg in insn 422
changing reg in insn 423
changing reg in insn 424
changing reg in insn 425
changing reg in insn 429
changing reg in insn 431
changing reg in insn 430
changing reg in insn 431
deleting insn with uid = 287.
deleting insn with uid = 300.
deleting insn with uid = 316.
deleting insn with uid = 329.
deleting insn with uid = 437.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 285.
verify found no changes in insn with uid = 298.
verify found no changes in insn with uid = 314.
verify found no changes in insn with uid = 327.


fix_fft

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,11u} r1={15d,11u} r2={71d,67u} r3={175d,170u} r4={2d,2u} r11={1d,199u} r12={4d} r13={1d,46u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={21d,17u} r25={1d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 1223{698d,525u,0e} in 357{353 regular + 4 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 239 240 241 242

;; Pred edge  ENTRY (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -72 [0xffffffffffffffb8])) [0 fr+0 S4 A32])
        (reg:SI 0 r0 [ fr ])) integer_fft.c:88 625 {*arm_movsi_vfp}
     (nil))

(insn 3 2 4 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -76 [0xffffffffffffffb4])) [0 fi+0 S4 A32])
        (reg:SI 1 r1 [ fi ])) integer_fft.c:88 625 {*arm_movsi_vfp}
     (nil))

(insn 4 3 5 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])
        (reg:SI 2 r2 [ m ])) integer_fft.c:88 625 {*arm_movsi_vfp}
     (nil))

(insn 5 4 6 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -84 [0xffffffffffffffac])) [0 inverse+0 S4 A32])
        (reg:SI 3 r3 [ inverse ])) integer_fft.c:88 625 {*arm_movsi_vfp}
     (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 (set (reg:SI 2 r2 [239])
        (const_int 1 [0x1])) integer_fft.c:92 625 {*arm_movsi_vfp}
     (nil))

(insn 10 9 11 2 (set (reg:SI 3 r3 [240])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:92 625 {*arm_movsi_vfp}
     (nil))

(insn 11 10 12 2 (set (reg:SI 3 r3 [241])
        (ashift:SI (reg:SI 2 r2 [239])
            (reg:SI 3 r3 [240]))) integer_fft.c:92 119 {*arm_shiftsi3}
     (nil))

(insn 12 11 13 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -52 [0xffffffffffffffcc])) [0 n+0 S4 A32])
        (reg:SI 3 r3 [241])) integer_fft.c:92 625 {*arm_movsi_vfp}
     (nil))

(insn 13 12 14 2 (set (reg:SI 3 r3 [242])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -52 [0xffffffffffffffcc])) [0 n+0 S4 A32])) integer_fft.c:94 625 {*arm_movsi_vfp}
     (nil))

(insn 14 13 15 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [242])
            (const_int 1024 [0x400]))) integer_fft.c:94 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) integer_fft.c:94 211 {*arm_cond_branch}
     (nil)
 -> 20)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  3 (fallthru)
;; Succ edge  4

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134

;; Pred edge  2 (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 447 3 (set (reg:SI 3 r3 [orig:134 D.1489 ] [134])
        (const_int -1 [0xffffffffffffffff])) integer_fft.c:95 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 447 17 448 3 (set (pc)
        (label_ref 435)) integer_fft.c:95 223 {*arm_jump}
     (nil)
 -> 435)
;; End of basic block 3 -> ( 41)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  41 [100.0%] 

(barrier 448 447 20)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 243 244 245 246 247

;; Pred edge  2
(code_label 20 448 21 4 2 "" [1 uses])

(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 (set (reg:SI 3 r3 [243])
        (const_int 0 [0])) integer_fft.c:97 625 {*arm_movsi_vfp}
     (nil))

(insn 23 22 24 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 mr+0 S4 A32])
        (reg:SI 3 r3 [243])) integer_fft.c:97 625 {*arm_movsi_vfp}
     (nil))

(insn 24 23 25 4 (set (reg:SI 3 r3 [244])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -52 [0xffffffffffffffcc])) [0 n+0 S4 A32])) integer_fft.c:98 625 {*arm_movsi_vfp}
     (nil))

(insn 25 24 26 4 (set (reg:SI 3 r3 [245])
        (plus:SI (reg:SI 3 r3 [244])
            (const_int -1 [0xffffffffffffffff]))) integer_fft.c:98 4 {*arm_addsi3}
     (nil))

(insn 26 25 27 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -56 [0xffffffffffffffc8])) [0 nn+0 S4 A32])
        (reg:SI 3 r3 [245])) integer_fft.c:98 625 {*arm_movsi_vfp}
     (nil))

(insn 27 26 28 4 (set (reg:SI 3 r3 [246])
        (const_int 0 [0])) integer_fft.c:99 625 {*arm_movsi_vfp}
     (nil))

(insn 28 27 29 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -36 [0xffffffffffffffdc])) [0 scale+0 S4 A32])
        (reg:SI 3 r3 [246])) integer_fft.c:99 625 {*arm_movsi_vfp}
     (nil))

(insn 29 28 30 4 (set (reg:SI 3 r3 [247])
        (const_int 1 [0x1])) integer_fft.c:102 625 {*arm_movsi_vfp}
     (nil))

(insn 30 29 449 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])
        (reg:SI 3 r3 [247])) integer_fft.c:102 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 449 30 450 4 (set (pc)
        (label_ref 113)) integer_fft.c:102 223 {*arm_jump}
     (nil)
 -> 113)
;; End of basic block 4 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%] 

(barrier 450 449 115)

;; Start of basic block ( 10) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 248

;; Pred edge  10
(code_label 115 450 33 5 8 "" [1 uses])

(note 33 115 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 5 (set (reg:SI 3 r3 [248])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -52 [0xffffffffffffffcc])) [0 n+0 S4 A32])) integer_fft.c:103 625 {*arm_movsi_vfp}
     (nil))

(insn 35 34 43 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 l+0 S4 A32])
        (reg:SI 3 r3 [248])) integer_fft.c:103 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  6 (fallthru)

;; Start of basic block ( 5 6) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 249 250 251 252 253

;; Pred edge  5 (fallthru)
;; Pred edge  6
(code_label 43 35 36 6 5 "" [1 uses])

(note 36 43 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 6 (set (reg:SI 3 r3 [249])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 l+0 S4 A32])) integer_fft.c:105 625 {*arm_movsi_vfp}
     (nil))

(insn 38 37 39 6 (set (reg:SI 3 r3 [250])
        (ashiftrt:SI (reg:SI 3 r3 [249])
            (const_int 1 [0x1]))) integer_fft.c:105 119 {*arm_shiftsi3}
     (nil))

(insn 39 38 40 6 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 l+0 S4 A32])
        (reg:SI 3 r3 [250])) integer_fft.c:105 625 {*arm_movsi_vfp}
     (nil))

(insn 40 39 41 6 (set (reg:SI 2 r2 [251])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 mr+0 S4 A32])) integer_fft.c:106 625 {*arm_movsi_vfp}
     (nil))

(insn 41 40 42 6 (set (reg:SI 3 r3 [252])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 l+0 S4 A32])) integer_fft.c:106 625 {*arm_movsi_vfp}
     (nil))

(insn 42 41 44 6 (set (reg:SI 2 r2 [orig:135 D.1490 ] [135])
        (plus:SI (reg:SI 2 r2 [251])
            (reg:SI 3 r3 [252]))) integer_fft.c:106 4 {*arm_addsi3}
     (nil))

(insn 44 42 45 6 (set (reg:SI 3 r3 [253])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -56 [0xffffffffffffffc8])) [0 nn+0 S4 A32])) integer_fft.c:106 625 {*arm_movsi_vfp}
     (nil))

(insn 45 44 46 6 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:135 D.1490 ] [135])
            (reg:SI 3 r3 [253]))) integer_fft.c:106 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) integer_fft.c:106 211 {*arm_cond_branch}
     (nil)
 -> 43)
;; End of basic block 6 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  6
;; Succ edge  7 (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 254 255 256 257 258 259

;; Pred edge  6 (fallthru)
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 7 (set (reg:SI 3 r3 [254])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 l+0 S4 A32])) integer_fft.c:107 625 {*arm_movsi_vfp}
     (nil))

(insn 49 48 50 7 (set (reg:SI 2 r2 [orig:136 D.1491 ] [136])
        (plus:SI (reg:SI 3 r3 [254])
            (const_int -1 [0xffffffffffffffff]))) integer_fft.c:107 4 {*arm_addsi3}
     (nil))

(insn 50 49 51 7 (set (reg:SI 3 r3 [255])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 mr+0 S4 A32])) integer_fft.c:107 625 {*arm_movsi_vfp}
     (nil))

(insn 51 50 52 7 (set (reg:SI 2 r2 [orig:137 D.1492 ] [137])
        (and:SI (reg:SI 2 r2 [orig:136 D.1491 ] [136])
            (reg:SI 3 r3 [255]))) integer_fft.c:107 69 {*arm_andsi3_insn}
     (nil))

(insn 52 51 53 7 (set (reg:SI 3 r3 [256])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 l+0 S4 A32])) integer_fft.c:107 625 {*arm_movsi_vfp}
     (nil))

(insn 53 52 54 7 (set (reg:SI 3 r3 [257])
        (plus:SI (reg:SI 2 r2 [orig:137 D.1492 ] [137])
            (reg:SI 3 r3 [256]))) integer_fft.c:107 4 {*arm_addsi3}
     (nil))

(insn 54 53 55 7 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 mr+0 S4 A32])
        (reg:SI 3 r3 [257])) integer_fft.c:107 625 {*arm_movsi_vfp}
     (nil))

(insn 55 54 56 7 (set (reg:SI 2 r2 [258])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 mr+0 S4 A32])) integer_fft.c:109 625 {*arm_movsi_vfp}
     (nil))

(insn 56 55 57 7 (set (reg:SI 3 r3 [259])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:109 625 {*arm_movsi_vfp}
     (nil))

(insn 57 56 58 7 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [258])
            (reg:SI 3 r3 [259]))) integer_fft.c:109 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 58 57 62 7 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 466)
            (pc))) integer_fft.c:109 211 {*arm_cond_branch}
     (nil)
 -> 466)
;; End of basic block 7 -> ( 42 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  42
;; Succ edge  8 (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 260 261 262 263 264 265 266 267 268 269 270 271

;; Pred edge  7 (fallthru)
(code_label 62 58 63 8 6 "" [0 uses])

(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 8 (set (reg:SI 3 r3 [orig:138 m.9 ] [138])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:110 625 {*arm_movsi_vfp}
     (nil))

(insn 65 64 66 8 (set (reg:SI 3 r3 [orig:139 D.1496 ] [139])
        (ashift:SI (reg:SI 3 r3 [orig:138 m.9 ] [138])
            (const_int 1 [0x1]))) integer_fft.c:110 119 {*arm_shiftsi3}
     (nil))

(insn 66 65 67 8 (set (reg:SI 2 r2 [260])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -72 [0xffffffffffffffb8])) [0 fr+0 S4 A32])) integer_fft.c:110 625 {*arm_movsi_vfp}
     (nil))

(insn 67 66 68 8 (set (reg/f:SI 3 r3 [orig:140 D.1497 ] [140])
        (plus:SI (reg:SI 2 r2 [260])
            (reg:SI 3 r3 [orig:139 D.1496 ] [139]))) integer_fft.c:110 4 {*arm_addsi3}
     (nil))

(insn 68 67 69 8 (set (reg:HI 3 r3 [261])
        (mem:HI (reg/f:SI 3 r3 [orig:140 D.1497 ] [140]) [0 *D.1497_37+0 S2 A16])) integer_fft.c:110 178 {*movhi_insn_arch4}
     (nil))

(insn 69 68 70 8 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -58 [0xffffffffffffffc6])) [0 tr+0 S2 A16])
        (reg:HI 3 r3 [261])) integer_fft.c:110 178 {*movhi_insn_arch4}
     (nil))

(insn 70 69 71 8 (set (reg:SI 3 r3 [orig:141 m.10 ] [141])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:111 625 {*arm_movsi_vfp}
     (nil))

(insn 71 70 72 8 (set (reg:SI 3 r3 [orig:142 D.1499 ] [142])
        (ashift:SI (reg:SI 3 r3 [orig:141 m.10 ] [141])
            (const_int 1 [0x1]))) integer_fft.c:111 119 {*arm_shiftsi3}
     (nil))

(insn 72 71 73 8 (set (reg:SI 2 r2 [262])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -72 [0xffffffffffffffb8])) [0 fr+0 S4 A32])) integer_fft.c:111 625 {*arm_movsi_vfp}
     (nil))

(insn 73 72 74 8 (set (reg/f:SI 3 r3 [orig:143 D.1500 ] [143])
        (plus:SI (reg:SI 2 r2 [262])
            (reg:SI 3 r3 [orig:142 D.1499 ] [142]))) integer_fft.c:111 4 {*arm_addsi3}
     (nil))

(insn 74 73 75 8 (set (reg:SI 2 r2 [orig:144 mr.11 ] [144])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 mr+0 S4 A32])) integer_fft.c:111 625 {*arm_movsi_vfp}
     (nil))

(insn 75 74 76 8 (set (reg:SI 2 r2 [orig:145 D.1502 ] [145])
        (ashift:SI (reg:SI 2 r2 [orig:144 mr.11 ] [144])
            (const_int 1 [0x1]))) integer_fft.c:111 119 {*arm_shiftsi3}
     (nil))

(insn 76 75 77 8 (set (reg:SI 1 r1 [263])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -72 [0xffffffffffffffb8])) [0 fr+0 S4 A32])) integer_fft.c:111 625 {*arm_movsi_vfp}
     (nil))

(insn 77 76 78 8 (set (reg/f:SI 2 r2 [orig:146 D.1503 ] [146])
        (plus:SI (reg:SI 1 r1 [263])
            (reg:SI 2 r2 [orig:145 D.1502 ] [145]))) integer_fft.c:111 4 {*arm_addsi3}
     (nil))

(insn 78 77 79 8 (set (reg:SI 2 r2 [orig:147 D.1504 ] [147])
        (zero_extend:SI (mem:HI (reg/f:SI 2 r2 [orig:146 D.1503 ] [146]) [0 *D.1503_44+0 S2 A16]))) integer_fft.c:111 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 79 78 80 8 (set (mem:HI (reg/f:SI 3 r3 [orig:143 D.1500 ] [143]) [0 *D.1500_41+0 S2 A16])
        (reg:HI 2 r2 [orig:147 D.1504 ] [147])) integer_fft.c:111 178 {*movhi_insn_arch4}
     (nil))

(insn 80 79 81 8 (set (reg:SI 3 r3 [orig:148 mr.12 ] [148])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 mr+0 S4 A32])) integer_fft.c:112 625 {*arm_movsi_vfp}
     (nil))

(insn 81 80 82 8 (set (reg:SI 3 r3 [orig:149 D.1506 ] [149])
        (ashift:SI (reg:SI 3 r3 [orig:148 mr.12 ] [148])
            (const_int 1 [0x1]))) integer_fft.c:112 119 {*arm_shiftsi3}
     (nil))

(insn 82 81 83 8 (set (reg:SI 2 r2 [264])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -72 [0xffffffffffffffb8])) [0 fr+0 S4 A32])) integer_fft.c:112 625 {*arm_movsi_vfp}
     (nil))

(insn 83 82 84 8 (set (reg/f:SI 3 r3 [orig:150 D.1507 ] [150])
        (plus:SI (reg:SI 2 r2 [264])
            (reg:SI 3 r3 [orig:149 D.1506 ] [149]))) integer_fft.c:112 4 {*arm_addsi3}
     (nil))

(insn 84 83 85 8 (set (reg:HI 2 r2 [265])
        (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -58 [0xffffffffffffffc6])) [0 tr+0 S2 A16])) integer_fft.c:112 178 {*movhi_insn_arch4}
     (nil))

(insn 85 84 86 8 (set (mem:HI (reg/f:SI 3 r3 [orig:150 D.1507 ] [150]) [0 *D.1507_48+0 S2 A16])
        (reg:HI 2 r2 [265])) integer_fft.c:112 178 {*movhi_insn_arch4}
     (nil))

(insn 86 85 87 8 (set (reg:SI 3 r3 [orig:151 m.13 ] [151])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:113 625 {*arm_movsi_vfp}
     (nil))

(insn 87 86 88 8 (set (reg:SI 3 r3 [orig:152 D.1509 ] [152])
        (ashift:SI (reg:SI 3 r3 [orig:151 m.13 ] [151])
            (const_int 1 [0x1]))) integer_fft.c:113 119 {*arm_shiftsi3}
     (nil))

(insn 88 87 89 8 (set (reg:SI 2 r2 [266])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -76 [0xffffffffffffffb4])) [0 fi+0 S4 A32])) integer_fft.c:113 625 {*arm_movsi_vfp}
     (nil))

(insn 89 88 90 8 (set (reg/f:SI 3 r3 [orig:153 D.1510 ] [153])
        (plus:SI (reg:SI 2 r2 [266])
            (reg:SI 3 r3 [orig:152 D.1509 ] [152]))) integer_fft.c:113 4 {*arm_addsi3}
     (nil))

(insn 90 89 91 8 (set (reg:HI 3 r3 [267])
        (mem:HI (reg/f:SI 3 r3 [orig:153 D.1510 ] [153]) [0 *D.1510_52+0 S2 A16])) integer_fft.c:113 178 {*movhi_insn_arch4}
     (nil))

(insn 91 90 92 8 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -60 [0xffffffffffffffc4])) [0 ti+0 S2 A16])
        (reg:HI 3 r3 [267])) integer_fft.c:113 178 {*movhi_insn_arch4}
     (nil))

(insn 92 91 93 8 (set (reg:SI 3 r3 [orig:154 m.14 ] [154])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:114 625 {*arm_movsi_vfp}
     (nil))

(insn 93 92 94 8 (set (reg:SI 3 r3 [orig:155 D.1512 ] [155])
        (ashift:SI (reg:SI 3 r3 [orig:154 m.14 ] [154])
            (const_int 1 [0x1]))) integer_fft.c:114 119 {*arm_shiftsi3}
     (nil))

(insn 94 93 95 8 (set (reg:SI 2 r2 [268])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -76 [0xffffffffffffffb4])) [0 fi+0 S4 A32])) integer_fft.c:114 625 {*arm_movsi_vfp}
     (nil))

(insn 95 94 96 8 (set (reg/f:SI 3 r3 [orig:156 D.1513 ] [156])
        (plus:SI (reg:SI 2 r2 [268])
            (reg:SI 3 r3 [orig:155 D.1512 ] [155]))) integer_fft.c:114 4 {*arm_addsi3}
     (nil))

(insn 96 95 97 8 (set (reg:SI 2 r2 [orig:157 mr.15 ] [157])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 mr+0 S4 A32])) integer_fft.c:114 625 {*arm_movsi_vfp}
     (nil))

(insn 97 96 98 8 (set (reg:SI 2 r2 [orig:158 D.1515 ] [158])
        (ashift:SI (reg:SI 2 r2 [orig:157 mr.15 ] [157])
            (const_int 1 [0x1]))) integer_fft.c:114 119 {*arm_shiftsi3}
     (nil))

(insn 98 97 99 8 (set (reg:SI 1 r1 [269])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -76 [0xffffffffffffffb4])) [0 fi+0 S4 A32])) integer_fft.c:114 625 {*arm_movsi_vfp}
     (nil))

(insn 99 98 100 8 (set (reg/f:SI 2 r2 [orig:159 D.1516 ] [159])
        (plus:SI (reg:SI 1 r1 [269])
            (reg:SI 2 r2 [orig:158 D.1515 ] [158]))) integer_fft.c:114 4 {*arm_addsi3}
     (nil))

(insn 100 99 101 8 (set (reg:SI 2 r2 [orig:160 D.1517 ] [160])
        (zero_extend:SI (mem:HI (reg/f:SI 2 r2 [orig:159 D.1516 ] [159]) [0 *D.1516_59+0 S2 A16]))) integer_fft.c:114 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 101 100 102 8 (set (mem:HI (reg/f:SI 3 r3 [orig:156 D.1513 ] [156]) [0 *D.1513_56+0 S2 A16])
        (reg:HI 2 r2 [orig:160 D.1517 ] [160])) integer_fft.c:114 178 {*movhi_insn_arch4}
     (nil))

(insn 102 101 103 8 (set (reg:SI 3 r3 [orig:161 mr.16 ] [161])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 mr+0 S4 A32])) integer_fft.c:115 625 {*arm_movsi_vfp}
     (nil))

(insn 103 102 104 8 (set (reg:SI 3 r3 [orig:162 D.1519 ] [162])
        (ashift:SI (reg:SI 3 r3 [orig:161 mr.16 ] [161])
            (const_int 1 [0x1]))) integer_fft.c:115 119 {*arm_shiftsi3}
     (nil))

(insn 104 103 105 8 (set (reg:SI 2 r2 [270])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -76 [0xffffffffffffffb4])) [0 fi+0 S4 A32])) integer_fft.c:115 625 {*arm_movsi_vfp}
     (nil))

(insn 105 104 106 8 (set (reg/f:SI 3 r3 [orig:163 D.1520 ] [163])
        (plus:SI (reg:SI 2 r2 [270])
            (reg:SI 3 r3 [orig:162 D.1519 ] [162]))) integer_fft.c:115 4 {*arm_addsi3}
     (nil))

(insn 106 105 107 8 (set (reg:HI 2 r2 [271])
        (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -60 [0xffffffffffffffc4])) [0 ti+0 S2 A16])) integer_fft.c:115 178 {*movhi_insn_arch4}
     (nil))

(insn 107 106 463 8 (set (mem:HI (reg/f:SI 3 r3 [orig:163 D.1520 ] [163]) [0 *D.1520_63+0 S2 A16])
        (reg:HI 2 r2 [271])) integer_fft.c:115 178 {*movhi_insn_arch4}
     (nil))

(jump_insn 463 107 464 8 (set (pc)
        (label_ref 108)) 223 {*arm_jump}
     (nil)
 -> 108)
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  9

(barrier 464 463 466)

;; Start of basic block ( 7) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	

;; Pred edge  7
(code_label 466 464 465 42 27 "" [1 uses])

(note 465 466 467 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 467 465 108 42 (const_int 0 [0]) integer_fft.c:109 251 {nop}
     (nil))
;; End of basic block 42 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 42 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 272 273

;; Pred edge  42 [100.0%]  (fallthru)
;; Pred edge  8
(code_label 108 467 109 9 7 "" [1 uses])

(note 109 108 110 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 110 109 111 9 (set (reg:SI 3 r3 [272])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:102 625 {*arm_movsi_vfp}
     (nil))

(insn 111 110 112 9 (set (reg:SI 3 r3 [273])
        (plus:SI (reg:SI 3 r3 [272])
            (const_int 1 [0x1]))) integer_fft.c:102 4 {*arm_addsi3}
     (nil))

(insn 112 111 113 9 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])
        (reg:SI 3 r3 [273])) integer_fft.c:102 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  10 (fallthru)

;; Start of basic block ( 9 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 274 275

;; Pred edge  9 (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 113 112 114 10 4 "" [1 uses])

(note 114 113 116 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 116 114 117 10 (set (reg:SI 2 r2 [274])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:102 625 {*arm_movsi_vfp}
     (nil))

(insn 117 116 118 10 (set (reg:SI 3 r3 [275])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -56 [0xffffffffffffffc8])) [0 nn+0 S4 A32])) integer_fft.c:102 625 {*arm_movsi_vfp}
     (nil))

(insn 118 117 119 10 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [274])
            (reg:SI 3 r3 [275]))) integer_fft.c:102 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 119 118 120 10 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) integer_fft.c:102 211 {*arm_cond_branch}
     (nil)
 -> 115)
;; End of basic block 10 -> ( 5 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  5
;; Succ edge  11 (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 276 277

;; Pred edge  10 (fallthru)
(note 120 119 121 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 121 120 122 11 (set (reg:SI 3 r3 [276])
        (const_int 1 [0x1])) integer_fft.c:118 625 {*arm_movsi_vfp}
     (nil))

(insn 122 121 123 11 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 l+0 S4 A32])
        (reg:SI 3 r3 [276])) integer_fft.c:118 625 {*arm_movsi_vfp}
     (nil))

(insn 123 122 124 11 (set (reg:SI 3 r3 [277])
        (const_int 9 [0x9])) integer_fft.c:119 625 {*arm_movsi_vfp}
     (nil))

(insn 124 123 451 11 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -32 [0xffffffffffffffe0])) [0 k+0 S4 A32])
        (reg:SI 3 r3 [277])) integer_fft.c:119 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 451 124 452 11 (set (pc)
        (label_ref 426)) integer_fft.c:120 223 {*arm_jump}
     (nil)
 -> 426)
;; End of basic block 11 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  39 [100.0%] 

(barrier 452 451 428)

;; Start of basic block ( 39) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 278

;; Pred edge  39
(code_label 428 452 127 12 26 "" [1 uses])

(note 127 428 128 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 129 12 (set (reg:SI 3 r3 [278])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -84 [0xffffffffffffffac])) [0 inverse+0 S4 A32])) integer_fft.c:121 625 {*arm_movsi_vfp}
     (nil))

(insn 129 128 130 12 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [278])
            (const_int 0 [0]))) integer_fft.c:121 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 130 129 131 12 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) integer_fft.c:121 211 {*arm_cond_branch}
     (nil)
 -> 209)
;; End of basic block 12 -> ( 13 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  13 (fallthru)
;; Succ edge  25

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 279 280

;; Pred edge  12 (fallthru)
(note 131 130 132 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 132 131 133 13 (set (reg:SI 3 r3 [279])
        (const_int 0 [0])) integer_fft.c:123 625 {*arm_movsi_vfp}
     (nil))

(insn 133 132 134 13 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -40 [0xffffffffffffffd8])) [0 shift+0 S4 A32])
        (reg:SI 3 r3 [279])) integer_fft.c:123 625 {*arm_movsi_vfp}
     (nil))

(insn 134 133 135 13 (set (reg:SI 3 r3 [280])
        (const_int 0 [0])) integer_fft.c:124 625 {*arm_movsi_vfp}
     (nil))

(insn 135 134 453 13 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (reg:SI 3 r3 [280])) integer_fft.c:124 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 453 135 454 13 (set (pc)
        (label_ref 191)) integer_fft.c:124 223 {*arm_jump}
     (nil)
 -> 191)
;; End of basic block 13 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  22 [100.0%] 

(barrier 454 453 193)

;; Start of basic block ( 22) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 164 165 166 167 281 282 283

;; Pred edge  22
(code_label 193 454 138 14 17 "" [1 uses])

(note 138 193 139 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 140 14 (set (reg:SI 3 r3 [orig:164 i.17 ] [164])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) integer_fft.c:125 625 {*arm_movsi_vfp}
     (nil))

(insn 140 139 141 14 (set (reg:SI 3 r3 [orig:165 D.1524 ] [165])
        (ashift:SI (reg:SI 3 r3 [orig:164 i.17 ] [164])
            (const_int 1 [0x1]))) integer_fft.c:125 119 {*arm_shiftsi3}
     (nil))

(insn 141 140 142 14 (set (reg:SI 2 r2 [281])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -72 [0xffffffffffffffb8])) [0 fr+0 S4 A32])) integer_fft.c:125 625 {*arm_movsi_vfp}
     (nil))

(insn 142 141 143 14 (set (reg/f:SI 3 r3 [orig:166 D.1525 ] [166])
        (plus:SI (reg:SI 2 r2 [281])
            (reg:SI 3 r3 [orig:165 D.1524 ] [165]))) integer_fft.c:125 4 {*arm_addsi3}
     (nil))

(insn 143 142 144 14 (set (reg:SI 3 r3 [orig:167 D.1526 ] [167])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [orig:166 D.1525 ] [166]) [0 *D.1525_72+0 S2 A16]))) integer_fft.c:125 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 144 143 145 14 (set (reg:SI 3 r3 [282])
        (sign_extend:SI (reg:HI 3 r3 [orig:167 D.1526 ] [167]))) integer_fft.c:125 158 {*arm_extendhisi2_v6}
     (nil))

(insn 145 144 146 14 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
        (reg:SI 3 r3 [282])) integer_fft.c:125 625 {*arm_movsi_vfp}
     (nil))

(insn 146 145 147 14 (set (reg:SI 3 r3 [283])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) integer_fft.c:126 625 {*arm_movsi_vfp}
     (nil))

(insn 147 146 148 14 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [283])
            (const_int 0 [0]))) integer_fft.c:126 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 148 147 149 14 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) integer_fft.c:126 211 {*arm_cond_branch}
     (nil)
 -> 153)
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  15 (fallthru)
;; Succ edge  16

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 284 285

;; Pred edge  14 (fallthru)
(note 149 148 150 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 151 15 (set (reg:SI 3 r3 [284])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) integer_fft.c:127 625 {*arm_movsi_vfp}
     (nil))

(insn 151 150 152 15 (set (reg:SI 3 r3 [285])
        (neg:SI (reg:SI 3 r3 [284]))) integer_fft.c:127 129 {*arm_negsi2}
     (nil))

(insn 152 151 153 15 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
        (reg:SI 3 r3 [285])) integer_fft.c:127 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  16 (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 168 169 170 171 286 287 288

;; Pred edge  14
;; Pred edge  15 (fallthru)
(code_label 153 152 154 16 12 "" [1 uses])

(note 154 153 155 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 155 154 156 16 (set (reg:SI 3 r3 [orig:168 i.18 ] [168])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) integer_fft.c:128 625 {*arm_movsi_vfp}
     (nil))

(insn 156 155 157 16 (set (reg:SI 3 r3 [orig:169 D.1530 ] [169])
        (ashift:SI (reg:SI 3 r3 [orig:168 i.18 ] [168])
            (const_int 1 [0x1]))) integer_fft.c:128 119 {*arm_shiftsi3}
     (nil))

(insn 157 156 158 16 (set (reg:SI 2 r2 [286])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -76 [0xffffffffffffffb4])) [0 fi+0 S4 A32])) integer_fft.c:128 625 {*arm_movsi_vfp}
     (nil))

(insn 158 157 159 16 (set (reg/f:SI 3 r3 [orig:170 D.1531 ] [170])
        (plus:SI (reg:SI 2 r2 [286])
            (reg:SI 3 r3 [orig:169 D.1530 ] [169]))) integer_fft.c:128 4 {*arm_addsi3}
     (nil))

(insn 159 158 160 16 (set (reg:SI 3 r3 [orig:171 D.1532 ] [171])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [orig:170 D.1531 ] [170]) [0 *D.1531_78+0 S2 A16]))) integer_fft.c:128 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 160 159 161 16 (set (reg:SI 3 r3 [287])
        (sign_extend:SI (reg:HI 3 r3 [orig:171 D.1532 ] [171]))) integer_fft.c:128 158 {*arm_extendhisi2_v6}
     (nil))

(insn 161 160 162 16 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])
        (reg:SI 3 r3 [287])) integer_fft.c:128 625 {*arm_movsi_vfp}
     (nil))

(insn 162 161 163 16 (set (reg:SI 3 r3 [288])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:129 625 {*arm_movsi_vfp}
     (nil))

(insn 163 162 164 16 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [288])
            (const_int 0 [0]))) integer_fft.c:129 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 164 163 165 16 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) integer_fft.c:129 211 {*arm_cond_branch}
     (nil)
 -> 169)
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  17 (fallthru)
;; Succ edge  18

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 289 290

;; Pred edge  16 (fallthru)
(note 165 164 166 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 166 165 167 17 (set (reg:SI 3 r3 [289])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:130 625 {*arm_movsi_vfp}
     (nil))

(insn 167 166 168 17 (set (reg:SI 3 r3 [290])
        (neg:SI (reg:SI 3 r3 [289]))) integer_fft.c:130 129 {*arm_negsi2}
     (nil))

(insn 168 167 169 17 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])
        (reg:SI 3 r3 [290])) integer_fft.c:130 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  18 (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 291 292

;; Pred edge  16
;; Pred edge  17 (fallthru)
(code_label 169 168 170 18 13 "" [1 uses])

(note 170 169 171 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 171 170 172 18 (set (reg:SI 2 r2 [291])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) integer_fft.c:131 625 {*arm_movsi_vfp}
     (nil))

(insn 172 171 173 18 (set (reg:SI 3 r3 [292])
        (const_int 16383 [0x3fff])) integer_fft.c:131 625 {*arm_movsi_vfp}
     (nil))

(insn 173 172 174 18 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [291])
            (reg:SI 3 r3 [292]))) integer_fft.c:131 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 174 173 175 18 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 180)
            (pc))) integer_fft.c:131 211 {*arm_cond_branch}
     (nil)
 -> 180)
;; End of basic block 18 -> ( 20 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  20
;; Succ edge  19 (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 293 294

;; Pred edge  18 (fallthru)
(note 175 174 176 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 176 175 177 19 (set (reg:SI 2 r2 [293])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:131 625 {*arm_movsi_vfp}
     (nil))

(insn 177 176 178 19 (set (reg:SI 3 r3 [294])
        (const_int 16383 [0x3fff])) integer_fft.c:131 625 {*arm_movsi_vfp}
     (nil))

(insn 178 177 179 19 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [293])
            (reg:SI 3 r3 [294]))) integer_fft.c:131 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 179 178 180 19 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) integer_fft.c:131 211 {*arm_cond_branch}
     (nil)
 -> 186)
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  20 (fallthru)
;; Succ edge  21

;; Start of basic block ( 18 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 295

;; Pred edge  18
;; Pred edge  19 (fallthru)
(code_label 180 179 181 20 14 "" [1 uses])

(note 181 180 182 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 182 181 183 20 (set (reg:SI 3 r3 [295])
        (const_int 1 [0x1])) integer_fft.c:132 625 {*arm_movsi_vfp}
     (nil))

(insn 183 182 455 20 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -40 [0xffffffffffffffd8])) [0 shift+0 S4 A32])
        (reg:SI 3 r3 [295])) integer_fft.c:132 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 455 183 456 20 (set (pc)
        (label_ref 198)) integer_fft.c:133 223 {*arm_jump}
     (nil)
 -> 198)
;; End of basic block 20 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  23 [100.0%] 

(barrier 456 455 186)

;; Start of basic block ( 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 296 297

;; Pred edge  19
(code_label 186 456 187 21 15 "" [1 uses])

(note 187 186 188 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 189 21 (set (reg:SI 3 r3 [296])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) integer_fft.c:124 625 {*arm_movsi_vfp}
     (nil))

(insn 189 188 190 21 (set (reg:SI 3 r3 [297])
        (plus:SI (reg:SI 3 r3 [296])
            (const_int 1 [0x1]))) integer_fft.c:124 4 {*arm_addsi3}
     (nil))

(insn 190 189 191 21 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (reg:SI 3 r3 [297])) integer_fft.c:124 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 21 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  22 (fallthru)

;; Start of basic block ( 21 13) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 298 299

;; Pred edge  21 (fallthru)
;; Pred edge  13 [100.0%] 
(code_label 191 190 192 22 11 "" [1 uses])

(note 192 191 194 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 194 192 195 22 (set (reg:SI 2 r2 [298])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) integer_fft.c:124 625 {*arm_movsi_vfp}
     (nil))

(insn 195 194 196 22 (set (reg:SI 3 r3 [299])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -52 [0xffffffffffffffcc])) [0 n+0 S4 A32])) integer_fft.c:124 625 {*arm_movsi_vfp}
     (nil))

(insn 196 195 197 22 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [298])
            (reg:SI 3 r3 [299]))) integer_fft.c:124 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 197 196 198 22 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) integer_fft.c:124 211 {*arm_cond_branch}
     (nil)
 -> 193)
;; End of basic block 22 -> ( 14 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  14
;; Succ edge  23 (fallthru)

;; Start of basic block ( 22 20) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 300

;; Pred edge  22 (fallthru)
;; Pred edge  20 [100.0%] 
(code_label 198 197 199 23 16 "" [1 uses])

(note 199 198 200 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 200 199 201 23 (set (reg:SI 3 r3 [300])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -40 [0xffffffffffffffd8])) [0 shift+0 S4 A32])) integer_fft.c:136 625 {*arm_movsi_vfp}
     (nil))

(insn 201 200 202 23 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [300])
            (const_int 0 [0]))) integer_fft.c:136 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 202 201 203 23 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) integer_fft.c:136 211 {*arm_cond_branch}
     (nil)
 -> 213)
;; End of basic block 23 -> ( 24 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  24 (fallthru)
;; Succ edge  26

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 301 302

;; Pred edge  23 (fallthru)
(note 203 202 204 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 204 203 205 24 (set (reg:SI 3 r3 [301])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -36 [0xffffffffffffffdc])) [0 scale+0 S4 A32])) integer_fft.c:137 625 {*arm_movsi_vfp}
     (nil))

(insn 205 204 206 24 (set (reg:SI 3 r3 [302])
        (plus:SI (reg:SI 3 r3 [301])
            (const_int 1 [0x1]))) integer_fft.c:137 4 {*arm_addsi3}
     (nil))

(insn 206 205 457 24 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -36 [0xffffffffffffffdc])) [0 scale+0 S4 A32])
        (reg:SI 3 r3 [302])) integer_fft.c:137 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 457 206 458 24 (set (pc)
        (label_ref 213)) 223 {*arm_jump}
     (nil)
 -> 213)
;; End of basic block 24 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  26 [100.0%] 

(barrier 458 457 209)

;; Start of basic block ( 12) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 303

;; Pred edge  12
(code_label 209 458 210 25 10 "" [1 uses])

(note 210 209 211 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 211 210 212 25 (set (reg:SI 3 r3 [303])
        (const_int 1 [0x1])) integer_fft.c:143 625 {*arm_movsi_vfp}
     (nil))

(insn 212 211 213 25 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -40 [0xffffffffffffffd8])) [0 shift+0 S4 A32])
        (reg:SI 3 r3 [303])) integer_fft.c:143 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  26 (fallthru)

;; Start of basic block ( 23 25 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 304 305 306

;; Pred edge  23
;; Pred edge  25 (fallthru)
;; Pred edge  24 [100.0%] 
(code_label 213 212 214 26 18 "" [2 uses])

(note 214 213 215 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 215 214 216 26 (set (reg:SI 3 r3 [304])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 l+0 S4 A32])) integer_fft.c:147 625 {*arm_movsi_vfp}
     (nil))

(insn 216 215 217 26 (set (reg:SI 3 r3 [305])
        (ashift:SI (reg:SI 3 r3 [304])
            (const_int 1 [0x1]))) integer_fft.c:147 119 {*arm_shiftsi3}
     (nil))

(insn 217 216 218 26 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -64 [0xffffffffffffffc0])) [0 istep+0 S4 A32])
        (reg:SI 3 r3 [305])) integer_fft.c:147 625 {*arm_movsi_vfp}
     (nil))

(insn 218 217 219 26 (set (reg:SI 3 r3 [306])
        (const_int 0 [0])) integer_fft.c:148 625 {*arm_movsi_vfp}
     (nil))

(insn 219 218 459 26 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])
        (reg:SI 3 r3 [306])) integer_fft.c:148 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 459 219 460 26 (set (pc)
        (label_ref 413)) integer_fft.c:148 223 {*arm_jump}
     (nil)
 -> 413)
;; End of basic block 26 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  37 [100.0%] 

(barrier 460 459 415)

;; Start of basic block ( 37) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 172 173 174 175 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321

;; Pred edge  37
(code_label 415 460 222 27 25 "" [1 uses])

(note 222 415 223 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 223 222 224 27 (set (reg:SI 2 r2 [307])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:149 625 {*arm_movsi_vfp}
     (nil))

(insn 224 223 225 27 (set (reg:SI 3 r3 [308])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -32 [0xffffffffffffffe0])) [0 k+0 S4 A32])) integer_fft.c:149 625 {*arm_movsi_vfp}
     (nil))

(insn 225 224 226 27 (set (reg:SI 3 r3 [309])
        (ashift:SI (reg:SI 2 r2 [307])
            (reg:SI 3 r3 [308]))) integer_fft.c:149 119 {*arm_shiftsi3}
     (nil))

(insn 226 225 227 27 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
        (reg:SI 3 r3 [309])) integer_fft.c:149 625 {*arm_movsi_vfp}
     (nil))

(insn 227 226 228 27 (set (reg:SI 3 r3 [310])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) integer_fft.c:151 625 {*arm_movsi_vfp}
     (nil))

(insn 228 227 229 27 (set (reg:SI 3 r3 [orig:172 D.1541 ] [172])
        (plus:SI (reg:SI 3 r3 [310])
            (const_int 256 [0x100]))) integer_fft.c:151 4 {*arm_addsi3}
     (nil))

(insn 229 228 230 27 (set (reg/f:SI 2 r2 [311])
        (symbol_ref:SI ("Sinewave") [flags 0x2]  <var_decl 0xb6b62180 Sinewave>)) integer_fft.c:151 625 {*arm_movsi_vfp}
     (nil))

(insn 230 229 231 27 (set (reg:SI 3 r3 [312])
        (ashift:SI (reg:SI 3 r3 [orig:172 D.1541 ] [172])
            (const_int 1 [0x1]))) integer_fft.c:151 119 {*arm_shiftsi3}
     (nil))

(insn 231 230 232 27 (set (reg/f:SI 3 r3 [313])
        (plus:SI (reg/f:SI 2 r2 [311])
            (reg:SI 3 r3 [312]))) integer_fft.c:151 4 {*arm_addsi3}
     (nil))

(insn 232 231 233 27 (set (reg:HI 3 r3 [314])
        (mem/s/j:HI (reg/f:SI 3 r3 [313]) [0 Sinewave S2 A16])) integer_fft.c:151 178 {*movhi_insn_arch4}
     (nil))

(insn 233 232 234 27 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -46 [0xffffffffffffffd2])) [0 wr+0 S2 A16])
        (reg:HI 3 r3 [314])) integer_fft.c:151 178 {*movhi_insn_arch4}
     (nil))

(insn 234 233 235 27 (set (reg/f:SI 2 r2 [315])
        (symbol_ref:SI ("Sinewave") [flags 0x2]  <var_decl 0xb6b62180 Sinewave>)) integer_fft.c:152 625 {*arm_movsi_vfp}
     (nil))

(insn 235 234 236 27 (set (reg:SI 3 r3 [316])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) integer_fft.c:152 625 {*arm_movsi_vfp}
     (nil))

(insn 236 235 237 27 (set (reg:SI 3 r3 [317])
        (ashift:SI (reg:SI 3 r3 [316])
            (const_int 1 [0x1]))) integer_fft.c:152 119 {*arm_shiftsi3}
     (nil))

(insn 237 236 238 27 (set (reg/f:SI 3 r3 [318])
        (plus:SI (reg/f:SI 2 r2 [315])
            (reg:SI 3 r3 [317]))) integer_fft.c:152 4 {*arm_addsi3}
     (nil))

(insn 238 237 239 27 (set (reg:SI 3 r3 [orig:173 D.1542 ] [173])
        (zero_extend:SI (mem/s/j:HI (reg/f:SI 3 r3 [318]) [0 Sinewave S2 A16]))) integer_fft.c:152 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 239 238 240 27 (set (reg:SI 3 r3 [orig:174 D.1543 ] [174])
        (zero_extend:SI (reg:HI 3 r3 [orig:173 D.1542 ] [173]))) integer_fft.c:152 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 240 239 241 27 (set (reg:HI 3 r3 [319])
        (reg:HI 3 r3 [orig:174 D.1543 ] [174])) integer_fft.c:152 178 {*movhi_insn_arch4}
     (nil))

(insn 241 240 242 27 (set (reg:SI 3 r3 [320])
        (neg:SI (reg:SI 3 r3 [319]))) integer_fft.c:152 129 {*arm_negsi2}
     (nil))

(insn 242 241 243 27 (set (reg:SI 3 r3 [orig:175 D.1544 ] [175])
        (zero_extend:SI (reg:HI 3 r3 [320]))) integer_fft.c:152 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 243 242 244 27 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -48 [0xffffffffffffffd0])) [0 wi+0 S2 A16])
        (reg:HI 3 r3 [orig:175 D.1544 ] [175])) integer_fft.c:152 178 {*movhi_insn_arch4}
     (nil))

(insn 244 243 245 27 (set (reg:SI 3 r3 [321])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -84 [0xffffffffffffffac])) [0 inverse+0 S4 A32])) integer_fft.c:153 625 {*arm_movsi_vfp}
     (nil))

(insn 245 244 246 27 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [321])
            (const_int 0 [0]))) integer_fft.c:153 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 246 245 247 27 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 253)
            (pc))) integer_fft.c:153 211 {*arm_cond_branch}
     (nil)
 -> 253)
;; End of basic block 27 -> ( 28 29)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  28 (fallthru)
;; Succ edge  29

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 176 177 322 323

;; Pred edge  27 (fallthru)
(note 247 246 248 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 248 247 249 28 (set (reg:SI 3 r3 [orig:176 wi.19 ] [176])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -48 [0xffffffffffffffd0])) [0 wi+0 S2 A16]))) integer_fft.c:154 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 249 248 250 28 (set (reg:HI 3 r3 [322])
        (reg:HI 3 r3 [orig:176 wi.19 ] [176])) integer_fft.c:154 178 {*movhi_insn_arch4}
     (nil))

(insn 250 249 251 28 (set (reg:SI 3 r3 [323])
        (neg:SI (reg:SI 3 r3 [322]))) integer_fft.c:154 129 {*arm_negsi2}
     (nil))

(insn 251 250 252 28 (set (reg:SI 3 r3 [orig:177 D.1548 ] [177])
        (zero_extend:SI (reg:HI 3 r3 [323]))) integer_fft.c:154 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 252 251 253 28 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -48 [0xffffffffffffffd0])) [0 wi+0 S2 A16])
        (reg:HI 3 r3 [orig:177 D.1548 ] [177])) integer_fft.c:154 178 {*movhi_insn_arch4}
     (nil))
;; End of basic block 28 -> ( 29)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  29 (fallthru)

;; Start of basic block ( 27 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 324

;; Pred edge  27
;; Pred edge  28 (fallthru)
(code_label 253 252 254 29 20 "" [1 uses])

(note 254 253 255 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 255 254 256 29 (set (reg:SI 3 r3 [324])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -40 [0xffffffffffffffd8])) [0 shift+0 S4 A32])) integer_fft.c:155 625 {*arm_movsi_vfp}
     (nil))

(insn 256 255 257 29 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [324])
            (const_int 0 [0]))) integer_fft.c:155 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 257 256 258 29 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) integer_fft.c:155 211 {*arm_cond_branch}
     (nil)
 -> 265)
;; End of basic block 29 -> ( 30 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  30 (fallthru)
;; Succ edge  31

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 325 326 327 328

;; Pred edge  29 (fallthru)
(note 258 257 259 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 259 258 260 30 (set (reg:SI 3 r3 [325])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -46 [0xffffffffffffffd2])) [0 wr+0 S2 A16]))) integer_fft.c:156 158 {*arm_extendhisi2_v6}
     (nil))

(insn 260 259 261 30 (set (reg:SI 3 r3 [326])
        (ashiftrt:SI (reg:SI 3 r3 [325])
            (const_int 1 [0x1]))) integer_fft.c:156 119 {*arm_shiftsi3}
     (nil))

(insn 261 260 262 30 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -46 [0xffffffffffffffd2])) [0 wr+0 S2 A16])
        (reg:HI 3 r3 [326])) integer_fft.c:156 178 {*movhi_insn_arch4}
     (nil))

(insn 262 261 263 30 (set (reg:SI 3 r3 [327])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -48 [0xffffffffffffffd0])) [0 wi+0 S2 A16]))) integer_fft.c:157 158 {*arm_extendhisi2_v6}
     (nil))

(insn 263 262 264 30 (set (reg:SI 3 r3 [328])
        (ashiftrt:SI (reg:SI 3 r3 [327])
            (const_int 1 [0x1]))) integer_fft.c:157 119 {*arm_shiftsi3}
     (nil))

(insn 264 263 265 30 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -48 [0xffffffffffffffd0])) [0 wi+0 S2 A16])
        (reg:HI 3 r3 [328])) integer_fft.c:157 178 {*movhi_insn_arch4}
     (nil))
;; End of basic block 30 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  31 (fallthru)

;; Start of basic block ( 29 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 329

;; Pred edge  29
;; Pred edge  30 (fallthru)
(code_label 265 264 266 31 21 "" [1 uses])

(note 266 265 267 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 267 266 268 31 (set (reg:SI 3 r3 [329])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))

(insn 268 267 461 31 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (reg:SI 3 r3 [329])) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 461 268 462 31 (set (pc)
        (label_ref 402)) integer_fft.c:159 223 {*arm_jump}
     (nil)
 -> 402)
;; End of basic block 31 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  35 [100.0%] 

(barrier 462 461 404)

;; Start of basic block ( 35) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355

;; Pred edge  35
(code_label 404 462 271 32 24 "" [1 uses])

(note 271 404 272 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 272 271 273 32 (set (reg:SI 2 r2 [330])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) integer_fft.c:160 625 {*arm_movsi_vfp}
     (nil))

(insn 273 272 274 32 (set (reg:SI 3 r3 [331])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 l+0 S4 A32])) integer_fft.c:160 625 {*arm_movsi_vfp}
     (nil))

(insn 274 273 275 32 (set (reg:SI 3 r3 [332])
        (plus:SI (reg:SI 2 r2 [330])
            (reg:SI 3 r3 [331]))) integer_fft.c:160 4 {*arm_addsi3}
     (nil))

(insn 275 274 276 32 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
        (reg:SI 3 r3 [332])) integer_fft.c:160 625 {*arm_movsi_vfp}
     (nil))

(insn 276 275 277 32 (set (reg:SI 3 r3 [orig:178 j.20 ] [178])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) integer_fft.c:161 625 {*arm_movsi_vfp}
     (nil))

(insn 277 276 278 32 (set (reg:SI 3 r3 [orig:179 D.1552 ] [179])
        (ashift:SI (reg:SI 3 r3 [orig:178 j.20 ] [178])
            (const_int 1 [0x1]))) integer_fft.c:161 119 {*arm_shiftsi3}
     (nil))

(insn 278 277 279 32 (set (reg:SI 2 r2 [333])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -72 [0xffffffffffffffb8])) [0 fr+0 S4 A32])) integer_fft.c:161 625 {*arm_movsi_vfp}
     (nil))

(insn 279 278 280 32 (set (reg/f:SI 3 r3 [orig:180 D.1553 ] [180])
        (plus:SI (reg:SI 2 r2 [333])
            (reg:SI 3 r3 [orig:179 D.1552 ] [179]))) integer_fft.c:161 4 {*arm_addsi3}
     (nil))

(insn 280 279 281 32 (set (reg:SI 3 r3 [orig:181 D.1554 ] [181])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [orig:180 D.1553 ] [180]) [0 *D.1553_104+0 S2 A16]))) integer_fft.c:161 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 281 280 282 32 (set (reg:SI 2 r2 [334])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -46 [0xffffffffffffffd2])) [0 wr+0 S2 A16]))) integer_fft.c:161 158 {*arm_extendhisi2_v6}
     (nil))

(insn 282 281 283 32 (set (reg:SI 3 r3 [335])
        (sign_extend:SI (reg:HI 3 r3 [orig:181 D.1554 ] [181]))) integer_fft.c:161 158 {*arm_extendhisi2_v6}
     (nil))

(insn 283 282 284 32 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [334])) integer_fft.c:161 625 {*arm_movsi_vfp}
     (nil))

(insn 284 283 285 32 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [335])) integer_fft.c:161 625 {*arm_movsi_vfp}
     (nil))

(call_insn 285 284 286 32 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fix_mpy") [flags 0x3]  <function_decl 0xb6b5c900 fix_mpy>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:161 236 {*call_value_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 286 285 288 32 (set (reg:SI 3 r3 [336])
        (reg:SI 0 r0)) integer_fft.c:161 625 {*arm_movsi_vfp}
     (nil))

(insn 288 286 289 32 (set (reg:SI 4 r4 [orig:183 D.1556 ] [183])
        (zero_extend:SI (reg:HI 3 r3 [orig:182 D.1555 ] [182]))) integer_fft.c:161 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 289 288 290 32 (set (reg:SI 3 r3 [orig:184 j.21 ] [184])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) integer_fft.c:162 625 {*arm_movsi_vfp}
     (nil))

(insn 290 289 291 32 (set (reg:SI 3 r3 [orig:185 D.1558 ] [185])
        (ashift:SI (reg:SI 3 r3 [orig:184 j.21 ] [184])
            (const_int 1 [0x1]))) integer_fft.c:162 119 {*arm_shiftsi3}
     (nil))

(insn 291 290 292 32 (set (reg:SI 2 r2 [337])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -76 [0xffffffffffffffb4])) [0 fi+0 S4 A32])) integer_fft.c:162 625 {*arm_movsi_vfp}
     (nil))

(insn 292 291 293 32 (set (reg/f:SI 3 r3 [orig:186 D.1559 ] [186])
        (plus:SI (reg:SI 2 r2 [337])
            (reg:SI 3 r3 [orig:185 D.1558 ] [185]))) integer_fft.c:162 4 {*arm_addsi3}
     (nil))

(insn 293 292 294 32 (set (reg:SI 3 r3 [orig:187 D.1560 ] [187])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [orig:186 D.1559 ] [186]) [0 *D.1559_110+0 S2 A16]))) integer_fft.c:162 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 294 293 295 32 (set (reg:SI 2 r2 [338])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -48 [0xffffffffffffffd0])) [0 wi+0 S2 A16]))) integer_fft.c:162 158 {*arm_extendhisi2_v6}
     (nil))

(insn 295 294 296 32 (set (reg:SI 3 r3 [339])
        (sign_extend:SI (reg:HI 3 r3 [orig:187 D.1560 ] [187]))) integer_fft.c:162 158 {*arm_extendhisi2_v6}
     (nil))

(insn 296 295 297 32 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [338])) integer_fft.c:162 625 {*arm_movsi_vfp}
     (nil))

(insn 297 296 298 32 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [339])) integer_fft.c:162 625 {*arm_movsi_vfp}
     (nil))

(call_insn 298 297 299 32 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fix_mpy") [flags 0x3]  <function_decl 0xb6b5c900 fix_mpy>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:162 236 {*call_value_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 299 298 301 32 (set (reg:SI 3 r3 [340])
        (reg:SI 0 r0)) integer_fft.c:162 625 {*arm_movsi_vfp}
     (nil))

(insn 301 299 302 32 (set (reg:SI 3 r3 [orig:189 D.1562 ] [189])
        (zero_extend:SI (reg:HI 3 r3 [orig:188 D.1561 ] [188]))) integer_fft.c:161 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 302 301 303 32 (set (reg:SI 3 r3 [341])
        (minus:SI (reg:SI 4 r4 [orig:183 D.1556 ] [183])
            (reg:SI 3 r3 [orig:189 D.1562 ] [189]))) integer_fft.c:161 29 {*arm_subsi3_insn}
     (nil))

(insn 303 302 304 32 (set (reg:SI 3 r3 [orig:190 D.1563 ] [190])
        (zero_extend:SI (reg:HI 3 r3 [341]))) integer_fft.c:161 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 304 303 305 32 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -58 [0xffffffffffffffc6])) [0 tr+0 S2 A16])
        (reg:HI 3 r3 [orig:190 D.1563 ] [190])) integer_fft.c:161 178 {*movhi_insn_arch4}
     (nil))

(insn 305 304 306 32 (set (reg:SI 3 r3 [orig:191 j.22 ] [191])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) integer_fft.c:163 625 {*arm_movsi_vfp}
     (nil))

(insn 306 305 307 32 (set (reg:SI 3 r3 [orig:192 D.1565 ] [192])
        (ashift:SI (reg:SI 3 r3 [orig:191 j.22 ] [191])
            (const_int 1 [0x1]))) integer_fft.c:163 119 {*arm_shiftsi3}
     (nil))

(insn 307 306 308 32 (set (reg:SI 2 r2 [342])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -76 [0xffffffffffffffb4])) [0 fi+0 S4 A32])) integer_fft.c:163 625 {*arm_movsi_vfp}
     (nil))

(insn 308 307 309 32 (set (reg/f:SI 3 r3 [orig:193 D.1566 ] [193])
        (plus:SI (reg:SI 2 r2 [342])
            (reg:SI 3 r3 [orig:192 D.1565 ] [192]))) integer_fft.c:163 4 {*arm_addsi3}
     (nil))

(insn 309 308 310 32 (set (reg:SI 3 r3 [orig:194 D.1567 ] [194])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [orig:193 D.1566 ] [193]) [0 *D.1566_118+0 S2 A16]))) integer_fft.c:163 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 310 309 311 32 (set (reg:SI 2 r2 [343])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -46 [0xffffffffffffffd2])) [0 wr+0 S2 A16]))) integer_fft.c:163 158 {*arm_extendhisi2_v6}
     (nil))

(insn 311 310 312 32 (set (reg:SI 3 r3 [344])
        (sign_extend:SI (reg:HI 3 r3 [orig:194 D.1567 ] [194]))) integer_fft.c:163 158 {*arm_extendhisi2_v6}
     (nil))

(insn 312 311 313 32 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [343])) integer_fft.c:163 625 {*arm_movsi_vfp}
     (nil))

(insn 313 312 314 32 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [344])) integer_fft.c:163 625 {*arm_movsi_vfp}
     (nil))

(call_insn 314 313 315 32 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fix_mpy") [flags 0x3]  <function_decl 0xb6b5c900 fix_mpy>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:163 236 {*call_value_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 315 314 317 32 (set (reg:SI 3 r3 [345])
        (reg:SI 0 r0)) integer_fft.c:163 625 {*arm_movsi_vfp}
     (nil))

(insn 317 315 318 32 (set (reg:SI 4 r4 [orig:196 D.1569 ] [196])
        (zero_extend:SI (reg:HI 3 r3 [orig:195 D.1568 ] [195]))) integer_fft.c:163 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 318 317 319 32 (set (reg:SI 3 r3 [orig:197 j.23 ] [197])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) integer_fft.c:164 625 {*arm_movsi_vfp}
     (nil))

(insn 319 318 320 32 (set (reg:SI 3 r3 [orig:198 D.1571 ] [198])
        (ashift:SI (reg:SI 3 r3 [orig:197 j.23 ] [197])
            (const_int 1 [0x1]))) integer_fft.c:164 119 {*arm_shiftsi3}
     (nil))

(insn 320 319 321 32 (set (reg:SI 2 r2 [346])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -72 [0xffffffffffffffb8])) [0 fr+0 S4 A32])) integer_fft.c:164 625 {*arm_movsi_vfp}
     (nil))

(insn 321 320 322 32 (set (reg/f:SI 3 r3 [orig:199 D.1572 ] [199])
        (plus:SI (reg:SI 2 r2 [346])
            (reg:SI 3 r3 [orig:198 D.1571 ] [198]))) integer_fft.c:164 4 {*arm_addsi3}
     (nil))

(insn 322 321 323 32 (set (reg:SI 3 r3 [orig:200 D.1573 ] [200])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [orig:199 D.1572 ] [199]) [0 *D.1572_124+0 S2 A16]))) integer_fft.c:164 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 323 322 324 32 (set (reg:SI 2 r2 [347])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -48 [0xffffffffffffffd0])) [0 wi+0 S2 A16]))) integer_fft.c:164 158 {*arm_extendhisi2_v6}
     (nil))

(insn 324 323 325 32 (set (reg:SI 3 r3 [348])
        (sign_extend:SI (reg:HI 3 r3 [orig:200 D.1573 ] [200]))) integer_fft.c:164 158 {*arm_extendhisi2_v6}
     (nil))

(insn 325 324 326 32 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [347])) integer_fft.c:164 625 {*arm_movsi_vfp}
     (nil))

(insn 326 325 327 32 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [348])) integer_fft.c:164 625 {*arm_movsi_vfp}
     (nil))

(call_insn 327 326 328 32 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fix_mpy") [flags 0x3]  <function_decl 0xb6b5c900 fix_mpy>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:164 236 {*call_value_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 328 327 330 32 (set (reg:SI 3 r3 [349])
        (reg:SI 0 r0)) integer_fft.c:164 625 {*arm_movsi_vfp}
     (nil))

(insn 330 328 331 32 (set (reg:SI 3 r3 [orig:202 D.1575 ] [202])
        (zero_extend:SI (reg:HI 3 r3 [orig:201 D.1574 ] [201]))) integer_fft.c:163 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 331 330 332 32 (set (reg:SI 3 r3 [350])
        (plus:SI (reg:SI 4 r4 [orig:196 D.1569 ] [196])
            (reg:SI 3 r3 [orig:202 D.1575 ] [202]))) integer_fft.c:163 4 {*arm_addsi3}
     (nil))

(insn 332 331 333 32 (set (reg:SI 3 r3 [orig:203 D.1576 ] [203])
        (zero_extend:SI (reg:HI 3 r3 [350]))) integer_fft.c:163 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 333 332 334 32 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -60 [0xffffffffffffffc4])) [0 ti+0 S2 A16])
        (reg:HI 3 r3 [orig:203 D.1576 ] [203])) integer_fft.c:163 178 {*movhi_insn_arch4}
     (nil))

(insn 334 333 335 32 (set (reg:SI 3 r3 [orig:204 i.24 ] [204])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) integer_fft.c:165 625 {*arm_movsi_vfp}
     (nil))

(insn 335 334 336 32 (set (reg:SI 3 r3 [orig:205 D.1578 ] [205])
        (ashift:SI (reg:SI 3 r3 [orig:204 i.24 ] [204])
            (const_int 1 [0x1]))) integer_fft.c:165 119 {*arm_shiftsi3}
     (nil))

(insn 336 335 337 32 (set (reg:SI 2 r2 [351])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -72 [0xffffffffffffffb8])) [0 fr+0 S4 A32])) integer_fft.c:165 625 {*arm_movsi_vfp}
     (nil))

(insn 337 336 338 32 (set (reg/f:SI 3 r3 [orig:206 D.1579 ] [206])
        (plus:SI (reg:SI 2 r2 [351])
            (reg:SI 3 r3 [orig:205 D.1578 ] [205]))) integer_fft.c:165 4 {*arm_addsi3}
     (nil))

(insn 338 337 339 32 (set (reg:HI 3 r3 [352])
        (mem:HI (reg/f:SI 3 r3 [orig:206 D.1579 ] [206]) [0 *D.1579_132+0 S2 A16])) integer_fft.c:165 178 {*movhi_insn_arch4}
     (nil))

(insn 339 338 340 32 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -42 [0xffffffffffffffd6])) [0 qr+0 S2 A16])
        (reg:HI 3 r3 [352])) integer_fft.c:165 178 {*movhi_insn_arch4}
     (nil))

(insn 340 339 341 32 (set (reg:SI 3 r3 [orig:207 i.25 ] [207])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) integer_fft.c:166 625 {*arm_movsi_vfp}
     (nil))

(insn 341 340 342 32 (set (reg:SI 3 r3 [orig:208 D.1581 ] [208])
        (ashift:SI (reg:SI 3 r3 [orig:207 i.25 ] [207])
            (const_int 1 [0x1]))) integer_fft.c:166 119 {*arm_shiftsi3}
     (nil))

(insn 342 341 343 32 (set (reg:SI 2 r2 [353])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -76 [0xffffffffffffffb4])) [0 fi+0 S4 A32])) integer_fft.c:166 625 {*arm_movsi_vfp}
     (nil))

(insn 343 342 344 32 (set (reg/f:SI 3 r3 [orig:209 D.1582 ] [209])
        (plus:SI (reg:SI 2 r2 [353])
            (reg:SI 3 r3 [orig:208 D.1581 ] [208]))) integer_fft.c:166 4 {*arm_addsi3}
     (nil))

(insn 344 343 345 32 (set (reg:HI 3 r3 [354])
        (mem:HI (reg/f:SI 3 r3 [orig:209 D.1582 ] [209]) [0 *D.1582_136+0 S2 A16])) integer_fft.c:166 178 {*movhi_insn_arch4}
     (nil))

(insn 345 344 346 32 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -44 [0xffffffffffffffd4])) [0 qi+0 S2 A16])
        (reg:HI 3 r3 [354])) integer_fft.c:166 178 {*movhi_insn_arch4}
     (nil))

(insn 346 345 347 32 (set (reg:SI 3 r3 [355])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -40 [0xffffffffffffffd8])) [0 shift+0 S4 A32])) integer_fft.c:167 625 {*arm_movsi_vfp}
     (nil))

(insn 347 346 348 32 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [355])
            (const_int 0 [0]))) integer_fft.c:167 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 348 347 349 32 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 356)
            (pc))) integer_fft.c:167 211 {*arm_cond_branch}
     (nil)
 -> 356)
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  33 (fallthru)
;; Succ edge  34

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 356 357 358 359

;; Pred edge  32 (fallthru)
(note 349 348 350 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 350 349 351 33 (set (reg:SI 3 r3 [356])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -42 [0xffffffffffffffd6])) [0 qr+0 S2 A16]))) integer_fft.c:168 158 {*arm_extendhisi2_v6}
     (nil))

(insn 351 350 352 33 (set (reg:SI 3 r3 [357])
        (ashiftrt:SI (reg:SI 3 r3 [356])
            (const_int 1 [0x1]))) integer_fft.c:168 119 {*arm_shiftsi3}
     (nil))

(insn 352 351 353 33 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -42 [0xffffffffffffffd6])) [0 qr+0 S2 A16])
        (reg:HI 3 r3 [357])) integer_fft.c:168 178 {*movhi_insn_arch4}
     (nil))

(insn 353 352 354 33 (set (reg:SI 3 r3 [358])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -44 [0xffffffffffffffd4])) [0 qi+0 S2 A16]))) integer_fft.c:169 158 {*arm_extendhisi2_v6}
     (nil))

(insn 354 353 355 33 (set (reg:SI 3 r3 [359])
        (ashiftrt:SI (reg:SI 3 r3 [358])
            (const_int 1 [0x1]))) integer_fft.c:169 119 {*arm_shiftsi3}
     (nil))

(insn 355 354 356 33 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -44 [0xffffffffffffffd4])) [0 qi+0 S2 A16])
        (reg:HI 3 r3 [359])) integer_fft.c:169 178 {*movhi_insn_arch4}
     (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  34 (fallthru)

;; Start of basic block ( 32 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 360 361 362 363 364 365 366 367 368 369 370

;; Pred edge  32
;; Pred edge  33 (fallthru)
(code_label 356 355 357 34 23 "" [1 uses])

(note 357 356 358 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 358 357 359 34 (set (reg:SI 3 r3 [orig:210 j.26 ] [210])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) integer_fft.c:171 625 {*arm_movsi_vfp}
     (nil))

(insn 359 358 360 34 (set (reg:SI 3 r3 [orig:211 D.1586 ] [211])
        (ashift:SI (reg:SI 3 r3 [orig:210 j.26 ] [210])
            (const_int 1 [0x1]))) integer_fft.c:171 119 {*arm_shiftsi3}
     (nil))

(insn 360 359 361 34 (set (reg:SI 2 r2 [360])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -72 [0xffffffffffffffb8])) [0 fr+0 S4 A32])) integer_fft.c:171 625 {*arm_movsi_vfp}
     (nil))

(insn 361 360 362 34 (set (reg/f:SI 3 r3 [orig:212 D.1587 ] [212])
        (plus:SI (reg:SI 2 r2 [360])
            (reg:SI 3 r3 [orig:211 D.1586 ] [211]))) integer_fft.c:171 4 {*arm_addsi3}
     (nil))

(insn 362 361 363 34 (set (reg:SI 1 r1 [orig:213 qr.27 ] [213])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -42 [0xffffffffffffffd6])) [0 qr+0 S2 A16]))) integer_fft.c:171 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 363 362 364 34 (set (reg:SI 2 r2 [orig:214 tr.28 ] [214])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -58 [0xffffffffffffffc6])) [0 tr+0 S2 A16]))) integer_fft.c:171 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 364 363 365 34 (set (reg:SI 2 r2 [361])
        (minus:SI (reg:SI 1 r1 [orig:213 qr.27 ] [213])
            (reg:SI 2 r2 [orig:214 tr.28 ] [214]))) integer_fft.c:171 29 {*arm_subsi3_insn}
     (nil))

(insn 365 364 366 34 (set (reg:SI 2 r2 [orig:215 D.1590 ] [215])
        (zero_extend:SI (reg:HI 2 r2 [361]))) integer_fft.c:171 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 366 365 367 34 (set (reg:SI 2 r2 [orig:216 D.1591 ] [216])
        (zero_extend:SI (reg:HI 2 r2 [orig:215 D.1590 ] [215]))) integer_fft.c:171 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 367 366 368 34 (set (mem:HI (reg/f:SI 3 r3 [orig:212 D.1587 ] [212]) [0 *D.1587_142+0 S2 A16])
        (reg:HI 2 r2 [orig:216 D.1591 ] [216])) integer_fft.c:171 178 {*movhi_insn_arch4}
     (nil))

(insn 368 367 369 34 (set (reg:SI 3 r3 [orig:217 j.29 ] [217])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) integer_fft.c:172 625 {*arm_movsi_vfp}
     (nil))

(insn 369 368 370 34 (set (reg:SI 3 r3 [orig:218 D.1593 ] [218])
        (ashift:SI (reg:SI 3 r3 [orig:217 j.29 ] [217])
            (const_int 1 [0x1]))) integer_fft.c:172 119 {*arm_shiftsi3}
     (nil))

(insn 370 369 371 34 (set (reg:SI 2 r2 [362])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -76 [0xffffffffffffffb4])) [0 fi+0 S4 A32])) integer_fft.c:172 625 {*arm_movsi_vfp}
     (nil))

(insn 371 370 372 34 (set (reg/f:SI 3 r3 [orig:219 D.1594 ] [219])
        (plus:SI (reg:SI 2 r2 [362])
            (reg:SI 3 r3 [orig:218 D.1593 ] [218]))) integer_fft.c:172 4 {*arm_addsi3}
     (nil))

(insn 372 371 373 34 (set (reg:SI 1 r1 [orig:220 qi.30 ] [220])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -44 [0xffffffffffffffd4])) [0 qi+0 S2 A16]))) integer_fft.c:172 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 373 372 374 34 (set (reg:SI 2 r2 [orig:221 ti.31 ] [221])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -60 [0xffffffffffffffc4])) [0 ti+0 S2 A16]))) integer_fft.c:172 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 374 373 375 34 (set (reg:SI 2 r2 [363])
        (minus:SI (reg:SI 1 r1 [orig:220 qi.30 ] [220])
            (reg:SI 2 r2 [orig:221 ti.31 ] [221]))) integer_fft.c:172 29 {*arm_subsi3_insn}
     (nil))

(insn 375 374 376 34 (set (reg:SI 2 r2 [orig:222 D.1597 ] [222])
        (zero_extend:SI (reg:HI 2 r2 [363]))) integer_fft.c:172 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 376 375 377 34 (set (reg:SI 2 r2 [orig:223 D.1598 ] [223])
        (zero_extend:SI (reg:HI 2 r2 [orig:222 D.1597 ] [222]))) integer_fft.c:172 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 377 376 378 34 (set (mem:HI (reg/f:SI 3 r3 [orig:219 D.1594 ] [219]) [0 *D.1594_149+0 S2 A16])
        (reg:HI 2 r2 [orig:223 D.1598 ] [223])) integer_fft.c:172 178 {*movhi_insn_arch4}
     (nil))

(insn 378 377 379 34 (set (reg:SI 3 r3 [orig:224 i.32 ] [224])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) integer_fft.c:173 625 {*arm_movsi_vfp}
     (nil))

(insn 379 378 380 34 (set (reg:SI 3 r3 [orig:225 D.1600 ] [225])
        (ashift:SI (reg:SI 3 r3 [orig:224 i.32 ] [224])
            (const_int 1 [0x1]))) integer_fft.c:173 119 {*arm_shiftsi3}
     (nil))

(insn 380 379 381 34 (set (reg:SI 2 r2 [364])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -72 [0xffffffffffffffb8])) [0 fr+0 S4 A32])) integer_fft.c:173 625 {*arm_movsi_vfp}
     (nil))

(insn 381 380 382 34 (set (reg/f:SI 3 r3 [orig:226 D.1601 ] [226])
        (plus:SI (reg:SI 2 r2 [364])
            (reg:SI 3 r3 [orig:225 D.1600 ] [225]))) integer_fft.c:173 4 {*arm_addsi3}
     (nil))

(insn 382 381 383 34 (set (reg:SI 1 r1 [orig:227 qr.33 ] [227])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -42 [0xffffffffffffffd6])) [0 qr+0 S2 A16]))) integer_fft.c:173 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 383 382 384 34 (set (reg:SI 2 r2 [orig:228 tr.34 ] [228])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -58 [0xffffffffffffffc6])) [0 tr+0 S2 A16]))) integer_fft.c:173 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 384 383 385 34 (set (reg:SI 2 r2 [365])
        (plus:SI (reg:SI 1 r1 [orig:227 qr.33 ] [227])
            (reg:SI 2 r2 [orig:228 tr.34 ] [228]))) integer_fft.c:173 4 {*arm_addsi3}
     (nil))

(insn 385 384 386 34 (set (reg:SI 2 r2 [orig:229 D.1604 ] [229])
        (zero_extend:SI (reg:HI 2 r2 [365]))) integer_fft.c:173 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 386 385 387 34 (set (reg:SI 2 r2 [orig:230 D.1605 ] [230])
        (zero_extend:SI (reg:HI 2 r2 [orig:229 D.1604 ] [229]))) integer_fft.c:173 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 387 386 388 34 (set (mem:HI (reg/f:SI 3 r3 [orig:226 D.1601 ] [226]) [0 *D.1601_156+0 S2 A16])
        (reg:HI 2 r2 [orig:230 D.1605 ] [230])) integer_fft.c:173 178 {*movhi_insn_arch4}
     (nil))

(insn 388 387 389 34 (set (reg:SI 3 r3 [orig:231 i.35 ] [231])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) integer_fft.c:174 625 {*arm_movsi_vfp}
     (nil))

(insn 389 388 390 34 (set (reg:SI 3 r3 [orig:232 D.1607 ] [232])
        (ashift:SI (reg:SI 3 r3 [orig:231 i.35 ] [231])
            (const_int 1 [0x1]))) integer_fft.c:174 119 {*arm_shiftsi3}
     (nil))

(insn 390 389 391 34 (set (reg:SI 2 r2 [366])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -76 [0xffffffffffffffb4])) [0 fi+0 S4 A32])) integer_fft.c:174 625 {*arm_movsi_vfp}
     (nil))

(insn 391 390 392 34 (set (reg/f:SI 3 r3 [orig:233 D.1608 ] [233])
        (plus:SI (reg:SI 2 r2 [366])
            (reg:SI 3 r3 [orig:232 D.1607 ] [232]))) integer_fft.c:174 4 {*arm_addsi3}
     (nil))

(insn 392 391 393 34 (set (reg:SI 1 r1 [orig:234 qi.36 ] [234])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -44 [0xffffffffffffffd4])) [0 qi+0 S2 A16]))) integer_fft.c:174 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 393 392 394 34 (set (reg:SI 2 r2 [orig:235 ti.37 ] [235])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -60 [0xffffffffffffffc4])) [0 ti+0 S2 A16]))) integer_fft.c:174 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 394 393 395 34 (set (reg:SI 2 r2 [367])
        (plus:SI (reg:SI 1 r1 [orig:234 qi.36 ] [234])
            (reg:SI 2 r2 [orig:235 ti.37 ] [235]))) integer_fft.c:174 4 {*arm_addsi3}
     (nil))

(insn 395 394 396 34 (set (reg:SI 2 r2 [orig:236 D.1611 ] [236])
        (zero_extend:SI (reg:HI 2 r2 [367]))) integer_fft.c:174 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 396 395 397 34 (set (reg:SI 2 r2 [orig:237 D.1612 ] [237])
        (zero_extend:SI (reg:HI 2 r2 [orig:236 D.1611 ] [236]))) integer_fft.c:174 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 397 396 398 34 (set (mem:HI (reg/f:SI 3 r3 [orig:233 D.1608 ] [233]) [0 *D.1608_163+0 S2 A16])
        (reg:HI 2 r2 [orig:237 D.1612 ] [237])) integer_fft.c:174 178 {*movhi_insn_arch4}
     (nil))

(insn 398 397 399 34 (set (reg:SI 2 r2 [368])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))

(insn 399 398 400 34 (set (reg:SI 3 r3 [369])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -64 [0xffffffffffffffc0])) [0 istep+0 S4 A32])) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))

(insn 400 399 401 34 (set (reg:SI 3 r3 [370])
        (plus:SI (reg:SI 2 r2 [368])
            (reg:SI 3 r3 [369]))) integer_fft.c:159 4 {*arm_addsi3}
     (nil))

(insn 401 400 402 34 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (reg:SI 3 r3 [370])) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 34 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  35 (fallthru)

;; Start of basic block ( 34 31) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 371 372

;; Pred edge  34 (fallthru)
;; Pred edge  31 [100.0%] 
(code_label 402 401 403 35 22 "" [1 uses])

(note 403 402 405 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 405 403 406 35 (set (reg:SI 2 r2 [371])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))

(insn 406 405 407 35 (set (reg:SI 3 r3 [372])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -52 [0xffffffffffffffcc])) [0 n+0 S4 A32])) integer_fft.c:159 625 {*arm_movsi_vfp}
     (nil))

(insn 407 406 408 35 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [371])
            (reg:SI 3 r3 [372]))) integer_fft.c:159 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 408 407 409 35 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) integer_fft.c:159 211 {*arm_cond_branch}
     (nil)
 -> 404)
;; End of basic block 35 -> ( 32 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  32
;; Succ edge  36 (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 373 374

;; Pred edge  35 (fallthru)
(note 409 408 410 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 410 409 411 36 (set (reg:SI 3 r3 [373])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:148 625 {*arm_movsi_vfp}
     (nil))

(insn 411 410 412 36 (set (reg:SI 3 r3 [374])
        (plus:SI (reg:SI 3 r3 [373])
            (const_int 1 [0x1]))) integer_fft.c:148 4 {*arm_addsi3}
     (nil))

(insn 412 411 413 36 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])
        (reg:SI 3 r3 [374])) integer_fft.c:148 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 36 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  37 (fallthru)

;; Start of basic block ( 36 26) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 375 376

;; Pred edge  36 (fallthru)
;; Pred edge  26 [100.0%] 
(code_label 413 412 414 37 19 "" [1 uses])

(note 414 413 416 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 416 414 417 37 (set (reg:SI 2 r2 [375])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -80 [0xffffffffffffffb0])) [0 m+0 S4 A32])) integer_fft.c:148 625 {*arm_movsi_vfp}
     (nil))

(insn 417 416 418 37 (set (reg:SI 3 r3 [376])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 l+0 S4 A32])) integer_fft.c:148 625 {*arm_movsi_vfp}
     (nil))

(insn 418 417 419 37 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [375])
            (reg:SI 3 r3 [376]))) integer_fft.c:148 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 419 418 420 37 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 415)
            (pc))) integer_fft.c:148 211 {*arm_cond_branch}
     (nil)
 -> 415)
;; End of basic block 37 -> ( 27 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  27
;; Succ edge  38 (fallthru)

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 377 378 379

;; Pred edge  37 (fallthru)
(note 420 419 421 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 421 420 422 38 (set (reg:SI 3 r3 [377])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -32 [0xffffffffffffffe0])) [0 k+0 S4 A32])) integer_fft.c:177 625 {*arm_movsi_vfp}
     (nil))

(insn 422 421 423 38 (set (reg:SI 3 r3 [378])
        (plus:SI (reg:SI 3 r3 [377])
            (const_int -1 [0xffffffffffffffff]))) integer_fft.c:177 4 {*arm_addsi3}
     (nil))

(insn 423 422 424 38 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -32 [0xffffffffffffffe0])) [0 k+0 S4 A32])
        (reg:SI 3 r3 [378])) integer_fft.c:177 625 {*arm_movsi_vfp}
     (nil))

(insn 424 423 425 38 (set (reg:SI 3 r3 [379])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -64 [0xffffffffffffffc0])) [0 istep+0 S4 A32])) integer_fft.c:178 625 {*arm_movsi_vfp}
     (nil))

(insn 425 424 426 38 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 l+0 S4 A32])
        (reg:SI 3 r3 [379])) integer_fft.c:178 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 38 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  39 (fallthru)

;; Start of basic block ( 38 11) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 380 381

;; Pred edge  38 (fallthru)
;; Pred edge  11 [100.0%] 
(code_label 426 425 427 39 9 "" [1 uses])

(note 427 426 429 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 429 427 430 39 (set (reg:SI 2 r2 [380])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 l+0 S4 A32])) integer_fft.c:120 625 {*arm_movsi_vfp}
     (nil))

(insn 430 429 431 39 (set (reg:SI 3 r3 [381])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -52 [0xffffffffffffffcc])) [0 n+0 S4 A32])) integer_fft.c:120 625 {*arm_movsi_vfp}
     (nil))

(insn 431 430 432 39 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [380])
            (reg:SI 3 r3 [381]))) integer_fft.c:120 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 432 431 433 39 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 428)
            (pc))) integer_fft.c:120 211 {*arm_cond_branch}
     (nil)
 -> 428)
;; End of basic block 39 -> ( 12 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  12
;; Succ edge  40 (fallthru)

;; Start of basic block ( 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134

;; Pred edge  39 (fallthru)
(note 433 432 434 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 434 433 435 40 (set (reg:SI 3 r3 [orig:134 D.1489 ] [134])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -36 [0xffffffffffffffdc])) [0 scale+0 S4 A32])) integer_fft.c:181 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 40 -> ( 41)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  41 (fallthru)

;; Start of basic block ( 40 3) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 238

;; Pred edge  40 (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 435 434 436 41 3 "" [1 uses])

(note 436 435 441 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 441 436 444 41 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:238 <retval> ] [238])) integer_fft.c:182 625 {*arm_movsi_vfp}
     (nil))

(insn 444 441 470 41 (use (reg/i:SI 0 r0)) integer_fft.c:182 -1
     (nil))
;; End of basic block 41 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 470 444 0 NOTE_INSN_DELETED)


;; Function window (window)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 13 (  1.4)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r206: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a0 (r206,l0) best GENERAL_REGS, cover GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a1 (r205,l0) best GENERAL_REGS, cover GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a2 (r204,l0) best GENERAL_REGS, cover GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a3 (r203,l0) best GENERAL_REGS, cover GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a4 (r202,l0) best GENERAL_REGS, cover GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a5 (r201,l0) best GENERAL_REGS, cover GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a6 (r200,l0) best GENERAL_REGS, cover GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a15 (r199,l0) best GENERAL_REGS, cover GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a16 (r198,l0) best GENERAL_REGS, cover GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a18 (r197,l0) best GENERAL_REGS, cover GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a19 (r196,l0) best GENERAL_REGS, cover GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a21 (r195,l0) best GENERAL_REGS, cover GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a20 (r194,l0) best GENERAL_REGS, cover GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a25 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a28 (r192,l0) best GENERAL_REGS, cover GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a30 (r191,l0) best GENERAL_REGS, cover GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a31 (r190,l0) best GENERAL_REGS, cover GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a32 (r189,l0) best GENERAL_REGS, cover GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a33 (r188,l0) best GENERAL_REGS, cover GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a34 (r187,l0) best GENERAL_REGS, cover GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a35 (r186,l0) best GENERAL_REGS, cover GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a36 (r185,l0) best GENERAL_REGS, cover GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a37 (r184,l0) best GENERAL_REGS, cover GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a38 (r183,l0) best GENERAL_REGS, cover GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a39 (r182,l0) best GENERAL_REGS, cover GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a40 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a41 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a50 (r179,l0) best GENERAL_REGS, cover GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a51 (r178,l0) best GENERAL_REGS, cover GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a53 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a54 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a56 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a55 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a60 (r173,l0) best GENERAL_REGS, cover GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a63 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a65 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a66 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a67 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a68 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a69 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a8 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a9 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a10 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a12 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a13 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a14 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a17 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a11 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a22 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a23 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a24 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a26 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a7 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a27 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a29 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a43 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a44 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a45 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a47 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a48 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a49 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a52 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a46 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a57 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a58 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a59 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a61 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a42 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a62 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a64 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r206,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a1(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a2(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a3(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a4(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a5(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a6(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a7(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a8(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a9(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a10(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a11(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a12(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a13(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a14(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a15(r199,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a16(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a17(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a18(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a19(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a20(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a21(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a22(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a23(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a24(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a25(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a26(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a27(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a28(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a29(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a30(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a31(r190,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a32(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a33(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a34(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a35(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a36(r185,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a37(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a38(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a39(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a40(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a41(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a42(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a43(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a44(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a45(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a46(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a47(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a48(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a49(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a50(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a51(r178,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a52(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a53(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a54(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a55(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a56(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a57(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a58(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a59(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a60(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a61(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a62(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a63(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a64(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a65(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a66(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a67(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a68(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a69(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20

   Insn 108(l0): point = 1
   Insn 107(l0): point = 3
   Insn 106(l0): point = 5
   Insn 105(l0): point = 7
   Insn 101(l0): point = 10
   Insn 100(l0): point = 12
   Insn 99(l0): point = 14
   Insn 98(l0): point = 16
   Insn 97(l0): point = 18
   Insn 96(l0): point = 20
   Insn 95(l0): point = 22
   Insn 94(l0): point = 24
   Insn 93(l0): point = 26
   Insn 92(l0): point = 28
   Insn 91(l0): point = 30
   Insn 90(l0): point = 32
   Insn 89(l0): point = 34
   Insn 88(l0): point = 36
   Insn 87(l0): point = 38
   Insn 86(l0): point = 40
   Insn 85(l0): point = 42
   Insn 84(l0): point = 44
   Insn 83(l0): point = 46
   Insn 82(l0): point = 48
   Insn 81(l0): point = 50
   Insn 80(l0): point = 52
   Insn 79(l0): point = 54
   Insn 78(l0): point = 56
   Insn 77(l0): point = 58
   Insn 76(l0): point = 60
   Insn 75(l0): point = 62
   Insn 74(l0): point = 64
   Insn 73(l0): point = 66
   Insn 72(l0): point = 68
   Insn 71(l0): point = 70
   Insn 114(l0): point = 73
   Insn 67(l0): point = 75
   Insn 66(l0): point = 77
   Insn 65(l0): point = 79
   Insn 64(l0): point = 81
   Insn 63(l0): point = 83
   Insn 62(l0): point = 85
   Insn 61(l0): point = 87
   Insn 59(l0): point = 90
   Insn 58(l0): point = 92
   Insn 57(l0): point = 94
   Insn 56(l0): point = 96
   Insn 52(l0): point = 99
   Insn 51(l0): point = 101
   Insn 50(l0): point = 103
   Insn 49(l0): point = 105
   Insn 48(l0): point = 107
   Insn 47(l0): point = 109
   Insn 46(l0): point = 111
   Insn 45(l0): point = 113
   Insn 44(l0): point = 115
   Insn 43(l0): point = 117
   Insn 42(l0): point = 119
   Insn 41(l0): point = 121
   Insn 40(l0): point = 123
   Insn 39(l0): point = 125
   Insn 38(l0): point = 127
   Insn 37(l0): point = 129
   Insn 36(l0): point = 131
   Insn 35(l0): point = 133
   Insn 34(l0): point = 135
   Insn 33(l0): point = 137
   Insn 32(l0): point = 139
   Insn 31(l0): point = 141
   Insn 30(l0): point = 143
   Insn 29(l0): point = 145
   Insn 28(l0): point = 147
   Insn 27(l0): point = 149
   Insn 26(l0): point = 151
   Insn 25(l0): point = 153
   Insn 24(l0): point = 155
   Insn 23(l0): point = 157
   Insn 22(l0): point = 159
   Insn 112(l0): point = 162
   Insn 18(l0): point = 164
   Insn 17(l0): point = 166
   Insn 16(l0): point = 168
   Insn 15(l0): point = 170
   Insn 14(l0): point = 172
   Insn 13(l0): point = 174
   Insn 12(l0): point = 176
   Insn 11(l0): point = 178
   Insn 10(l0): point = 180
   Insn 9(l0): point = 182
   Insn 8(l0): point = 184
   Insn 7(l0): point = 186
   Insn 3(l0): point = 188
   Insn 2(l0): point = 190
 a0(r206): [4..5]
 a1(r205): [4..7]
 a2(r204): [11..12]
 a3(r203): [13..14]
 a4(r202): [13..16]
 a5(r201): [19..20]
 a6(r200): [21..22]
 a7(r151): [25..64]
 a8(r163): [25..26]
 a9(r162): [27..28]
 a10(r161): [29..30]
 a11(r156): [31..52]
 a12(r160): [31..32]
 a13(r159): [33..34]
 a14(r158): [35..36]
 a15(r199): [37..38]
 a16(r198): [39..40]
 a17(r157): [41..42]
 a18(r197): [43..44]
 a19(r196): [45..46]
 a20(r194): [45..50]
 a21(r195): [47..48]
 a22(r155): [53..54]
 a23(r154): [55..56]
 a24(r153): [57..60]
 a25(r193): [57..58]
 a26(r152): [61..62]
 a27(r150): [65..68]
 a28(r192): [65..66]
 a29(r149): [69..70]
 a30(r191): [76..77]
 a31(r190): [78..79]
 a32(r189): [78..81]
 a33(r188): [84..85]
 a34(r187): [86..87]
 a35(r186): [93..94]
 a36(r185): [93..96]
 a37(r184): [100..101]
 a38(r183): [102..103]
 a39(r182): [102..105]
 a40(r181): [108..109]
 a41(r180): [110..111]
 a42(r136): [114..153]
 a43(r148): [114..115]
 a44(r147): [116..117]
 a45(r146): [118..119]
 a46(r141): [120..141]
 a47(r145): [120..121]
 a48(r144): [122..123]
 a49(r143): [124..125]
 a50(r179): [126..127]
 a51(r178): [128..129]
 a52(r142): [130..131]
 a53(r177): [132..133]
 a54(r176): [134..135]
 a55(r174): [134..139]
 a56(r175): [136..137]
 a57(r140): [142..143]
 a58(r139): [144..145]
 a59(r138): [146..149]
 a60(r173): [146..147]
 a61(r137): [150..151]
 a62(r135): [154..157]
 a63(r172): [154..155]
 a64(r134): [158..159]
 a65(r171): [165..166]
 a66(r170): [169..170]
 a67(r169): [173..174]
 a68(r168): [175..176]
 a69(r167): [179..180]
Compressing live ranges: from 193 to 110 - 56%
Ranges after the compression:
 a0(r206): [0..1]
 a1(r205): [0..1]
 a2(r204): [2..3]
 a3(r203): [4..5]
 a4(r202): [4..5]
 a5(r201): [6..7]
 a6(r200): [8..9]
 a7(r151): [10..41]
 a8(r163): [10..11]
 a9(r162): [12..13]
 a10(r161): [14..15]
 a11(r156): [16..33]
 a12(r160): [16..17]
 a13(r159): [18..19]
 a14(r158): [20..21]
 a15(r199): [22..23]
 a16(r198): [24..25]
 a17(r157): [26..27]
 a18(r197): [28..29]
 a19(r196): [30..31]
 a20(r194): [30..33]
 a21(r195): [32..33]
 a22(r155): [34..35]
 a23(r154): [36..37]
 a24(r153): [38..39]
 a25(r193): [38..39]
 a26(r152): [40..41]
 a27(r150): [42..43]
 a28(r192): [42..43]
 a29(r149): [44..45]
 a30(r191): [46..47]
 a31(r190): [48..49]
 a32(r189): [48..49]
 a33(r188): [50..51]
 a34(r187): [52..53]
 a35(r186): [54..55]
 a36(r185): [54..55]
 a37(r184): [56..57]
 a38(r183): [58..59]
 a39(r182): [58..59]
 a40(r181): [60..61]
 a41(r180): [62..63]
 a42(r136): [64..95]
 a43(r148): [64..65]
 a44(r147): [66..67]
 a45(r146): [68..69]
 a46(r141): [70..87]
 a47(r145): [70..71]
 a48(r144): [72..73]
 a49(r143): [74..75]
 a50(r179): [76..77]
 a51(r178): [78..79]
 a52(r142): [80..81]
 a53(r177): [82..83]
 a54(r176): [84..85]
 a55(r174): [84..87]
 a56(r175): [86..87]
 a57(r140): [88..89]
 a58(r139): [90..91]
 a59(r138): [92..93]
 a60(r173): [92..93]
 a61(r137): [94..95]
 a62(r135): [96..97]
 a63(r172): [96..97]
 a64(r134): [98..99]
 a65(r171): [100..101]
 a66(r170): [102..103]
 a67(r169): [104..105]
 a68(r168): [106..107]
 a69(r167): [108..109]
  regions=3, blocks=9, points=110
    allocnos=70 (big 0), copies=0, conflicts=0, ranges=70
Disposition:
   64:r134 l0     3   62:r135 l0     3   42:r136 l0     3   61:r137 l0     2
   59:r138 l0     2   58:r139 l0     2   57:r140 l0     2   46:r141 l0     2
   52:r142 l0     1   49:r143 l0     1   48:r144 l0     1   47:r145 l0     1
   45:r146 l0     2   44:r147 l0     2   43:r148 l0     2   29:r149 l0     3
   27:r150 l0     3    7:r151 l0     3   26:r152 l0     2   24:r153 l0     2
   23:r154 l0     2   22:r155 l0     2   11:r156 l0     2   17:r157 l0     1
   14:r158 l0     1   13:r159 l0     1   12:r160 l0     1   10:r161 l0     2
    9:r162 l0     2    8:r163 l0     2   69:r167 l0     3   68:r168 l0     3
   67:r169 l0     3   66:r170 l0     3   65:r171 l0     3   63:r172 l0     2
   60:r173 l0     1   55:r174 l0     0   56:r175 l0     1   54:r176 l0     1
   53:r177 l0     1   51:r178 l0     1   50:r179 l0     1   41:r180 l0     3
   40:r181 l0     3   39:r182 l0     2   38:r183 l0     3   37:r184 l0     3
   36:r185 l0     2   35:r186 l0     3   34:r187 l0     3   33:r188 l0     3
   32:r189 l0     2   31:r190 l0     3   30:r191 l0     3   28:r192 l0     2
   25:r193 l0     1   20:r194 l0     0   21:r195 l0     1   19:r196 l0     1
   18:r197 l0     1   16:r198 l0     1   15:r199 l0     1    6:r200 l0     3
    5:r201 l0     3    4:r202 l0     2    3:r203 l0     3    2:r204 l0     3
    1:r205 l0     2    0:r206 l0     3
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, dead_or_set: 0
insn=3, live_throughout: 13, dead_or_set: 1
insn=7, live_throughout: 13, dead_or_set: 0
insn=8, live_throughout: 0, 13, dead_or_set: 1
insn=9, live_throughout: 13, dead_or_set: 0, 1, 14
insn=10, live_throughout: 13, 14, dead_or_set: 0, 167
insn=11, live_throughout: 13, 14, dead_or_set: 167
insn=12, live_throughout: 13, 14, dead_or_set: 168
insn=13, live_throughout: 13, 14, dead_or_set: 168, 169
insn=14, live_throughout: 13, 14, dead_or_set: 169
insn=15, live_throughout: 13, 14, dead_or_set: 170
insn=16, live_throughout: 13, 14, dead_or_set: 170
insn=17, live_throughout: 13, 14, dead_or_set: 171
insn=18, live_throughout: 13, 14, dead_or_set: 171
insn=112, live_throughout: 13, 14, dead_or_set: 
insn=55, live_throughout: 13, 14, dead_or_set: 
insn=22, live_throughout: 13, 14, dead_or_set: 134
insn=23, live_throughout: 13, 14, dead_or_set: 134, 135
insn=24, live_throughout: 13, 14, 135, dead_or_set: 172
insn=25, live_throughout: 13, 14, dead_or_set: 135, 136, 172
insn=26, live_throughout: 13, 14, 136, dead_or_set: 137
insn=27, live_throughout: 13, 14, 136, dead_or_set: 137, 138
insn=28, live_throughout: 13, 14, 136, 138, dead_or_set: 173
insn=29, live_throughout: 13, 14, 136, dead_or_set: 138, 139, 173
insn=30, live_throughout: 13, 14, 136, dead_or_set: 139, 140
insn=31, live_throughout: 13, 14, 136, dead_or_set: 140, 141
insn=32, live_throughout: 13, 14, 136, 141, dead_or_set: 174
insn=33, live_throughout: 13, 14, 136, 141, 174, dead_or_set: 175
insn=34, live_throughout: 13, 14, 136, 141, 174, dead_or_set: 175, 176
insn=35, live_throughout: 13, 14, 136, 141, dead_or_set: 174, 176, 177
insn=36, live_throughout: 13, 14, 136, 141, dead_or_set: 142, 177
insn=37, live_throughout: 13, 14, 136, 141, dead_or_set: 142, 178
insn=38, live_throughout: 13, 14, 136, 141, dead_or_set: 178, 179
insn=39, live_throughout: 13, 14, 136, 141, dead_or_set: 143, 179
insn=40, live_throughout: 13, 14, 136, 141, dead_or_set: 143, 144
insn=41, live_throughout: 13, 14, 136, 141, dead_or_set: 144, 145
insn=42, live_throughout: 13, 14, 136, dead_or_set: 141, 145, 146
insn=43, live_throughout: 13, 14, 136, dead_or_set: 146, 147
insn=44, live_throughout: 13, 14, 136, dead_or_set: 147, 148
insn=45, live_throughout: 13, 14, dead_or_set: 136, 148
insn=46, live_throughout: 13, 14, dead_or_set: 180
insn=47, live_throughout: 13, 14, dead_or_set: 180, 181
insn=48, live_throughout: 13, 14, dead_or_set: 181
insn=49, live_throughout: 13, 14, dead_or_set: 182
insn=50, live_throughout: 13, 14, 182, dead_or_set: 183
insn=51, live_throughout: 13, 14, dead_or_set: 182, 183, 184
insn=52, live_throughout: 13, 14, dead_or_set: 184
insn=53, live_throughout: 13, 14, dead_or_set: 
insn=56, live_throughout: 13, 14, dead_or_set: 185
insn=57, live_throughout: 13, 14, 185, dead_or_set: 186
insn=58, live_throughout: 13, 14, dead_or_set: 185, 186
insn=59, live_throughout: 13, 14, dead_or_set: 
insn=61, live_throughout: 13, 14, dead_or_set: 187
insn=62, live_throughout: 13, 14, dead_or_set: 187, 188
insn=63, live_throughout: 13, 14, dead_or_set: 188
insn=64, live_throughout: 13, 14, dead_or_set: 189
insn=65, live_throughout: 13, 14, 189, dead_or_set: 190
insn=66, live_throughout: 13, 14, dead_or_set: 189, 190, 191
insn=67, live_throughout: 13, 14, dead_or_set: 191
insn=114, live_throughout: 13, 14, dead_or_set: 
insn=104, live_throughout: 13, 14, dead_or_set: 
insn=71, live_throughout: 13, 14, dead_or_set: 149
insn=72, live_throughout: 13, 14, dead_or_set: 149, 150
insn=73, live_throughout: 13, 14, 150, dead_or_set: 192
insn=74, live_throughout: 13, 14, dead_or_set: 150, 151, 192
insn=75, live_throughout: 13, 14, 151, dead_or_set: 152
insn=76, live_throughout: 13, 14, 151, dead_or_set: 152, 153
insn=77, live_throughout: 13, 14, 151, 153, dead_or_set: 193
insn=78, live_throughout: 13, 14, 151, dead_or_set: 153, 154, 193
insn=79, live_throughout: 13, 14, 151, dead_or_set: 154, 155
insn=80, live_throughout: 13, 14, 151, dead_or_set: 155, 156
insn=81, live_throughout: 13, 14, 151, 156, dead_or_set: 194
insn=82, live_throughout: 13, 14, 151, 156, 194, dead_or_set: 195
insn=83, live_throughout: 13, 14, 151, 156, 194, dead_or_set: 195, 196
insn=84, live_throughout: 13, 14, 151, 156, dead_or_set: 194, 196, 197
insn=85, live_throughout: 13, 14, 151, 156, dead_or_set: 157, 197
insn=86, live_throughout: 13, 14, 151, 156, dead_or_set: 157, 198
insn=87, live_throughout: 13, 14, 151, 156, dead_or_set: 198, 199
insn=88, live_throughout: 13, 14, 151, 156, dead_or_set: 158, 199
insn=89, live_throughout: 13, 14, 151, 156, dead_or_set: 158, 159
insn=90, live_throughout: 13, 14, 151, 156, dead_or_set: 159, 160
insn=91, live_throughout: 13, 14, 151, dead_or_set: 156, 160, 161
insn=92, live_throughout: 13, 14, 151, dead_or_set: 161, 162
insn=93, live_throughout: 13, 14, 151, dead_or_set: 162, 163
insn=94, live_throughout: 13, 14, dead_or_set: 151, 163
insn=95, live_throughout: 13, 14, dead_or_set: 200
insn=96, live_throughout: 13, 14, dead_or_set: 200, 201
insn=97, live_throughout: 13, 14, dead_or_set: 201
insn=98, live_throughout: 13, 14, dead_or_set: 202
insn=99, live_throughout: 13, 14, 202, dead_or_set: 203
insn=100, live_throughout: 13, 14, dead_or_set: 202, 203, 204
insn=101, live_throughout: 13, 14, dead_or_set: 204
insn=102, live_throughout: 13, 14, dead_or_set: 
insn=105, live_throughout: 13, 14, dead_or_set: 205
insn=106, live_throughout: 13, 14, 205, dead_or_set: 206
insn=107, live_throughout: 13, 14, dead_or_set: 205, 206
insn=108, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 45
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 42
changing reg in insn 36
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 44
changing reg in insn 71
changing reg in insn 72
changing reg in insn 72
changing reg in insn 74
changing reg in insn 74
changing reg in insn 94
changing reg in insn 75
changing reg in insn 76
changing reg in insn 76
changing reg in insn 78
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 80
changing reg in insn 91
changing reg in insn 85
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 91
changing reg in insn 91
changing reg in insn 92
changing reg in insn 92
changing reg in insn 93
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 24
changing reg in insn 25
changing reg in insn 28
changing reg in insn 29
changing reg in insn 32
changing reg in insn 35
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 51
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 56
changing reg in insn 58
changing reg in insn 57
changing reg in insn 58
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 66
changing reg in insn 65
changing reg in insn 66
changing reg in insn 66
changing reg in insn 67
changing reg in insn 73
changing reg in insn 74
changing reg in insn 77
changing reg in insn 78
changing reg in insn 81
changing reg in insn 84
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 87
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
changing reg in insn 100
changing reg in insn 99
changing reg in insn 100
changing reg in insn 100
changing reg in insn 101
changing reg in insn 105
changing reg in insn 107
changing reg in insn 106
changing reg in insn 107
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.


window

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={23d,22u} r2={25d,23u} r3={27d,25u} r11={1d,45u} r12={1d} r13={1d,9u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,1u,1e} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 333{199d,133u,1e} in 93{92 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 167 168 169 170 171

;; Pred edge  ENTRY (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 fr+0 S4 A32])
        (reg:SI 0 r0 [ fr ])) integer_fft.c:187 625 {*arm_movsi_vfp}
     (nil))

(insn 3 2 4 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 n+0 S4 A32])
        (reg:SI 1 r1 [ n ])) integer_fft.c:187 625 {*arm_movsi_vfp}
     (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:SI 0 r0)
        (const_int 1024 [0x400])) integer_fft.c:190 625 {*arm_movsi_vfp}
     (nil))

(insn 8 7 9 2 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 n+0 S4 A32])) integer_fft.c:190 625 {*arm_movsi_vfp}
     (nil))

(call_insn/u 9 8 10 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_idiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:190 236 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 10 9 11 2 (set (reg:SI 3 r3 [167])
        (reg:SI 0 r0)) integer_fft.c:190 625 {*arm_movsi_vfp}
     (expr_list:REG_EQUAL (div:SI (const_int 1024 [0x400])
            (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -24 [0xffffffffffffffe8])) [0 n+0 S4 A32]))
        (nil)))

(insn 11 10 12 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
        (reg:SI 3 r3 [167])) integer_fft.c:190 625 {*arm_movsi_vfp}
     (nil))

(insn 12 11 13 2 (set (reg:SI 3 r3 [168])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 n+0 S4 A32])) integer_fft.c:191 625 {*arm_movsi_vfp}
     (nil))

(insn 13 12 14 2 (set (reg:SI 3 r3 [169])
        (ashiftrt:SI (reg:SI 3 r3 [168])
            (const_int 1 [0x1]))) integer_fft.c:191 119 {*arm_shiftsi3}
     (nil))

(insn 14 13 15 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 n+0 S4 A32])
        (reg:SI 3 r3 [169])) integer_fft.c:191 625 {*arm_movsi_vfp}
     (nil))

(insn 15 14 16 2 (set (reg:SI 3 r3 [170])
        (const_int 0 [0])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 16 15 17 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 3 r3 [170])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 17 16 18 2 (set (reg:SI 3 r3 [171])
        (const_int 256 [0x100])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 18 17 112 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 k+0 S4 A32])
        (reg:SI 3 r3 [171])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 112 18 113 2 (set (pc)
        (label_ref 53)) integer_fft.c:192 223 {*arm_jump}
     (nil)
 -> 53)
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%] 

(barrier 113 112 55)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 172 173 174 175 176 177 178 179 180 181 182 183 184

;; Pred edge  4
(code_label 55 113 21 3 32 "" [1 uses])

(note 21 55 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 3 (set (reg:SI 3 r3 [orig:134 i.5 ] [134])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:193 625 {*arm_movsi_vfp}
     (nil))

(insn 23 22 24 3 (set (reg:SI 3 r3 [orig:135 D.1458 ] [135])
        (ashift:SI (reg:SI 3 r3 [orig:134 i.5 ] [134])
            (const_int 1 [0x1]))) integer_fft.c:193 119 {*arm_shiftsi3}
     (nil))

(insn 24 23 25 3 (set (reg:SI 2 r2 [172])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 fr+0 S4 A32])) integer_fft.c:193 625 {*arm_movsi_vfp}
     (nil))

(insn 25 24 26 3 (set (reg/f:SI 3 r3 [orig:136 D.1459 ] [136])
        (plus:SI (reg:SI 2 r2 [172])
            (reg:SI 3 r3 [orig:135 D.1458 ] [135]))) integer_fft.c:193 4 {*arm_addsi3}
     (nil))

(insn 26 25 27 3 (set (reg:SI 2 r2 [orig:137 i.6 ] [137])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:193 625 {*arm_movsi_vfp}
     (nil))

(insn 27 26 28 3 (set (reg:SI 2 r2 [orig:138 D.1461 ] [138])
        (ashift:SI (reg:SI 2 r2 [orig:137 i.6 ] [137])
            (const_int 1 [0x1]))) integer_fft.c:193 119 {*arm_shiftsi3}
     (nil))

(insn 28 27 29 3 (set (reg:SI 1 r1 [173])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 fr+0 S4 A32])) integer_fft.c:193 625 {*arm_movsi_vfp}
     (nil))

(insn 29 28 30 3 (set (reg/f:SI 2 r2 [orig:139 D.1462 ] [139])
        (plus:SI (reg:SI 1 r1 [173])
            (reg:SI 2 r2 [orig:138 D.1461 ] [138]))) integer_fft.c:193 4 {*arm_addsi3}
     (nil))

(insn 30 29 31 3 (set (reg:SI 2 r2 [orig:140 D.1463 ] [140])
        (zero_extend:SI (mem:HI (reg/f:SI 2 r2 [orig:139 D.1462 ] [139]) [0 *D.1462_16+0 S2 A16]))) integer_fft.c:193 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 31 30 32 3 (set (reg:SI 2 r2 [orig:141 D.1464 ] [141])
        (sign_extend:SI (reg:HI 2 r2 [orig:140 D.1463 ] [140]))) integer_fft.c:193 158 {*arm_extendhisi2_v6}
     (nil))

(insn 32 31 33 3 (set (reg/f:SI 0 r0 [174])
        (symbol_ref:SI ("Sinewave") [flags 0x2]  <var_decl 0xb6b62180 Sinewave>)) integer_fft.c:193 625 {*arm_movsi_vfp}
     (nil))

(insn 33 32 34 3 (set (reg:SI 1 r1 [175])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 k+0 S4 A32])) integer_fft.c:193 625 {*arm_movsi_vfp}
     (nil))

(insn 34 33 35 3 (set (reg:SI 1 r1 [176])
        (ashift:SI (reg:SI 1 r1 [175])
            (const_int 1 [0x1]))) integer_fft.c:193 119 {*arm_shiftsi3}
     (nil))

(insn 35 34 36 3 (set (reg/f:SI 1 r1 [177])
        (plus:SI (reg/f:SI 0 r0 [174])
            (reg:SI 1 r1 [176]))) integer_fft.c:193 4 {*arm_addsi3}
     (nil))

(insn 36 35 37 3 (set (reg:SI 1 r1 [orig:142 D.1465 ] [142])
        (zero_extend:SI (mem/s/j:HI (reg/f:SI 1 r1 [177]) [0 Sinewave S2 A16]))) integer_fft.c:193 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 37 36 38 3 (set (reg:SI 1 r1 [178])
        (sign_extend:SI (reg:HI 1 r1 [orig:142 D.1465 ] [142]))) integer_fft.c:193 158 {*arm_extendhisi2_v6}
     (nil))

(insn 38 37 39 3 (set (reg:SI 1 r1 [179])
        (ashiftrt:SI (reg:SI 1 r1 [178])
            (const_int 1 [0x1]))) integer_fft.c:193 119 {*arm_shiftsi3}
     (nil))

(insn 39 38 40 3 (set (reg:SI 1 r1 [orig:143 D.1466 ] [143])
        (zero_extend:SI (reg:HI 1 r1 [179]))) integer_fft.c:193 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 40 39 41 3 (set (reg:SI 1 r1 [orig:144 D.1467 ] [144])
        (sign_extend:SI (reg:HI 1 r1 [orig:143 D.1466 ] [143]))) integer_fft.c:193 158 {*arm_extendhisi2_v6}
     (nil))

(insn 41 40 42 3 (set (reg:SI 1 r1 [orig:145 D.1468 ] [145])
        (minus:SI (const_int 16384 [0x4000])
            (reg:SI 1 r1 [orig:144 D.1467 ] [144]))) integer_fft.c:193 29 {*arm_subsi3_insn}
     (nil))

(insn 42 41 43 3 (set (reg:SI 2 r2 [orig:146 D.1469 ] [146])
        (mult:SI (reg:SI 1 r1 [orig:145 D.1468 ] [145])
            (reg:SI 2 r2 [orig:141 D.1464 ] [141]))) integer_fft.c:193 34 {*arm_mulsi3_v6}
     (nil))

(insn 43 42 44 3 (set (reg:SI 2 r2 [orig:147 D.1470 ] [147])
        (ashiftrt:SI (reg:SI 2 r2 [orig:146 D.1469 ] [146])
            (const_int 15 [0xf]))) integer_fft.c:193 119 {*arm_shiftsi3}
     (nil))

(insn 44 43 45 3 (set (reg:SI 2 r2 [orig:148 D.1471 ] [148])
        (zero_extend:SI (reg:HI 2 r2 [orig:147 D.1470 ] [147]))) integer_fft.c:193 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 45 44 46 3 (set (mem:HI (reg/f:SI 3 r3 [orig:136 D.1459 ] [136]) [0 *D.1459_13+0 S2 A16])
        (reg:HI 2 r2 [orig:148 D.1471 ] [148])) integer_fft.c:193 178 {*movhi_insn_arch4}
     (nil))

(insn 46 45 47 3 (set (reg:SI 3 r3 [180])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 47 46 48 3 (set (reg:SI 3 r3 [181])
        (plus:SI (reg:SI 3 r3 [180])
            (const_int 1 [0x1]))) integer_fft.c:192 4 {*arm_addsi3}
     (nil))

(insn 48 47 49 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 3 r3 [181])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 49 48 50 3 (set (reg:SI 2 r2 [182])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 k+0 S4 A32])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 50 49 51 3 (set (reg:SI 3 r3 [183])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 51 50 52 3 (set (reg:SI 3 r3 [184])
        (plus:SI (reg:SI 2 r2 [182])
            (reg:SI 3 r3 [183]))) integer_fft.c:192 4 {*arm_addsi3}
     (nil))

(insn 52 51 53 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 k+0 S4 A32])
        (reg:SI 3 r3 [184])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  4 (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 185 186

;; Pred edge  3 (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 53 52 54 4 31 "" [1 uses])

(note 54 53 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 56 54 57 4 (set (reg:SI 2 r2 [185])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 57 56 58 4 (set (reg:SI 3 r3 [186])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 n+0 S4 A32])) integer_fft.c:192 625 {*arm_movsi_vfp}
     (nil))

(insn 58 57 59 4 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [185])
            (reg:SI 3 r3 [186]))) integer_fft.c:192 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 59 58 60 4 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) integer_fft.c:192 211 {*arm_cond_branch}
     (nil)
 -> 55)
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  3
;; Succ edge  5 (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 187 188 189 190 191

;; Pred edge  4 (fallthru)
(note 60 59 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 5 (set (reg:SI 3 r3 [187])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 n+0 S4 A32])) integer_fft.c:194 625 {*arm_movsi_vfp}
     (nil))

(insn 62 61 63 5 (set (reg:SI 3 r3 [188])
        (ashift:SI (reg:SI 3 r3 [187])
            (const_int 1 [0x1]))) integer_fft.c:194 119 {*arm_shiftsi3}
     (nil))

(insn 63 62 64 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 n+0 S4 A32])
        (reg:SI 3 r3 [188])) integer_fft.c:194 625 {*arm_movsi_vfp}
     (nil))

(insn 64 63 65 5 (set (reg:SI 2 r2 [189])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 k+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 65 64 66 5 (set (reg:SI 3 r3 [190])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 66 65 67 5 (set (reg:SI 3 r3 [191])
        (minus:SI (reg:SI 2 r2 [189])
            (reg:SI 3 r3 [190]))) integer_fft.c:195 29 {*arm_subsi3_insn}
     (nil))

(insn 67 66 114 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 k+0 S4 A32])
        (reg:SI 3 r3 [191])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 114 67 115 5 (set (pc)
        (label_ref 102)) integer_fft.c:195 223 {*arm_jump}
     (nil)
 -> 102)
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  7 [100.0%] 

(barrier 115 114 104)

;; Start of basic block ( 7) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 192 193 194 195 196 197 198 199 200 201 202 203 204

;; Pred edge  7
(code_label 104 115 70 6 34 "" [1 uses])

(note 70 104 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 6 (set (reg:SI 3 r3 [orig:149 i.7 ] [149])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:196 625 {*arm_movsi_vfp}
     (nil))

(insn 72 71 73 6 (set (reg:SI 3 r3 [orig:150 D.1473 ] [150])
        (ashift:SI (reg:SI 3 r3 [orig:149 i.7 ] [149])
            (const_int 1 [0x1]))) integer_fft.c:196 119 {*arm_shiftsi3}
     (nil))

(insn 73 72 74 6 (set (reg:SI 2 r2 [192])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 fr+0 S4 A32])) integer_fft.c:196 625 {*arm_movsi_vfp}
     (nil))

(insn 74 73 75 6 (set (reg/f:SI 3 r3 [orig:151 D.1474 ] [151])
        (plus:SI (reg:SI 2 r2 [192])
            (reg:SI 3 r3 [orig:150 D.1473 ] [150]))) integer_fft.c:196 4 {*arm_addsi3}
     (nil))

(insn 75 74 76 6 (set (reg:SI 2 r2 [orig:152 i.8 ] [152])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:196 625 {*arm_movsi_vfp}
     (nil))

(insn 76 75 77 6 (set (reg:SI 2 r2 [orig:153 D.1476 ] [153])
        (ashift:SI (reg:SI 2 r2 [orig:152 i.8 ] [152])
            (const_int 1 [0x1]))) integer_fft.c:196 119 {*arm_shiftsi3}
     (nil))

(insn 77 76 78 6 (set (reg:SI 1 r1 [193])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 fr+0 S4 A32])) integer_fft.c:196 625 {*arm_movsi_vfp}
     (nil))

(insn 78 77 79 6 (set (reg/f:SI 2 r2 [orig:154 D.1477 ] [154])
        (plus:SI (reg:SI 1 r1 [193])
            (reg:SI 2 r2 [orig:153 D.1476 ] [153]))) integer_fft.c:196 4 {*arm_addsi3}
     (nil))

(insn 79 78 80 6 (set (reg:SI 2 r2 [orig:155 D.1478 ] [155])
        (zero_extend:SI (mem:HI (reg/f:SI 2 r2 [orig:154 D.1477 ] [154]) [0 *D.1477_35+0 S2 A16]))) integer_fft.c:196 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 80 79 81 6 (set (reg:SI 2 r2 [orig:156 D.1479 ] [156])
        (sign_extend:SI (reg:HI 2 r2 [orig:155 D.1478 ] [155]))) integer_fft.c:196 158 {*arm_extendhisi2_v6}
     (nil))

(insn 81 80 82 6 (set (reg/f:SI 0 r0 [194])
        (symbol_ref:SI ("Sinewave") [flags 0x2]  <var_decl 0xb6b62180 Sinewave>)) integer_fft.c:196 625 {*arm_movsi_vfp}
     (nil))

(insn 82 81 83 6 (set (reg:SI 1 r1 [195])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 k+0 S4 A32])) integer_fft.c:196 625 {*arm_movsi_vfp}
     (nil))

(insn 83 82 84 6 (set (reg:SI 1 r1 [196])
        (ashift:SI (reg:SI 1 r1 [195])
            (const_int 1 [0x1]))) integer_fft.c:196 119 {*arm_shiftsi3}
     (nil))

(insn 84 83 85 6 (set (reg/f:SI 1 r1 [197])
        (plus:SI (reg/f:SI 0 r0 [194])
            (reg:SI 1 r1 [196]))) integer_fft.c:196 4 {*arm_addsi3}
     (nil))

(insn 85 84 86 6 (set (reg:SI 1 r1 [orig:157 D.1480 ] [157])
        (zero_extend:SI (mem/s/j:HI (reg/f:SI 1 r1 [197]) [0 Sinewave S2 A16]))) integer_fft.c:196 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 86 85 87 6 (set (reg:SI 1 r1 [198])
        (sign_extend:SI (reg:HI 1 r1 [orig:157 D.1480 ] [157]))) integer_fft.c:196 158 {*arm_extendhisi2_v6}
     (nil))

(insn 87 86 88 6 (set (reg:SI 1 r1 [199])
        (ashiftrt:SI (reg:SI 1 r1 [198])
            (const_int 1 [0x1]))) integer_fft.c:196 119 {*arm_shiftsi3}
     (nil))

(insn 88 87 89 6 (set (reg:SI 1 r1 [orig:158 D.1481 ] [158])
        (zero_extend:SI (reg:HI 1 r1 [199]))) integer_fft.c:196 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 89 88 90 6 (set (reg:SI 1 r1 [orig:159 D.1482 ] [159])
        (sign_extend:SI (reg:HI 1 r1 [orig:158 D.1481 ] [158]))) integer_fft.c:196 158 {*arm_extendhisi2_v6}
     (nil))

(insn 90 89 91 6 (set (reg:SI 1 r1 [orig:160 D.1483 ] [160])
        (minus:SI (const_int 16384 [0x4000])
            (reg:SI 1 r1 [orig:159 D.1482 ] [159]))) integer_fft.c:196 29 {*arm_subsi3_insn}
     (nil))

(insn 91 90 92 6 (set (reg:SI 2 r2 [orig:161 D.1484 ] [161])
        (mult:SI (reg:SI 1 r1 [orig:160 D.1483 ] [160])
            (reg:SI 2 r2 [orig:156 D.1479 ] [156]))) integer_fft.c:196 34 {*arm_mulsi3_v6}
     (nil))

(insn 92 91 93 6 (set (reg:SI 2 r2 [orig:162 D.1485 ] [162])
        (ashiftrt:SI (reg:SI 2 r2 [orig:161 D.1484 ] [161])
            (const_int 15 [0xf]))) integer_fft.c:196 119 {*arm_shiftsi3}
     (nil))

(insn 93 92 94 6 (set (reg:SI 2 r2 [orig:163 D.1486 ] [163])
        (zero_extend:SI (reg:HI 2 r2 [orig:162 D.1485 ] [162]))) integer_fft.c:196 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 94 93 95 6 (set (mem:HI (reg/f:SI 3 r3 [orig:151 D.1474 ] [151]) [0 *D.1474_32+0 S2 A16])
        (reg:HI 2 r2 [orig:163 D.1486 ] [163])) integer_fft.c:196 178 {*movhi_insn_arch4}
     (nil))

(insn 95 94 96 6 (set (reg:SI 3 r3 [200])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 96 95 97 6 (set (reg:SI 3 r3 [201])
        (plus:SI (reg:SI 3 r3 [200])
            (const_int 1 [0x1]))) integer_fft.c:195 4 {*arm_addsi3}
     (nil))

(insn 97 96 98 6 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 3 r3 [201])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 98 97 99 6 (set (reg:SI 2 r2 [202])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 k+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 99 98 100 6 (set (reg:SI 3 r3 [203])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 100 99 101 6 (set (reg:SI 3 r3 [204])
        (minus:SI (reg:SI 2 r2 [202])
            (reg:SI 3 r3 [203]))) integer_fft.c:195 29 {*arm_subsi3_insn}
     (nil))

(insn 101 100 102 6 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 k+0 S4 A32])
        (reg:SI 3 r3 [204])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  7 (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 205 206

;; Pred edge  6 (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 102 101 103 7 33 "" [1 uses])

(note 103 102 105 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 105 103 106 7 (set (reg:SI 2 r2 [205])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 106 105 107 7 (set (reg:SI 3 r3 [206])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 n+0 S4 A32])) integer_fft.c:195 625 {*arm_movsi_vfp}
     (nil))

(insn 107 106 108 7 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [205])
            (reg:SI 3 r3 [206]))) integer_fft.c:195 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 108 107 111 7 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) integer_fft.c:195 211 {*arm_cond_branch}
     (nil)
 -> 104)
;; End of basic block 7 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  6
;; Succ edge  8 (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	

;; Pred edge  7 (fallthru)
(note 111 108 116 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 8 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 116 111 0 NOTE_INSN_DELETED)


;; Function fix_loud (fix_loud)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 13 (  1.3)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r181: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a0 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a1 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a2 (r179,l0) best GENERAL_REGS, cover GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a3 (r178,l0) best GENERAL_REGS, cover GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a6 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a8 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a10 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a15 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a20 (r173,l0) best GENERAL_REGS, cover GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a23 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a25 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a26 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a31 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a35 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a38 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a40 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a42 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a41 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a44 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a45 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a46 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a47 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a5 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a4 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a7 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a9 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a11 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a12 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a13 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a14 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a16 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a18 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a19 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a21 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a22 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a24 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a27 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a29 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a30 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a32 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a28 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a33 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a34 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a36 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a17 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a37 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a39 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a43 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a1(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a2(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a3(r178,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a4(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a5(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a6(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a7(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a8(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a9(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a10(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a11(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a12(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a13(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a14(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a15(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a16(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a17(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a18(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a19(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a20(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a21(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a22(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a23(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a24(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a25(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a26(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a27(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a28(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a29(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a30(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a31(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a32(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a33(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a34(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a35(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a36(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a37(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a38(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a39(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a40(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a41(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:120,120 VFP_REGS:120,120 MEM:80
  a42(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a43(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:45,45 VFP_REGS:45,45 MEM:30
  a44(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a45(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a46(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a47(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20

   Insn 87(l0): point = 1
   Insn 86(l0): point = 3
   Insn 85(l0): point = 5
   Insn 84(l0): point = 7
   Insn 80(l0): point = 10
   Insn 79(l0): point = 12
   Insn 78(l0): point = 14
   Insn 75(l0): point = 17
   Insn 74(l0): point = 19
   Insn 73(l0): point = 21
   Insn 72(l0): point = 23
   Insn 71(l0): point = 25
   Insn 70(l0): point = 27
   Insn 69(l0): point = 29
   Insn 67(l0): point = 32
   Insn 66(l0): point = 34
   Insn 65(l0): point = 36
   Insn 64(l0): point = 38
   Insn 63(l0): point = 40
   Insn 62(l0): point = 42
   Insn 61(l0): point = 44
   Insn 60(l0): point = 46
   Insn 59(l0): point = 48
   Insn 58(l0): point = 50
   Insn 57(l0): point = 52
   Insn 56(l0): point = 54
   Insn 55(l0): point = 56
   Insn 54(l0): point = 58
   Insn 53(l0): point = 60
   Insn 52(l0): point = 62
   Insn 51(l0): point = 64
   Insn 50(l0): point = 66
   Insn 49(l0): point = 68
   Insn 48(l0): point = 70
   Insn 47(l0): point = 72
   Insn 46(l0): point = 74
   Insn 45(l0): point = 76
   Insn 44(l0): point = 78
   Insn 43(l0): point = 80
   Insn 42(l0): point = 82
   Insn 41(l0): point = 84
   Insn 40(l0): point = 86
   Insn 39(l0): point = 88
   Insn 38(l0): point = 90
   Insn 37(l0): point = 92
   Insn 36(l0): point = 94
   Insn 35(l0): point = 96
   Insn 34(l0): point = 98
   Insn 33(l0): point = 100
   Insn 32(l0): point = 102
   Insn 91(l0): point = 105
   Insn 28(l0): point = 107
   Insn 27(l0): point = 109
   Insn 26(l0): point = 111
   Insn 25(l0): point = 113
   Insn 24(l0): point = 115
   Insn 23(l0): point = 117
   Insn 22(l0): point = 119
   Insn 21(l0): point = 121
   Insn 20(l0): point = 123
   Insn 19(l0): point = 125
   Insn 16(l0): point = 128
   Insn 15(l0): point = 130
   Insn 13(l0): point = 133
   Insn 12(l0): point = 135
   Insn 11(l0): point = 137
   Insn 10(l0): point = 139
   Insn 9(l0): point = 141
   Insn 5(l0): point = 143
   Insn 4(l0): point = 145
   Insn 3(l0): point = 147
   Insn 2(l0): point = 149
 a0(r181): [4..5]
 a1(r180): [4..7]
 a2(r179): [11..12]
 a3(r178): [13..14]
 a4(r158): [18..23]
 a5(r159): [18..19]
 a6(r177): [20..21]
 a7(r157): [24..27]
 a8(r176): [24..25]
 a9(r156): [28..29]
 a10(r175): [35..36]
 a11(r155): [35..38]
 a12(r154): [39..40]
 a13(r153): [41..42]
 a14(r152): [43..46]
 a15(r174): [43..44]
 a16(r151): [47..48]
 a17(r137): [51..96]
 a18(r150): [51..52]
 a19(r149): [53..54]
 a20(r173): [55..56]
 a21(r148): [57..58]
 a22(r147): [57..62]
 a23(r172): [59..60]
 a24(r146): [63..64]
 a25(r171): [69..72]
 a26(r170): [71..74]
 a27(r145): [73..76]
 a28(r141): [75..86]
 a29(r144): [77..78]
 a30(r143): [79..82]
 a31(r169): [79..80]
 a32(r142): [83..84]
 a33(r140): [87..88]
 a34(r139): [89..92]
 a35(r168): [89..90]
 a36(r138): [93..94]
 a37(r136): [97..100]
 a38(r167): [97..98]
 a39(r135): [101..102]
 a40(r166): [108..109]
 a41(r164): [116..121] [112..113]
 a42(r165): [114..115]
 a43(r134): [118..123]
 a44(r163): [124..125]
 a45(r162): [129..130]
 a46(r161): [136..137]
 a47(r160): [140..141]
Compressing live ranges: from 152 to 74 - 48%
Ranges after the compression:
 a0(r181): [0..1]
 a1(r180): [0..1]
 a2(r179): [2..3]
 a3(r178): [4..5]
 a4(r158): [6..9]
 a5(r159): [6..7]
 a6(r177): [8..9]
 a7(r157): [10..11]
 a8(r176): [10..11]
 a9(r156): [12..13]
 a10(r175): [14..15]
 a11(r155): [14..15]
 a12(r154): [16..17]
 a13(r153): [18..19]
 a14(r152): [20..21]
 a15(r174): [20..21]
 a16(r151): [22..23]
 a17(r137): [24..53]
 a18(r150): [24..25]
 a19(r149): [26..27]
 a20(r173): [28..29]
 a21(r148): [30..31]
 a22(r147): [30..33]
 a23(r172): [32..33]
 a24(r146): [34..35]
 a25(r171): [36..37]
 a26(r170): [36..39]
 a27(r145): [38..41]
 a28(r141): [40..47]
 a29(r144): [42..43]
 a30(r143): [44..45]
 a31(r169): [44..45]
 a32(r142): [46..47]
 a33(r140): [48..49]
 a34(r139): [50..51]
 a35(r168): [50..51]
 a36(r138): [52..53]
 a37(r136): [54..55]
 a38(r167): [54..55]
 a39(r135): [56..57]
 a40(r166): [58..59]
 a41(r164): [64..65] [60..61]
 a42(r165): [62..63]
 a43(r134): [64..65]
 a44(r163): [66..67]
 a45(r162): [68..69]
 a46(r161): [70..71]
 a47(r160): [72..73]
  regions=2, blocks=10, points=74
    allocnos=48 (big 0), copies=0, conflicts=0, ranges=49
Disposition:
   43:r134 l0     2   39:r135 l0     3   37:r136 l0     3   17:r137 l0     4
   36:r138 l0     3   34:r139 l0     3   33:r140 l0     3   28:r141 l0     2
   32:r142 l0     3   30:r143 l0     3   29:r144 l0     3   27:r145 l0     3
   24:r146 l0     3   22:r147 l0     2   21:r148 l0     3   19:r149 l0     3
   18:r150 l0     3   16:r151 l0     3   14:r152 l0     3   13:r153 l0     3
   12:r154 l0     3   11:r155 l0     2    9:r156 l0     3    7:r157 l0     3
    4:r158 l0     3    5:r159 l0     2   47:r160 l0     3   46:r161 l0     3
   45:r162 l0     3   44:r163 l0     3   41:r164 l0     3   42:r165 l0     3
   40:r166 l0     3   38:r167 l0     2   35:r168 l0     2   31:r169 l0     1
   26:r170 l0     2   25:r171 l0     3   23:r172 l0     3   20:r173 l0     3
   15:r174 l0     2   10:r175 l0     3    8:r176 l0     2    6:r177 l0     2
    3:r178 l0     3    2:r179 l0     3    1:r180 l0     2    0:r181 l0     3
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 3, 13, 14, dead_or_set: 0
insn=3, live_throughout: 2, 3, 13, 14, dead_or_set: 1
insn=4, live_throughout: 3, 13, 14, dead_or_set: 2
insn=5, live_throughout: 13, 14, dead_or_set: 3
insn=9, live_throughout: 13, 14, dead_or_set: 160
insn=10, live_throughout: 13, 14, dead_or_set: 160
insn=11, live_throughout: 13, 14, dead_or_set: 161
insn=12, live_throughout: 13, 14, dead_or_set: 161
insn=13, live_throughout: 13, 14, dead_or_set: 
insn=15, live_throughout: 13, 14, dead_or_set: 162
insn=16, live_throughout: 13, 14, dead_or_set: 162
insn=17, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, dead_or_set: 163
insn=20, live_throughout: 13, 14, dead_or_set: 134, 163
insn=21, live_throughout: 13, 14, 134, dead_or_set: 164
insn=22, live_throughout: 13, 14, 134, dead_or_set: 164
insn=23, live_throughout: 13, 14, dead_or_set: 134, 164
insn=24, live_throughout: 13, 14, dead_or_set: 164, 165
insn=25, live_throughout: 13, 14, dead_or_set: 164, 165
insn=26, live_throughout: 13, 14, dead_or_set: 164
insn=27, live_throughout: 13, 14, dead_or_set: 166
insn=28, live_throughout: 13, 14, dead_or_set: 166
insn=91, live_throughout: 13, 14, dead_or_set: 
insn=83, live_throughout: 13, dead_or_set: 
insn=32, live_throughout: 13, dead_or_set: 135
insn=33, live_throughout: 13, dead_or_set: 135, 136
insn=34, live_throughout: 13, 136, dead_or_set: 167
insn=35, live_throughout: 13, dead_or_set: 136, 137, 167
insn=36, live_throughout: 13, 137, dead_or_set: 138
insn=37, live_throughout: 13, 137, dead_or_set: 138, 139
insn=38, live_throughout: 13, 137, 139, dead_or_set: 168
insn=39, live_throughout: 13, 137, dead_or_set: 139, 140, 168
insn=40, live_throughout: 13, 137, dead_or_set: 140, 141
insn=41, live_throughout: 13, 137, 141, dead_or_set: 142
insn=42, live_throughout: 13, 137, 141, dead_or_set: 142, 143
insn=43, live_throughout: 13, 137, 141, 143, dead_or_set: 169
insn=44, live_throughout: 13, 137, 141, dead_or_set: 143, 144, 169
insn=45, live_throughout: 13, 137, 141, dead_or_set: 144, 145
insn=46, live_throughout: 13, 137, 145, dead_or_set: 141, 170
insn=47, live_throughout: 13, 137, 170, dead_or_set: 145, 171
insn=48, live_throughout: 13, 137, 171, dead_or_set: 0, 170
insn=49, live_throughout: 0, 13, 137, dead_or_set: 1, 171
insn=50, live_throughout: 13, 137, dead_or_set: 0, 1, 14
insn=51, live_throughout: 13, 14, 137, dead_or_set: 0, 146
insn=52, live_throughout: 13, 14, 137, dead_or_set: 146, 147
insn=53, live_throughout: 13, 14, 137, 147, dead_or_set: 172
insn=54, live_throughout: 13, 14, 137, 147, dead_or_set: 148, 172
insn=55, live_throughout: 13, 14, 137, dead_or_set: 147, 148, 173
insn=56, live_throughout: 13, 14, 137, dead_or_set: 149, 173
insn=57, live_throughout: 13, 14, 137, dead_or_set: 149, 150
insn=58, live_throughout: 13, 14, dead_or_set: 137, 150
insn=59, live_throughout: 13, 14, dead_or_set: 151
insn=60, live_throughout: 13, 14, dead_or_set: 151, 152
insn=61, live_throughout: 13, 14, 152, dead_or_set: 174
insn=62, live_throughout: 13, 14, dead_or_set: 152, 153, 174
insn=63, live_throughout: 13, 14, dead_or_set: 153, 154
insn=64, live_throughout: 13, 14, dead_or_set: 154, 155
insn=65, live_throughout: 13, 14, 155, dead_or_set: 175
insn=66, live_throughout: 13, 14, dead_or_set: 155, 175
insn=67, live_throughout: 13, 14, dead_or_set: 
insn=69, live_throughout: 13, 14, dead_or_set: 156
insn=70, live_throughout: 13, 14, dead_or_set: 156, 157
insn=71, live_throughout: 13, 14, 157, dead_or_set: 176
insn=72, live_throughout: 13, 14, dead_or_set: 157, 158, 176
insn=73, live_throughout: 13, 14, 158, dead_or_set: 177
insn=74, live_throughout: 13, 14, 158, dead_or_set: 159, 177
insn=75, live_throughout: 13, 14, dead_or_set: 158, 159
insn=76, live_throughout: 13, 14, dead_or_set: 
insn=78, live_throughout: 13, 14, dead_or_set: 178
insn=79, live_throughout: 13, 14, dead_or_set: 178, 179
insn=80, live_throughout: 13, 14, dead_or_set: 179
insn=81, live_throughout: 13, 14, dead_or_set: 
insn=84, live_throughout: 13, 14, dead_or_set: 180
insn=85, live_throughout: 13, 14, 180, dead_or_set: 181
insn=86, live_throughout: 13, 14, dead_or_set: 180, 181
insn=87, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 20
changing reg in insn 23
changing reg in insn 21
changing reg in insn 25
changing reg in insn 23
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 35
changing reg in insn 35
changing reg in insn 58
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 39
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 44
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 51
changing reg in insn 52
changing reg in insn 55
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 62
changing reg in insn 62
changing reg in insn 63
changing reg in insn 63
changing reg in insn 64
changing reg in insn 66
changing reg in insn 69
changing reg in insn 70
changing reg in insn 70
changing reg in insn 72
changing reg in insn 72
changing reg in insn 75
changing reg in insn 74
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 20
changing reg in insn 25
changing reg in insn 23
changing reg in insn 22
changing reg in insn 21
changing reg in insn 26
changing reg in insn 24
changing reg in insn 23
changing reg in insn 22
changing reg in insn 24
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 34
changing reg in insn 35
changing reg in insn 38
changing reg in insn 39
changing reg in insn 43
changing reg in insn 44
changing reg in insn 46
changing reg in insn 48
changing reg in insn 47
changing reg in insn 49
changing reg in insn 53
changing reg in insn 55
changing reg in insn 61
changing reg in insn 62
changing reg in insn 65
changing reg in insn 66
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 80
changing reg in insn 84
changing reg in insn 86
changing reg in insn 85
changing reg in insn 86
deleting insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 50.


fix_loud

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={4d,3u} r2={14d,14u,1e} r3={38d,37u} r4={1d,1u} r11={1d,36u} r12={1d} r13={1d,10u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,3u} r25={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 290{180d,109u,1e} in 71{70 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 160 161

;; Pred edge  ENTRY (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 loud+0 S4 A32])
        (reg:SI 0 r0 [ loud ])) integer_fft.c:207 625 {*arm_movsi_vfp}
     (nil))

(insn 3 2 4 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 fr+0 S4 A32])
        (reg:SI 1 r1 [ fr ])) integer_fft.c:207 625 {*arm_movsi_vfp}
     (nil))

(insn 4 3 5 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -32 [0xffffffffffffffe0])) [0 fi+0 S4 A32])
        (reg:SI 2 r2 [ fi ])) integer_fft.c:207 625 {*arm_movsi_vfp}
     (nil))

(insn 5 4 6 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -36 [0xffffffffffffffdc])) [0 n+0 S4 A32])
        (reg:SI 3 r3 [ n ])) integer_fft.c:207 625 {*arm_movsi_vfp}
     (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 (set (reg:SI 3 r3 [160])
        (const_int 0 [0])) integer_fft.c:210 625 {*arm_movsi_vfp}
     (nil))

(insn 10 9 11 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 max+0 S4 A32])
        (reg:SI 3 r3 [160])) integer_fft.c:210 625 {*arm_movsi_vfp}
     (nil))

(insn 11 10 12 2 (set (reg:SI 3 r3 [161])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int 4 [0x4])) [0 scale_shift+0 S4 A32])) integer_fft.c:211 625 {*arm_movsi_vfp}
     (nil))

(insn 12 11 13 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [161])
            (const_int 0 [0]))) integer_fft.c:211 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) integer_fft.c:211 211 {*arm_cond_branch}
     (nil)
 -> 17)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  3 (fallthru)
;; Succ edge  4

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 162

;; Pred edge  2 (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 (set (reg:SI 3 r3 [162])
        (const_int 10 [0xa])) integer_fft.c:212 625 {*arm_movsi_vfp}
     (nil))

(insn 16 15 17 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 max+0 S4 A32])
        (reg:SI 3 r3 [162])) integer_fft.c:212 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  4 (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 163 164 165 166

;; Pred edge  2
;; Pred edge  3 (fallthru)
(code_label 17 16 18 4 38 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 (set (reg:SI 3 r3 [163])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int 4 [0x4])) [0 scale_shift+0 S4 A32])) integer_fft.c:213 625 {*arm_movsi_vfp}
     (nil))

(insn 20 19 21 4 (set (reg:SI 2 r2 [orig:134 D.1429 ] [134])
        (plus:SI (reg:SI 3 r3 [163])
            (const_int 1 [0x1]))) integer_fft.c:213 4 {*arm_addsi3}
     (nil))

(insn 21 20 22 4 (set (reg:SI 3 r3 [164])
        (reg:SI 2 r2 [orig:134 D.1429 ] [134])) integer_fft.c:213 625 {*arm_movsi_vfp}
     (nil))

(insn 22 21 23 4 (set (reg:SI 3 r3 [164])
        (ashift:SI (reg:SI 3 r3 [164])
            (const_int 1 [0x1]))) integer_fft.c:213 119 {*arm_shiftsi3}
     (nil))

(insn 23 22 24 4 (set (reg:SI 3 r3 [164])
        (plus:SI (reg:SI 3 r3 [164])
            (reg:SI 2 r2 [orig:134 D.1429 ] [134]))) integer_fft.c:213 4 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [orig:134 D.1429 ] [134])
            (const_int 3 [0x3]))
        (nil)))

(insn 24 23 26 4 (set (reg:SI 3 r3 [165])
        (ashift:SI (reg:SI 3 r3 [164])
            (const_int 1 [0x1]))) integer_fft.c:213 119 {*arm_shiftsi3}
     (nil))

(insn 26 24 27 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int 4 [0x4])) [0 scale_shift+0 S4 A32])
        (reg:SI 3 r3 [164])) integer_fft.c:213 625 {*arm_movsi_vfp}
     (nil))

(insn 27 26 28 4 (set (reg:SI 3 r3 [166])
        (const_int 0 [0])) integer_fft.c:215 625 {*arm_movsi_vfp}
     (nil))

(insn 28 27 91 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (reg:SI 3 r3 [166])) integer_fft.c:215 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 91 28 92 4 (set (pc)
        (label_ref 81)) integer_fft.c:215 223 {*arm_jump}
     (nil)
 -> 81)
;; End of basic block 4 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  8 [100.0%] 

(barrier 92 91 83)

;; Start of basic block ( 8) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 167 168 169 170 171 172 173 174 175

;; Pred edge  8
(code_label 83 92 31 5 41 "" [1 uses])

(note 31 83 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 5 (set (reg:SI 3 r3 [orig:135 i.0 ] [135])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 33 32 34 5 (set (reg:SI 3 r3 [orig:136 D.1431 ] [136])
        (ashift:SI (reg:SI 3 r3 [orig:135 i.0 ] [135])
            (const_int 1 [0x1]))) integer_fft.c:216 119 {*arm_shiftsi3}
     (nil))

(insn 34 33 35 5 (set (reg:SI 2 r2 [167])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 loud+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 35 34 36 5 (set (reg/f:SI 4 r4 [orig:137 D.1432 ] [137])
        (plus:SI (reg:SI 2 r2 [167])
            (reg:SI 3 r3 [orig:136 D.1431 ] [136]))) integer_fft.c:216 4 {*arm_addsi3}
     (nil))

(insn 36 35 37 5 (set (reg:SI 3 r3 [orig:138 i.1 ] [138])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 37 36 38 5 (set (reg:SI 3 r3 [orig:139 D.1434 ] [139])
        (ashift:SI (reg:SI 3 r3 [orig:138 i.1 ] [138])
            (const_int 1 [0x1]))) integer_fft.c:216 119 {*arm_shiftsi3}
     (nil))

(insn 38 37 39 5 (set (reg:SI 2 r2 [168])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 fr+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 39 38 40 5 (set (reg/f:SI 3 r3 [orig:140 D.1435 ] [140])
        (plus:SI (reg:SI 2 r2 [168])
            (reg:SI 3 r3 [orig:139 D.1434 ] [139]))) integer_fft.c:216 4 {*arm_addsi3}
     (nil))

(insn 40 39 41 5 (set (reg:SI 2 r2 [orig:141 D.1436 ] [141])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [orig:140 D.1435 ] [140]) [0 *D.1435_17+0 S2 A16]))) integer_fft.c:216 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 41 40 42 5 (set (reg:SI 3 r3 [orig:142 i.2 ] [142])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 42 41 43 5 (set (reg:SI 3 r3 [orig:143 D.1438 ] [143])
        (ashift:SI (reg:SI 3 r3 [orig:142 i.2 ] [142])
            (const_int 1 [0x1]))) integer_fft.c:216 119 {*arm_shiftsi3}
     (nil))

(insn 43 42 44 5 (set (reg:SI 1 r1 [169])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -32 [0xffffffffffffffe0])) [0 fi+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 44 43 45 5 (set (reg/f:SI 3 r3 [orig:144 D.1439 ] [144])
        (plus:SI (reg:SI 1 r1 [169])
            (reg:SI 3 r3 [orig:143 D.1438 ] [143]))) integer_fft.c:216 4 {*arm_addsi3}
     (nil))

(insn 45 44 46 5 (set (reg:SI 3 r3 [orig:145 D.1440 ] [145])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [orig:144 D.1439 ] [144]) [0 *D.1439_22+0 S2 A16]))) integer_fft.c:216 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 46 45 47 5 (set (reg:SI 2 r2 [170])
        (sign_extend:SI (reg:HI 2 r2 [orig:141 D.1436 ] [141]))) integer_fft.c:216 158 {*arm_extendhisi2_v6}
     (nil))

(insn 47 46 48 5 (set (reg:SI 3 r3 [171])
        (sign_extend:SI (reg:HI 3 r3 [orig:145 D.1440 ] [145]))) integer_fft.c:216 158 {*arm_extendhisi2_v6}
     (nil))

(insn 48 47 49 5 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [170])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 49 48 50 5 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [171])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(call_insn 50 49 51 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("db_from_ampl") [flags 0x3]  <function_decl 0xb6b5c880 db_from_ampl>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:216 236 {*call_value_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 51 50 52 5 (set (reg:SI 3 r3 [orig:146 D.1441 ] [146])
        (reg:SI 0 r0)) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 52 51 53 5 (set (reg:SI 2 r2 [orig:147 D.1442 ] [147])
        (zero_extend:SI (reg:HI 3 r3 [orig:146 D.1441 ] [146]))) integer_fft.c:216 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 53 52 54 5 (set (reg:SI 3 r3 [172])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int 4 [0x4])) [0 scale_shift+0 S4 A32])) integer_fft.c:216 625 {*arm_movsi_vfp}
     (nil))

(insn 54 53 55 5 (set (reg:SI 3 r3 [orig:148 D.1443 ] [148])
        (zero_extend:SI (reg:HI 3 r3 [172]))) integer_fft.c:216 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 55 54 56 5 (set (reg:SI 3 r3 [173])
        (plus:SI (reg:SI 2 r2 [orig:147 D.1442 ] [147])
            (reg:SI 3 r3 [orig:148 D.1443 ] [148]))) integer_fft.c:216 4 {*arm_addsi3}
     (nil))

(insn 56 55 57 5 (set (reg:SI 3 r3 [orig:149 D.1444 ] [149])
        (zero_extend:SI (reg:HI 3 r3 [173]))) integer_fft.c:216 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 57 56 58 5 (set (reg:SI 3 r3 [orig:150 D.1445 ] [150])
        (zero_extend:SI (reg:HI 3 r3 [orig:149 D.1444 ] [149]))) integer_fft.c:216 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 58 57 59 5 (set (mem:HI (reg/f:SI 4 r4 [orig:137 D.1432 ] [137]) [0 *D.1432_13+0 S2 A16])
        (reg:HI 3 r3 [orig:150 D.1445 ] [150])) integer_fft.c:216 178 {*movhi_insn_arch4}
     (nil))

(insn 59 58 60 5 (set (reg:SI 3 r3 [orig:151 i.3 ] [151])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) integer_fft.c:217 625 {*arm_movsi_vfp}
     (nil))

(insn 60 59 61 5 (set (reg:SI 3 r3 [orig:152 D.1447 ] [152])
        (ashift:SI (reg:SI 3 r3 [orig:151 i.3 ] [151])
            (const_int 1 [0x1]))) integer_fft.c:217 119 {*arm_shiftsi3}
     (nil))

(insn 61 60 62 5 (set (reg:SI 2 r2 [174])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 loud+0 S4 A32])) integer_fft.c:217 625 {*arm_movsi_vfp}
     (nil))

(insn 62 61 63 5 (set (reg/f:SI 3 r3 [orig:153 D.1448 ] [153])
        (plus:SI (reg:SI 2 r2 [174])
            (reg:SI 3 r3 [orig:152 D.1447 ] [152]))) integer_fft.c:217 4 {*arm_addsi3}
     (nil))

(insn 63 62 64 5 (set (reg:SI 3 r3 [orig:154 D.1449 ] [154])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [orig:153 D.1448 ] [153]) [0 *D.1448_31+0 S2 A16]))) integer_fft.c:217 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 64 63 65 5 (set (reg:SI 2 r2 [orig:155 D.1450 ] [155])
        (sign_extend:SI (reg:HI 3 r3 [orig:154 D.1449 ] [154]))) integer_fft.c:217 158 {*arm_extendhisi2_v6}
     (nil))

(insn 65 64 66 5 (set (reg:SI 3 r3 [175])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 max+0 S4 A32])) integer_fft.c:217 625 {*arm_movsi_vfp}
     (nil))

(insn 66 65 67 5 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:155 D.1450 ] [155])
            (reg:SI 3 r3 [175]))) integer_fft.c:217 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 67 66 68 5 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) integer_fft.c:217 211 {*arm_cond_branch}
     (nil)
 -> 76)
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  6 (fallthru)
;; Succ edge  7

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 156 157 158 159 176 177

;; Pred edge  5 (fallthru)
(note 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 6 (set (reg:SI 3 r3 [orig:156 i.4 ] [156])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) integer_fft.c:218 625 {*arm_movsi_vfp}
     (nil))

(insn 70 69 71 6 (set (reg:SI 3 r3 [orig:157 D.1454 ] [157])
        (ashift:SI (reg:SI 3 r3 [orig:156 i.4 ] [156])
            (const_int 1 [0x1]))) integer_fft.c:218 119 {*arm_shiftsi3}
     (nil))

(insn 71 70 72 6 (set (reg:SI 2 r2 [176])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 loud+0 S4 A32])) integer_fft.c:218 625 {*arm_movsi_vfp}
     (nil))

(insn 72 71 73 6 (set (reg/f:SI 3 r3 [orig:158 D.1455 ] [158])
        (plus:SI (reg:SI 2 r2 [176])
            (reg:SI 3 r3 [orig:157 D.1454 ] [157]))) integer_fft.c:218 4 {*arm_addsi3}
     (nil))

(insn 73 72 74 6 (set (reg:SI 2 r2 [177])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 max+0 S4 A32])) integer_fft.c:218 625 {*arm_movsi_vfp}
     (nil))

(insn 74 73 75 6 (set (reg:SI 2 r2 [orig:159 D.1456 ] [159])
        (zero_extend:SI (reg:HI 2 r2 [177]))) integer_fft.c:218 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 75 74 76 6 (set (mem:HI (reg/f:SI 3 r3 [orig:158 D.1455 ] [158]) [0 *D.1455_36+0 S2 A16])
        (reg:HI 2 r2 [orig:159 D.1456 ] [159])) integer_fft.c:218 178 {*movhi_insn_arch4}
     (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  7 (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 178 179

;; Pred edge  5
;; Pred edge  6 (fallthru)
(code_label 76 75 77 7 40 "" [1 uses])

(note 77 76 78 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 7 (set (reg:SI 3 r3 [178])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) integer_fft.c:215 625 {*arm_movsi_vfp}
     (nil))

(insn 79 78 80 7 (set (reg:SI 3 r3 [179])
        (plus:SI (reg:SI 3 r3 [178])
            (const_int 1 [0x1]))) integer_fft.c:215 4 {*arm_addsi3}
     (nil))

(insn 80 79 81 7 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (reg:SI 3 r3 [179])) integer_fft.c:215 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  8 (fallthru)

;; Start of basic block ( 7 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 180 181

;; Pred edge  7 (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 81 80 82 8 39 "" [1 uses])

(note 82 81 84 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 84 82 85 8 (set (reg:SI 2 r2 [180])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) integer_fft.c:215 625 {*arm_movsi_vfp}
     (nil))

(insn 85 84 86 8 (set (reg:SI 3 r3 [181])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -36 [0xffffffffffffffdc])) [0 n+0 S4 A32])) integer_fft.c:215 625 {*arm_movsi_vfp}
     (nil))

(insn 86 85 87 8 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [180])
            (reg:SI 3 r3 [181]))) integer_fft.c:215 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 87 86 90 8 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) integer_fft.c:215 211 {*arm_cond_branch}
     (nil)
 -> 83)
;; End of basic block 8 -> ( 5 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  5
;; Succ edge  9 (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	

;; Pred edge  8 (fallthru)
(note 90 87 93 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 9 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 93 90 0 NOTE_INSN_DELETED)


;; Function db_from_ampl (db_from_ampl)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 17 (  1.3)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r196: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a2 (r196,l0) best GENERAL_REGS, cover GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a3 (r195,l0) best GENERAL_REGS, cover GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a4 (r194,l0) best GENERAL_REGS, cover GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a5 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a6 (r192,l0) best GENERAL_REGS, cover GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a9 (r191,l0) best GENERAL_REGS, cover GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a8 (r190,l0) best GENERAL_REGS, cover GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a10 (r189,l0) best GENERAL_REGS, cover GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a11 (r188,l0) best GENERAL_REGS, cover GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a18 (r187,l0) best GENERAL_REGS, cover GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a19 (r186,l0) best GENERAL_REGS, cover GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a20 (r185,l0) best GENERAL_REGS, cover GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a21 (r184,l0) best GENERAL_REGS, cover GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a24 (r183,l0) best GENERAL_REGS, cover GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a25 (r182,l0) best GENERAL_REGS, cover GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a27 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a28 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a30 (r179,l0) best GENERAL_REGS, cover GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a32 (r178,l0) best GENERAL_REGS, cover GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a33 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a36 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a35 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a34 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a37 (r173,l0) best GENERAL_REGS, cover GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a41 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a42 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a44 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a43 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a46 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a47 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a49 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a48 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a50 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a51 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a56 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a58 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a60 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a61 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a62 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a0 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a1 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a7 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a12 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a15 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a14 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a13 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a17 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a16 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a23 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a26 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a29 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a31 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a22 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a39 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a40 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a38 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a45 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a52 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a54 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a55 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a53 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a57 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a59 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a1(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a2(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a3(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a4(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a5(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a6(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a7(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a8(r190,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a9(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a10(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a11(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a12(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a13(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a14(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a15(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a16(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a17(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a18(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a19(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a20(r185,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a21(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a22(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a23(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a24(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a25(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a26(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:45,45 VFP_REGS:45,45 MEM:30
  a27(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a28(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a29(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a30(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a31(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a32(r178,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a33(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a34(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a35(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a36(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a37(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a38(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a39(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a40(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a41(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a42(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a43(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a44(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a45(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a46(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a47(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a48(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a49(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a50(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a51(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a52(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a53(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a54(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a55(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a56(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a57(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a58(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a59(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a60(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a61(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a62(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20

   Insn 115(l0): point = 0
   Insn 112(l0): point = 2
   Insn 108(l0): point = 4
   Insn 107(l0): point = 6
   Insn 106(l0): point = 8
   Insn 127(l0): point = 11
   Insn 123(l0): point = 14
   Insn 103(l0): point = 17
   Insn 102(l0): point = 19
   Insn 101(l0): point = 21
   Insn 97(l0): point = 24
   Insn 96(l0): point = 26
   Insn 95(l0): point = 28
   Insn 89(l0): point = 31
   Insn 88(l0): point = 33
   Insn 87(l0): point = 35
   Insn 86(l0): point = 37
   Insn 85(l0): point = 39
   Insn 84(l0): point = 41
   Insn 120(l0): point = 44
   Insn 80(l0): point = 46
   Insn 79(l0): point = 48
   Insn 78(l0): point = 50
   Insn 77(l0): point = 52
   Insn 76(l0): point = 54
   Insn 75(l0): point = 56
   Insn 74(l0): point = 58
   Insn 73(l0): point = 60
   Insn 72(l0): point = 62
   Insn 71(l0): point = 64
   Insn 68(l0): point = 67
   Insn 67(l0): point = 69
   Insn 66(l0): point = 71
   Insn 62(l0): point = 74
   Insn 61(l0): point = 76
   Insn 60(l0): point = 78
   Insn 59(l0): point = 80
   Insn 58(l0): point = 82
   Insn 57(l0): point = 84
   Insn 56(l0): point = 86
   Insn 55(l0): point = 88
   Insn 54(l0): point = 90
   Insn 53(l0): point = 92
   Insn 52(l0): point = 94
   Insn 51(l0): point = 96
   Insn 50(l0): point = 98
   Insn 49(l0): point = 100
   Insn 48(l0): point = 102
   Insn 47(l0): point = 104
   Insn 46(l0): point = 106
   Insn 45(l0): point = 108
   Insn 44(l0): point = 110
   Insn 43(l0): point = 112
   Insn 42(l0): point = 114
   Insn 41(l0): point = 116
   Insn 40(l0): point = 118
   Insn 39(l0): point = 120
   Insn 38(l0): point = 122
   Insn 37(l0): point = 124
   Insn 36(l0): point = 126
   Insn 35(l0): point = 128
   Insn 34(l0): point = 130
   Insn 33(l0): point = 132
   Insn 32(l0): point = 134
   Insn 31(l0): point = 136
   Insn 30(l0): point = 138
   Insn 29(l0): point = 140
   Insn 28(l0): point = 142
   Insn 118(l0): point = 145
   Insn 24(l0): point = 147
   Insn 23(l0): point = 149
   Insn 22(l0): point = 151
   Insn 21(l0): point = 153
   Insn 20(l0): point = 155
   Insn 19(l0): point = 157
   Insn 18(l0): point = 159
   Insn 17(l0): point = 161
   Insn 16(l0): point = 163
   Insn 15(l0): point = 165
   Insn 14(l0): point = 167
   Insn 12(l0): point = 170
   Insn 11(l0): point = 172
   Insn 10(l0): point = 174
   Insn 9(l0): point = 176
   Insn 5(l0): point = 178
   Insn 3(l0): point = 180
   Insn 4(l0): point = 182
   Insn 2(l0): point = 184
 a0(r157): [3..4]
 a1(r156): [5..6]
 a2(r196): [7..8]
 a3(r195): [20..21]
 a4(r194): [25..26]
 a5(r193): [27..28]
 a6(r192): [34..35]
 a7(r155): [34..37]
 a8(r190): [38..41]
 a9(r191): [38..39]
 a10(r189): [47..48]
 a11(r188): [51..52]
 a12(r154): [53..54]
 a13(r151): [53..60]
 a14(r152): [55..58]
 a15(r153): [55..56]
 a16(r149): [61..64]
 a17(r150): [61..62]
 a18(r187): [70..71]
 a19(r186): [75..76]
 a20(r185): [77..78]
 a21(r184): [81..82]
 a22(r144): [81..104]
 a23(r148): [81..84]
 a24(r183): [85..86]
 a25(r182): [87..88]
 a26(r147): [89..92]
 a27(r181): [89..90]
 a28(r180): [93..94]
 a29(r146): [93..96]
 a30(r179): [97..98]
 a31(r145): [97..100]
 a32(r178): [101..102]
 a33(r177): [105..106]
 a34(r174): [109..114]
 a35(r175): [109..112]
 a36(r176): [109..110]
 a37(r173): [117..118]
 a38(r141): [119..132]
 a39(r143): [119..120]
 a40(r142): [121..122]
 a41(r172): [123..124]
 a42(r171): [125..126]
 a43(r169): [125..130]
 a44(r170): [127..128]
 a45(r140): [133..134]
 a46(r168): [135..136]
 a47(r167): [137..138]
 a48(r165): [137..142]
 a49(r166): [139..140]
 a50(r164): [148..149]
 a51(r163): [152..153]
 a52(r139): [152..155]
 a53(r136): [156..163]
 a54(r138): [156..157]
 a55(r137): [158..159]
 a56(r162): [160..161]
 a57(r135): [164..165]
 a58(r161): [166..167]
 a59(r134): [173..174]
 a60(r160): [175..176]
 a61(r159): [179..182]
 a62(r158): [181..184]
Compressing live ranges: from 187 to 90 - 48%
Ranges after the compression:
 a0(r157): [0..1]
 a1(r156): [2..3]
 a2(r196): [4..5]
 a3(r195): [6..7]
 a4(r194): [8..9]
 a5(r193): [10..11]
 a6(r192): [12..13]
 a7(r155): [12..13]
 a8(r190): [14..15]
 a9(r191): [14..15]
 a10(r189): [16..17]
 a11(r188): [18..19]
 a12(r154): [20..21]
 a13(r151): [20..23]
 a14(r152): [22..23]
 a15(r153): [22..23]
 a16(r149): [24..25]
 a17(r150): [24..25]
 a18(r187): [26..27]
 a19(r186): [28..29]
 a20(r185): [30..31]
 a21(r184): [32..33]
 a22(r144): [32..45]
 a23(r148): [32..33]
 a24(r183): [34..35]
 a25(r182): [36..37]
 a26(r147): [38..39]
 a27(r181): [38..39]
 a28(r180): [40..41]
 a29(r146): [40..41]
 a30(r179): [42..43]
 a31(r145): [42..43]
 a32(r178): [44..45]
 a33(r177): [46..47]
 a34(r174): [48..49]
 a35(r175): [48..49]
 a36(r176): [48..49]
 a37(r173): [50..51]
 a38(r141): [52..61]
 a39(r143): [52..53]
 a40(r142): [54..55]
 a41(r172): [56..57]
 a42(r171): [58..59]
 a43(r169): [58..61]
 a44(r170): [60..61]
 a45(r140): [62..63]
 a46(r168): [64..65]
 a47(r167): [66..67]
 a48(r165): [66..69]
 a49(r166): [68..69]
 a50(r164): [70..71]
 a51(r163): [72..73]
 a52(r139): [72..73]
 a53(r136): [74..79]
 a54(r138): [74..75]
 a55(r137): [76..77]
 a56(r162): [78..79]
 a57(r135): [80..81]
 a58(r161): [82..83]
 a59(r134): [84..85]
 a60(r160): [86..87]
 a61(r159): [88..89]
 a62(r158): [88..89]
  regions=3, blocks=13, points=90
    allocnos=63 (big 0), copies=0, conflicts=0, ranges=63
Disposition:
   59:r134 l0     3   57:r135 l0     3   53:r136 l0     3   55:r137 l0     2
   54:r138 l0     2   52:r139 l0     2   45:r140 l0     3   38:r141 l0     3
   40:r142 l0     2   39:r143 l0     2   22:r144 l0     2   31:r145 l0     1
   29:r146 l0     1   26:r147 l0     3   23:r148 l0     1   16:r149 l0     3
   17:r150 l0     2   13:r151 l0     2   14:r152 l0     3   15:r153 l0     1
   12:r154 l0     3    7:r155 l0     2    1:r156 l0     3    0:r157 l0     3
   62:r158 l0     2   61:r159 l0     3   60:r160 l0     3   58:r161 l0     3
   56:r162 l0     2   51:r163 l0     3   50:r164 l0     3   48:r165 l0     2
   49:r166 l0     3   47:r167 l0     3   46:r168 l0     3   43:r169 l0     1
   44:r170 l0     2   42:r171 l0     2   41:r172 l0     2   37:r173 l0     3
   34:r174 l0     3   35:r175 l0     2   36:r176 l0     1   33:r177 l0     3
   32:r178 l0     3   30:r179 l0     3   28:r180 l0     3   27:r181 l0     1
   25:r182 l0     3   24:r183 l0     3   21:r184 l0     3   20:r185 l0     3
   19:r186 l0     3   18:r187 l0     3   11:r188 l0     3   10:r189 l0     3
    8:r190 l0     3    9:r191 l0     2    6:r192 l0     3    5:r193 l0     3
    4:r194 l0     3    3:r195 l0     3    2:r196 l0     3
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 158
insn=4, live_throughout: 13, 14, 158, dead_or_set: 1, 159
insn=3, live_throughout: 13, 14, 159, dead_or_set: 158
insn=5, live_throughout: 13, 14, dead_or_set: 159
insn=9, live_throughout: 13, 14, dead_or_set: 160
insn=10, live_throughout: 13, 14, dead_or_set: 134, 160
insn=11, live_throughout: 13, 14, dead_or_set: 134
insn=12, live_throughout: 13, 14, dead_or_set: 
insn=14, live_throughout: 13, 14, dead_or_set: 161
insn=15, live_throughout: 13, 14, dead_or_set: 135, 161
insn=16, live_throughout: 13, 14, dead_or_set: 135, 136
insn=17, live_throughout: 13, 14, 136, dead_or_set: 162
insn=18, live_throughout: 13, 14, 136, dead_or_set: 137, 162
insn=19, live_throughout: 13, 14, 136, dead_or_set: 137, 138
insn=20, live_throughout: 13, 14, dead_or_set: 136, 138, 139
insn=21, live_throughout: 13, 14, 139, dead_or_set: 163
insn=22, live_throughout: 13, 14, dead_or_set: 139, 163
insn=23, live_throughout: 13, 14, dead_or_set: 164
insn=24, live_throughout: 13, 14, dead_or_set: 164
insn=118, live_throughout: 13, 14, dead_or_set: 
insn=65, live_throughout: 13, 14, dead_or_set: 
insn=28, live_throughout: 13, 14, dead_or_set: 165
insn=29, live_throughout: 13, 14, 165, dead_or_set: 166
insn=30, live_throughout: 13, 14, 165, dead_or_set: 166, 167
insn=31, live_throughout: 13, 14, dead_or_set: 165, 167, 168
insn=32, live_throughout: 13, 14, dead_or_set: 140, 168
insn=33, live_throughout: 13, 14, dead_or_set: 140, 141
insn=34, live_throughout: 13, 14, 141, dead_or_set: 169
insn=35, live_throughout: 13, 14, 141, 169, dead_or_set: 170
insn=36, live_throughout: 13, 14, 141, 169, dead_or_set: 170, 171
insn=37, live_throughout: 13, 14, 141, dead_or_set: 169, 171, 172
insn=38, live_throughout: 13, 14, 141, dead_or_set: 142, 172
insn=39, live_throughout: 13, 14, 141, dead_or_set: 142, 143
insn=40, live_throughout: 13, 14, dead_or_set: 141, 143, 173
insn=41, live_throughout: 13, 14, dead_or_set: 173
insn=42, live_throughout: 13, 14, dead_or_set: 174
insn=43, live_throughout: 13, 14, 174, dead_or_set: 175
insn=44, live_throughout: 13, 14, 174, 175, dead_or_set: 176
insn=45, live_throughout: 13, 14, dead_or_set: 174, 175, 176
insn=46, live_throughout: 13, 14, dead_or_set: 177
insn=47, live_throughout: 13, 14, dead_or_set: 144, 177
insn=48, live_throughout: 13, 14, 144, dead_or_set: 178
insn=49, live_throughout: 13, 14, 144, dead_or_set: 145, 178
insn=50, live_throughout: 13, 14, 144, 145, dead_or_set: 179
insn=51, live_throughout: 13, 14, 144, dead_or_set: 145, 146, 179
insn=52, live_throughout: 13, 14, 144, 146, dead_or_set: 180
insn=53, live_throughout: 13, 14, 144, dead_or_set: 146, 147, 180
insn=54, live_throughout: 13, 14, 144, 147, dead_or_set: 181
insn=55, live_throughout: 13, 14, 144, dead_or_set: 147, 181, 182
insn=56, live_throughout: 13, 14, 144, dead_or_set: 182, 183
insn=57, live_throughout: 13, 14, 144, dead_or_set: 148, 183
insn=58, live_throughout: 13, 14, 144, 148, dead_or_set: 184
insn=59, live_throughout: 13, 14, dead_or_set: 144, 148, 184
insn=60, live_throughout: 13, 14, dead_or_set: 185
insn=61, live_throughout: 13, 14, dead_or_set: 185, 186
insn=62, live_throughout: 13, 14, dead_or_set: 186
insn=63, live_throughout: 13, 14, dead_or_set: 
insn=66, live_throughout: 13, 14, dead_or_set: 187
insn=67, live_throughout: 13, 14, dead_or_set: 187
insn=68, live_throughout: 13, 14, dead_or_set: 
insn=69, live_throughout: 13, 14, dead_or_set: 
insn=71, live_throughout: 13, 14, dead_or_set: 149
insn=72, live_throughout: 13, 14, 149, dead_or_set: 150
insn=73, live_throughout: 13, 14, dead_or_set: 149, 150, 151
insn=74, live_throughout: 13, 14, 151, dead_or_set: 152
insn=75, live_throughout: 13, 14, 151, 152, dead_or_set: 153
insn=76, live_throughout: 13, 14, 151, dead_or_set: 152, 153, 154
insn=77, live_throughout: 13, 14, dead_or_set: 151, 154, 188
insn=78, live_throughout: 13, 14, dead_or_set: 188
insn=79, live_throughout: 13, 14, dead_or_set: 189
insn=80, live_throughout: 13, 14, dead_or_set: 189
insn=120, live_throughout: 13, 14, dead_or_set: 
insn=100, live_throughout: 13, 14, dead_or_set: 
insn=84, live_throughout: 13, 14, dead_or_set: 190
insn=85, live_throughout: 13, 14, 190, dead_or_set: 191
insn=86, live_throughout: 13, 14, dead_or_set: 155, 190, 191
insn=87, live_throughout: 13, 14, 155, dead_or_set: 192
insn=88, live_throughout: 13, 14, dead_or_set: 155, 192
insn=89, live_throughout: 13, 14, dead_or_set: 
insn=93, live_throughout: 13, 14, dead_or_set: 
insn=95, live_throughout: 13, 14, dead_or_set: 193
insn=96, live_throughout: 13, 14, dead_or_set: 193, 194
insn=97, live_throughout: 13, 14, dead_or_set: 194
insn=98, live_throughout: 13, 14, dead_or_set: 
insn=101, live_throughout: 13, 14, dead_or_set: 195
insn=102, live_throughout: 13, 14, dead_or_set: 195
insn=103, live_throughout: 13, 14, dead_or_set: 
insn=123, live_throughout: 13, 14, dead_or_set: 
insn=126, live_throughout: 13, 14, dead_or_set: 
insn=127, live_throughout: 13, 14, dead_or_set: 
insn=104, live_throughout: 13, 14, dead_or_set: 
insn=106, live_throughout: 13, 14, dead_or_set: 196
insn=107, live_throughout: 13, 14, dead_or_set: 156, 196
insn=108, live_throughout: 13, 14, dead_or_set: 156, 157
insn=112, live_throughout: 13, 14, dead_or_set: 0, 157
insn=115, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 10
changing reg in insn 11
changing reg in insn 15
changing reg in insn 16
changing reg in insn 20
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 20
changing reg in insn 22
changing reg in insn 32
changing reg in insn 33
changing reg in insn 40
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 47
changing reg in insn 59
changing reg in insn 49
changing reg in insn 51
changing reg in insn 51
changing reg in insn 53
changing reg in insn 53
changing reg in insn 55
changing reg in insn 54
changing reg in insn 56
changing reg in insn 57
changing reg in insn 59
changing reg in insn 71
changing reg in insn 73
changing reg in insn 72
changing reg in insn 73
changing reg in insn 73
changing reg in insn 77
changing reg in insn 74
changing reg in insn 76
changing reg in insn 75
changing reg in insn 76
changing reg in insn 76
changing reg in insn 77
changing reg in insn 86
changing reg in insn 88
changing reg in insn 107
changing reg in insn 108
changing reg in insn 108
changing reg in insn 112
changing reg in insn 2
changing reg in insn 4
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 28
changing reg in insn 31
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 32
changing reg in insn 34
changing reg in insn 37
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 38
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 45
changing reg in insn 43
changing reg in insn 45
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 56
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 62
changing reg in insn 66
changing reg in insn 67
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 84
changing reg in insn 86
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 97
changing reg in insn 101
changing reg in insn 102
changing reg in insn 106
changing reg in insn 107
deleting insn with uid = 108.
starting the processing of deferred insns
ending the processing of deferred insns


db_from_ampl

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 11[fp] 24[cc]
;;  ref usage 	r0={2d,3u} r1={8d,8u} r2={18d,17u} r3={39d,39u,1e} r11={1d,38u} r13={1d,12u} r14={1d,1u} r24={4d,4u} r25={1d,1u} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} 
;;    total ref usage 215{91d,123u,1e} in 87{87 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 158 159 160

;; Pred edge  ENTRY (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 (set (reg:SI 2 r2 [158])
        (reg:SI 0 r0 [ re ])) integer_fft.c:226 625 {*arm_movsi_vfp}
     (nil))

(insn 4 2 3 2 (set (reg:SI 3 r3 [159])
        (reg:SI 1 r1 [ im ])) integer_fft.c:226 625 {*arm_movsi_vfp}
     (nil))

(insn 3 4 5 2 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 re+0 S2 A16])
        (reg:HI 2 r2 [158])) integer_fft.c:226 178 {*movhi_insn_arch4}
     (nil))

(insn 5 3 6 2 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 im+0 S2 A16])
        (reg:HI 3 r3 [159])) integer_fft.c:226 178 {*movhi_insn_arch4}
     (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 (set (reg/f:SI 3 r3 [160])
        (symbol_ref:SI ("loud2.1340") [flags 0x2]  <var_decl 0xb6b71180 loud2>)) integer_fft.c:231 625 {*arm_movsi_vfp}
     (nil))

(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:134 D.1399 ] [134])
        (mem/s/j/c:SI (reg/f:SI 3 r3 [160]) [0 loud2+0 S4 A32])) integer_fft.c:231 625 {*arm_movsi_vfp}
     (nil))

(insn 11 10 12 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:134 D.1399 ] [134])
            (const_int 0 [0]))) integer_fft.c:231 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) integer_fft.c:231 211 {*arm_cond_branch}
     (nil)
 -> 69)
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  3 (fallthru)
;; Succ edge  6

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136 137 138 139 161 162 163 164

;; Pred edge  2 (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 (set (reg/f:SI 3 r3 [161])
        (symbol_ref:SI ("Loudampl") [flags 0x2]  <var_decl 0xb6b622a0 Loudampl>)) integer_fft.c:232 625 {*arm_movsi_vfp}
     (nil))

(insn 15 14 16 3 (set (reg:SI 3 r3 [orig:135 D.1402 ] [135])
        (zero_extend:SI (mem/s/j/c:HI (reg/f:SI 3 r3 [161]) [0 Loudampl+0 S2 A32]))) integer_fft.c:232 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 16 15 17 3 (set (reg:SI 3 r3 [orig:136 D.1403 ] [136])
        (sign_extend:SI (reg:HI 3 r3 [orig:135 D.1402 ] [135]))) integer_fft.c:232 158 {*arm_extendhisi2_v6}
     (nil))

(insn 17 16 18 3 (set (reg/f:SI 2 r2 [162])
        (symbol_ref:SI ("Loudampl") [flags 0x2]  <var_decl 0xb6b622a0 Loudampl>)) integer_fft.c:232 625 {*arm_movsi_vfp}
     (nil))

(insn 18 17 19 3 (set (reg:SI 2 r2 [orig:137 D.1404 ] [137])
        (zero_extend:SI (mem/s/j/c:HI (reg/f:SI 2 r2 [162]) [0 Loudampl+0 S2 A32]))) integer_fft.c:232 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 19 18 20 3 (set (reg:SI 2 r2 [orig:138 D.1405 ] [138])
        (sign_extend:SI (reg:HI 2 r2 [orig:137 D.1404 ] [137]))) integer_fft.c:232 158 {*arm_extendhisi2_v6}
     (nil))

(insn 20 19 21 3 (set (reg:SI 2 r2 [orig:139 D.1406 ] [139])
        (mult:SI (reg:SI 2 r2 [orig:138 D.1405 ] [138])
            (reg:SI 3 r3 [orig:136 D.1403 ] [136]))) integer_fft.c:232 34 {*arm_mulsi3_v6}
     (nil))

(insn 21 20 22 3 (set (reg/f:SI 3 r3 [163])
        (symbol_ref:SI ("loud2.1340") [flags 0x2]  <var_decl 0xb6b71180 loud2>)) integer_fft.c:232 625 {*arm_movsi_vfp}
     (nil))

(insn 22 21 23 3 (set (mem/s/j/c:SI (reg/f:SI 3 r3 [163]) [0 loud2+0 S4 A32])
        (reg:SI 2 r2 [orig:139 D.1406 ] [139])) integer_fft.c:232 625 {*arm_movsi_vfp}
     (nil))

(insn 23 22 24 3 (set (reg:SI 3 r3 [164])
        (const_int 1 [0x1])) integer_fft.c:233 625 {*arm_movsi_vfp}
     (nil))

(insn 24 23 118 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 3 r3 [164])) integer_fft.c:233 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 118 24 119 3 (set (pc)
        (label_ref 63)) integer_fft.c:233 223 {*arm_jump}
     (nil)
 -> 63)
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  5 [100.0%] 

(barrier 119 118 65)

;; Start of basic block ( 5) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140 141 142 143 144 145 146 147 148 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186

;; Pred edge  5
(code_label 65 119 27 4 45 "" [1 uses])

(note 27 65 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 4 (set (reg/f:SI 2 r2 [165])
        (symbol_ref:SI ("Loudampl") [flags 0x2]  <var_decl 0xb6b622a0 Loudampl>)) integer_fft.c:234 625 {*arm_movsi_vfp}
     (nil))

(insn 29 28 30 4 (set (reg:SI 3 r3 [166])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:234 625 {*arm_movsi_vfp}
     (nil))

(insn 30 29 31 4 (set (reg:SI 3 r3 [167])
        (ashift:SI (reg:SI 3 r3 [166])
            (const_int 1 [0x1]))) integer_fft.c:234 119 {*arm_shiftsi3}
     (nil))

(insn 31 30 32 4 (set (reg/f:SI 3 r3 [168])
        (plus:SI (reg/f:SI 2 r2 [165])
            (reg:SI 3 r3 [167]))) integer_fft.c:234 4 {*arm_addsi3}
     (nil))

(insn 32 31 33 4 (set (reg:SI 3 r3 [orig:140 D.1407 ] [140])
        (zero_extend:SI (mem/s/j:HI (reg/f:SI 3 r3 [168]) [0 Loudampl S2 A16]))) integer_fft.c:234 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 33 32 34 4 (set (reg:SI 3 r3 [orig:141 D.1408 ] [141])
        (sign_extend:SI (reg:HI 3 r3 [orig:140 D.1407 ] [140]))) integer_fft.c:234 158 {*arm_extendhisi2_v6}
     (nil))

(insn 34 33 35 4 (set (reg/f:SI 1 r1 [169])
        (symbol_ref:SI ("Loudampl") [flags 0x2]  <var_decl 0xb6b622a0 Loudampl>)) integer_fft.c:234 625 {*arm_movsi_vfp}
     (nil))

(insn 35 34 36 4 (set (reg:SI 2 r2 [170])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:234 625 {*arm_movsi_vfp}
     (nil))

(insn 36 35 37 4 (set (reg:SI 2 r2 [171])
        (ashift:SI (reg:SI 2 r2 [170])
            (const_int 1 [0x1]))) integer_fft.c:234 119 {*arm_shiftsi3}
     (nil))

(insn 37 36 38 4 (set (reg/f:SI 2 r2 [172])
        (plus:SI (reg/f:SI 1 r1 [169])
            (reg:SI 2 r2 [171]))) integer_fft.c:234 4 {*arm_addsi3}
     (nil))

(insn 38 37 39 4 (set (reg:SI 2 r2 [orig:142 D.1409 ] [142])
        (zero_extend:SI (mem/s/j:HI (reg/f:SI 2 r2 [172]) [0 Loudampl S2 A16]))) integer_fft.c:234 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 39 38 40 4 (set (reg:SI 2 r2 [orig:143 D.1410 ] [143])
        (sign_extend:SI (reg:HI 2 r2 [orig:142 D.1409 ] [142]))) integer_fft.c:234 158 {*arm_extendhisi2_v6}
     (nil))

(insn 40 39 41 4 (set (reg:SI 3 r3 [173])
        (mult:SI (reg:SI 2 r2 [orig:143 D.1410 ] [143])
            (reg:SI 3 r3 [orig:141 D.1408 ] [141]))) integer_fft.c:234 34 {*arm_mulsi3_v6}
     (nil))

(insn 41 40 42 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 v+0 S4 A32])
        (reg:SI 3 r3 [173])) integer_fft.c:234 625 {*arm_movsi_vfp}
     (nil))

(insn 42 41 43 4 (set (reg/f:SI 3 r3 [174])
        (symbol_ref:SI ("loud2.1340") [flags 0x2]  <var_decl 0xb6b71180 loud2>)) integer_fft.c:235 625 {*arm_movsi_vfp}
     (nil))

(insn 43 42 44 4 (set (reg:SI 2 r2 [175])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:235 625 {*arm_movsi_vfp}
     (nil))

(insn 44 43 45 4 (set (reg:SI 1 r1 [176])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 v+0 S4 A32])) integer_fft.c:235 625 {*arm_movsi_vfp}
     (nil))

(insn 45 44 46 4 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 2 r2 [175])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [174])) [0 loud2 S4 A32])
        (reg:SI 1 r1 [176])) integer_fft.c:235 625 {*arm_movsi_vfp}
     (nil))

(insn 46 45 47 4 (set (reg:SI 3 r3 [177])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 47 46 48 4 (set (reg:SI 2 r2 [orig:144 D.1411 ] [144])
        (plus:SI (reg:SI 3 r3 [177])
            (const_int -1 [0xffffffffffffffff]))) integer_fft.c:236 4 {*arm_addsi3}
     (nil))

(insn 48 47 49 4 (set (reg:SI 3 r3 [178])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 49 48 50 4 (set (reg:SI 1 r1 [orig:145 D.1412 ] [145])
        (plus:SI (reg:SI 3 r3 [178])
            (const_int -1 [0xffffffffffffffff]))) integer_fft.c:236 4 {*arm_addsi3}
     (nil))

(insn 50 49 51 4 (set (reg/f:SI 3 r3 [179])
        (symbol_ref:SI ("loud2.1340") [flags 0x2]  <var_decl 0xb6b71180 loud2>)) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 51 50 52 4 (set (reg:SI 1 r1 [orig:146 D.1413 ] [146])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:145 D.1412 ] [145])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [179])) [0 loud2 S4 A32])) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 52 51 53 4 (set (reg:SI 3 r3 [180])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 v+0 S4 A32])) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 53 52 54 4 (set (reg:SI 3 r3 [orig:147 D.1414 ] [147])
        (plus:SI (reg:SI 1 r1 [orig:146 D.1413 ] [146])
            (reg:SI 3 r3 [180]))) integer_fft.c:236 4 {*arm_addsi3}
     (nil))

(insn 54 53 55 4 (set (reg:SI 1 r1 [181])
        (lshiftrt:SI (reg:SI 3 r3 [orig:147 D.1414 ] [147])
            (const_int 31 [0x1f]))) integer_fft.c:236 119 {*arm_shiftsi3}
     (nil))

(insn 55 54 56 4 (set (reg:SI 3 r3 [182])
        (plus:SI (reg:SI 1 r1 [181])
            (reg:SI 3 r3 [orig:147 D.1414 ] [147]))) integer_fft.c:236 4 {*arm_addsi3}
     (nil))

(insn 56 55 57 4 (set (reg:SI 3 r3 [183])
        (ashiftrt:SI (reg:SI 3 r3 [182])
            (const_int 1 [0x1]))) integer_fft.c:236 119 {*arm_shiftsi3}
     (expr_list:REG_EQUAL (div:SI (reg:SI 3 r3 [orig:147 D.1414 ] [147])
            (const_int 2 [0x2]))
        (nil)))

(insn 57 56 58 4 (set (reg:SI 1 r1 [orig:148 D.1415 ] [148])
        (reg:SI 3 r3 [183])) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 58 57 59 4 (set (reg/f:SI 3 r3 [184])
        (symbol_ref:SI ("loud2.1340") [flags 0x2]  <var_decl 0xb6b71180 loud2>)) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 59 58 60 4 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 2 r2 [orig:144 D.1411 ] [144])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [184])) [0 loud2 S4 A32])
        (reg:SI 1 r1 [orig:148 D.1415 ] [148])) integer_fft.c:236 625 {*arm_movsi_vfp}
     (nil))

(insn 60 59 61 4 (set (reg:SI 3 r3 [185])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:233 625 {*arm_movsi_vfp}
     (nil))

(insn 61 60 62 4 (set (reg:SI 3 r3 [186])
        (plus:SI (reg:SI 3 r3 [185])
            (const_int 1 [0x1]))) integer_fft.c:233 4 {*arm_addsi3}
     (nil))

(insn 62 61 63 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 3 r3 [186])) integer_fft.c:233 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  5 (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 187

;; Pred edge  4 (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 63 62 64 5 44 "" [1 uses])

(note 64 63 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 66 64 67 5 (set (reg:SI 3 r3 [187])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:233 625 {*arm_movsi_vfp}
     (nil))

(insn 67 66 68 5 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [187])
            (const_int 99 [0x63]))) integer_fft.c:233 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 68 67 69 5 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) integer_fft.c:233 211 {*arm_cond_branch}
     (nil)
 -> 65)
;; End of basic block 5 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  4
;; Succ edge  6 (fallthru)

;; Start of basic block ( 2 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149 150 151 152 153 154 188 189

;; Pred edge  2
;; Pred edge  5 (fallthru)
(code_label 69 68 70 6 43 "" [1 uses])

(note 70 69 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 6 (set (reg:SI 3 r3 [orig:149 D.1416 ] [149])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -14 [0xfffffffffffffff2])) [0 re+0 S2 A16]))) integer_fft.c:240 158 {*arm_extendhisi2_v6}
     (nil))

(insn 72 71 73 6 (set (reg:SI 2 r2 [orig:150 D.1417 ] [150])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -14 [0xfffffffffffffff2])) [0 re+0 S2 A16]))) integer_fft.c:240 158 {*arm_extendhisi2_v6}
     (nil))

(insn 73 72 74 6 (set (reg:SI 2 r2 [orig:151 D.1418 ] [151])
        (mult:SI (reg:SI 2 r2 [orig:150 D.1417 ] [150])
            (reg:SI 3 r3 [orig:149 D.1416 ] [149]))) integer_fft.c:240 34 {*arm_mulsi3_v6}
     (nil))

(insn 74 73 75 6 (set (reg:SI 3 r3 [orig:152 D.1419 ] [152])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -16 [0xfffffffffffffff0])) [0 im+0 S2 A16]))) integer_fft.c:240 158 {*arm_extendhisi2_v6}
     (nil))

(insn 75 74 76 6 (set (reg:SI 1 r1 [orig:153 D.1420 ] [153])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -16 [0xfffffffffffffff0])) [0 im+0 S2 A16]))) integer_fft.c:240 158 {*arm_extendhisi2_v6}
     (nil))

(insn 76 75 77 6 (set (reg:SI 3 r3 [orig:154 D.1421 ] [154])
        (mult:SI (reg:SI 1 r1 [orig:153 D.1420 ] [153])
            (reg:SI 3 r3 [orig:152 D.1419 ] [152]))) integer_fft.c:240 34 {*arm_mulsi3_v6}
     (nil))

(insn 77 76 78 6 (set (reg:SI 3 r3 [188])
        (plus:SI (reg:SI 2 r2 [orig:151 D.1418 ] [151])
            (reg:SI 3 r3 [orig:154 D.1421 ] [154]))) integer_fft.c:240 4 {*arm_addsi3}
     (nil))

(insn 78 77 79 6 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 v+0 S4 A32])
        (reg:SI 3 r3 [188])) integer_fft.c:240 625 {*arm_movsi_vfp}
     (nil))

(insn 79 78 80 6 (set (reg:SI 3 r3 [189])
        (const_int 0 [0])) integer_fft.c:242 625 {*arm_movsi_vfp}
     (nil))

(insn 80 79 120 6 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 3 r3 [189])) integer_fft.c:242 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 120 80 121 6 (set (pc)
        (label_ref 98)) integer_fft.c:242 223 {*arm_jump}
     (nil)
 -> 98)
;; End of basic block 6 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  9 [100.0%] 

(barrier 121 120 100)

;; Start of basic block ( 9) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 155 190 191 192

;; Pred edge  9
(code_label 100 121 83 7 49 "" [1 uses])

(note 83 100 84 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 85 7 (set (reg/f:SI 3 r3 [190])
        (symbol_ref:SI ("loud2.1340") [flags 0x2]  <var_decl 0xb6b71180 loud2>)) integer_fft.c:243 625 {*arm_movsi_vfp}
     (nil))

(insn 85 84 86 7 (set (reg:SI 2 r2 [191])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:243 625 {*arm_movsi_vfp}
     (nil))

(insn 86 85 87 7 (set (reg:SI 2 r2 [orig:155 D.1422 ] [155])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 2 r2 [191])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [190])) [0 loud2 S4 A32])) integer_fft.c:243 625 {*arm_movsi_vfp}
     (nil))

(insn 87 86 88 7 (set (reg:SI 3 r3 [192])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 v+0 S4 A32])) integer_fft.c:243 625 {*arm_movsi_vfp}
     (nil))

(insn 88 87 89 7 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:155 D.1422 ] [155])
            (reg:SI 3 r3 [192]))) integer_fft.c:243 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 89 88 93 7 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 126)
            (pc))) integer_fft.c:243 211 {*arm_cond_branch}
     (nil)
 -> 126)
;; End of basic block 7 -> ( 12 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  12
;; Succ edge  8 (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 193 194

;; Pred edge  7 (fallthru)
(code_label 93 89 94 8 47 "" [0 uses])

(note 94 93 95 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 8 (set (reg:SI 3 r3 [193])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:242 625 {*arm_movsi_vfp}
     (nil))

(insn 96 95 97 8 (set (reg:SI 3 r3 [194])
        (plus:SI (reg:SI 3 r3 [193])
            (const_int 1 [0x1]))) integer_fft.c:242 4 {*arm_addsi3}
     (nil))

(insn 97 96 98 8 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 3 r3 [194])) integer_fft.c:242 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  9 (fallthru)

;; Start of basic block ( 8 6) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 195

;; Pred edge  8 (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 98 97 99 9 46 "" [1 uses])

(note 99 98 101 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 101 99 102 9 (set (reg:SI 3 r3 [195])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:242 625 {*arm_movsi_vfp}
     (nil))

(insn 102 101 103 9 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [195])
            (const_int 99 [0x63]))) integer_fft.c:242 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 103 102 122 9 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) integer_fft.c:242 211 {*arm_cond_branch}
     (nil)
 -> 100)
;; End of basic block 9 -> ( 7 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  7
;; Succ edge  11 (fallthru)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	

;; Pred edge  9 (fallthru)
(note 122 103 123 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(jump_insn 123 122 124 11 (set (pc)
        (label_ref 104)) 223 {*arm_jump}
     (nil)
 -> 104)
;; End of basic block 11 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%] 

(barrier 124 123 126)

;; Start of basic block ( 7) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	

;; Pred edge  7
(code_label 126 124 125 12 50 "" [1 uses])

(note 125 126 127 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 127 125 104 12 (const_int 0 [0]) integer_fft.c:244 251 {nop}
     (nil))
;; End of basic block 12 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 12 11) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 156 157 196

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%] 
(code_label 104 127 105 10 48 "" [1 uses])

(note 105 104 106 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 107 10 (set (reg:SI 3 r3 [196])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) integer_fft.c:246 625 {*arm_movsi_vfp}
     (nil))

(insn 107 106 112 10 (set (reg:SI 3 r3 [orig:156 D.1425 ] [156])
        (neg:SI (reg:SI 3 r3 [196]))) integer_fft.c:246 129 {*arm_negsi2}
     (nil))

(insn 112 107 115 10 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:157 <retval> ] [157])) integer_fft.c:247 625 {*arm_movsi_vfp}
     (nil))

(insn 115 112 128 10 (use (reg/i:SI 0 r0)) integer_fft.c:247 -1
     (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 128 115 0 NOTE_INSN_DELETED)


;; Function fix_mpy (fix_mpy)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a1 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a7 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a8 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a2 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a3 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a4 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a6 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a5 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a1(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a4(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a5(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a6(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a7(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a8(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20

   Insn 23(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 5(l0): point = 20
   Insn 3(l0): point = 22
   Insn 4(l0): point = 24
   Insn 2(l0): point = 26
 a0(r139): [3..4]
 a1(r143): [5..6]
 a2(r138): [7..8]
 a3(r137): [11..12]
 a4(r136): [13..14]
 a5(r134): [15..18]
 a6(r135): [15..16]
 a7(r141): [21..24]
 a8(r140): [23..26]
Compressing live ranges: from 29 to 14 - 48%
Ranges after the compression:
 a0(r139): [0..1]
 a1(r143): [2..3]
 a2(r138): [4..5]
 a3(r137): [6..7]
 a4(r136): [8..9]
 a5(r134): [10..11]
 a6(r135): [10..11]
 a7(r141): [12..13]
 a8(r140): [12..13]
  regions=1, blocks=3, points=14
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    5:r134 l0     3    6:r135 l0     2    4:r136 l0     3    3:r137 l0     3
    2:r138 l0     3    0:r139 l0     3    8:r140 l0     2    7:r141 l0     3
    1:r143 l0     3
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 140
insn=4, live_throughout: 13, 14, 140, dead_or_set: 1, 141
insn=3, live_throughout: 13, 14, 141, dead_or_set: 140
insn=5, live_throughout: 13, 14, dead_or_set: 141
insn=9, live_throughout: 13, 14, dead_or_set: 134
insn=10, live_throughout: 13, 14, 134, dead_or_set: 135
insn=11, live_throughout: 13, 14, dead_or_set: 134, 135, 136
insn=12, live_throughout: 13, 14, dead_or_set: 136, 137
insn=13, live_throughout: 13, 14, dead_or_set: 137
insn=14, live_throughout: 13, 14, dead_or_set: 138
insn=15, live_throughout: 13, 14, dead_or_set: 138, 143
insn=16, live_throughout: 13, 14, dead_or_set: 139, 143
insn=20, live_throughout: 13, 14, dead_or_set: 0, 139
insn=23, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 9
changing reg in insn 11
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 14
changing reg in insn 16
changing reg in insn 20
changing reg in insn 2
changing reg in insn 4
changing reg in insn 15
changing reg in insn 16
deleting insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns


fix_mpy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 11[fp]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={3d,2u} r3={7d,6u} r11={1d,8u} r13={1d,2u} r14={1d,1u} r25={1d,1u} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} 
;;    total ref usage 57{33d,24u,0e} in 13{13 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 134 135 136 137 138 139 140 141 143

;; Pred edge  ENTRY (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 (set (reg:SI 2 r2 [140])
        (reg:SI 0 r0 [ a ])) integer_fft.c:253 625 {*arm_movsi_vfp}
     (nil))

(insn 4 2 3 2 (set (reg:SI 3 r3 [141])
        (reg:SI 1 r1 [ b ])) integer_fft.c:253 625 {*arm_movsi_vfp}
     (nil))

(insn 3 4 5 2 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -6 [0xfffffffffffffffa])) [0 a+0 S2 A16])
        (reg:HI 2 r2 [140])) integer_fft.c:253 178 {*movhi_insn_arch4}
     (nil))

(insn 5 3 6 2 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S2 A16])
        (reg:HI 3 r3 [141])) integer_fft.c:253 178 {*movhi_insn_arch4}
     (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 (set (reg:SI 3 r3 [orig:134 D.1393 ] [134])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -6 [0xfffffffffffffffa])) [0 a+0 S2 A16]))) integer_fft.c:254 158 {*arm_extendhisi2_v6}
     (nil))

(insn 10 9 11 2 (set (reg:SI 2 r2 [orig:135 D.1394 ] [135])
        (sign_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -8 [0xfffffffffffffff8])) [0 b+0 S2 A16]))) integer_fft.c:254 158 {*arm_extendhisi2_v6}
     (nil))

(insn 11 10 12 2 (set (reg:SI 3 r3 [orig:136 D.1395 ] [136])
        (mult:SI (reg:SI 2 r2 [orig:135 D.1394 ] [135])
            (reg:SI 3 r3 [orig:134 D.1393 ] [134]))) integer_fft.c:254 34 {*arm_mulsi3_v6}
     (nil))

(insn 12 11 13 2 (set (reg:SI 3 r3 [orig:137 D.1396 ] [137])
        (ashiftrt:SI (reg:SI 3 r3 [orig:136 D.1395 ] [136])
            (const_int 15 [0xf]))) integer_fft.c:254 119 {*arm_shiftsi3}
     (nil))

(insn 13 12 14 2 (set (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                (const_int -6 [0xfffffffffffffffa])) [0 a+0 S2 A16])
        (reg:HI 3 r3 [orig:137 D.1396 ] [137])) integer_fft.c:254 178 {*movhi_insn_arch4}
     (nil))

(insn 14 13 15 2 (set (reg:SI 3 r3 [orig:138 D.1397 ] [138])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 11 fp)
                    (const_int -6 [0xfffffffffffffffa])) [0 a+0 S2 A16]))) integer_fft.c:255 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 15 14 20 2 (set (reg:SI 3 r3 [143])
        (sign_extend:SI (reg:HI 3 r3 [orig:138 D.1397 ] [138]))) integer_fft.c:255 158 {*arm_extendhisi2_v6}
     (nil))

(insn 20 15 23 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:139 <retval> ] [139])) integer_fft.c:256 625 {*arm_movsi_vfp}
     (nil))

(insn 23 20 26 2 (use (reg/i:SI 0 r0)) integer_fft.c:256 -1
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 26 23 0 NOTE_INSN_DELETED)


;; Function iscale (iscale)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a2 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a5 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a4 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a3 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a2(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a4(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a5(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20

   Insn 23(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 8(l0): point = 20
   Insn 4(l0): point = 22
   Insn 3(l0): point = 24
   Insn 2(l0): point = 26
 a0(r136): [3..4]
 a1(r135): [5..6]
 a2(r141): [7..8]
 a3(r134): [15..16]
 a4(r137): [17..20]
 a5(r138): [17..18]
Compressing live ranges: from 29 to 10 - 34%
Ranges after the compression:
 a0(r136): [0..1]
 a1(r135): [2..3]
 a2(r141): [4..5]
 a3(r134): [6..7]
 a4(r137): [8..9]
 a5(r138): [8..9]
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    3:r134 l0     3    1:r135 l0     3    0:r136 l0     3    4:r137 l0     3
    5:r138 l0     2    2:r141 l0     3
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 13, dead_or_set: 0
insn=3, live_throughout: 2, 13, dead_or_set: 1
insn=4, live_throughout: 13, dead_or_set: 2
insn=8, live_throughout: 13, dead_or_set: 137
insn=9, live_throughout: 13, 137, dead_or_set: 138
insn=10, live_throughout: 13, dead_or_set: 134, 137, 138
insn=11, live_throughout: 13, dead_or_set: 0, 134
insn=12, live_throughout: 0, 13, dead_or_set: 1
insn=13, live_throughout: 13, dead_or_set: 0, 1, 14
insn=14, live_throughout: 13, 14, dead_or_set: 0, 141
insn=15, live_throughout: 13, 14, dead_or_set: 135, 141
insn=16, live_throughout: 13, 14, dead_or_set: 135, 136
insn=20, live_throughout: 13, 14, dead_or_set: 0, 136
insn=23, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 10
changing reg in insn 11
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 16
changing reg in insn 20
changing reg in insn 8
changing reg in insn 10
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 15
deleting insn with uid = 15.
deleting insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.


iscale

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 11[fp] 13[sp] 14[lr]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={3d,2u} r3={5d,3u,1e} r11={1d,8u} r12={1d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,1u,1e} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 159{132d,25u,2e} in 12{11 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137 138 141

;; Pred edge  ENTRY (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 value+0 S4 A32])
        (reg:SI 0 r0 [ value ])) integer_fft.c:262 625 {*arm_movsi_vfp}
     (nil))

(insn 3 2 4 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 numer+0 S4 A32])
        (reg:SI 1 r1 [ numer ])) integer_fft.c:262 625 {*arm_movsi_vfp}
     (nil))

(insn 4 3 5 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 denom+0 S4 A32])
        (reg:SI 2 r2 [ denom ])) integer_fft.c:262 625 {*arm_movsi_vfp}
     (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 (set (reg:SI 3 r3 [137])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [0 value+0 S4 A32])) integer_fft.c:270 625 {*arm_movsi_vfp}
     (nil))

(insn 9 8 10 2 (set (reg:SI 2 r2 [138])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [0 numer+0 S4 A32])) integer_fft.c:270 625 {*arm_movsi_vfp}
     (nil))

(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:134 D.1391 ] [134])
        (mult:SI (reg:SI 2 r2 [138])
            (reg:SI 3 r3 [137]))) integer_fft.c:270 34 {*arm_mulsi3_v6}
     (nil))

(insn 11 10 12 2 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:134 D.1391 ] [134])) integer_fft.c:270 625 {*arm_movsi_vfp}
     (nil))

(insn 12 11 13 2 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 denom+0 S4 A32])) integer_fft.c:270 625 {*arm_movsi_vfp}
     (nil))

(call_insn/u 13 12 14 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_idiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) integer_fft.c:270 236 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 14 13 20 2 (set (reg:SI 3 r3 [141])
        (reg:SI 0 r0)) integer_fft.c:270 625 {*arm_movsi_vfp}
     (expr_list:REG_EQUAL (div:SI (reg:SI 3 r3 [orig:134 D.1391 ] [134])
            (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -12 [0xfffffffffffffff4])) [0 denom+0 S4 A32]))
        (nil)))

(insn 20 14 23 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:136 <retval> ] [136])) integer_fft.c:272 625 {*arm_movsi_vfp}
     (nil))

(insn 23 20 26 2 (use (reg/i:SI 0 r0)) integer_fft.c:272 -1
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 26 23 0 NOTE_INSN_DELETED)


;; Function fix_dot (fix_dot)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 12 (  1.2)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r166: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a1 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a3 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a4 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a5 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a6 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a7 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a8 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a9 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a11 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a12 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a14 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a15 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a13 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a16 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a18 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a25 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a26 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a27 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a28 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a29 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a30 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a31 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a2 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a17 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a20 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a21 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a23 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a22 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a24 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a19 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a10 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a1(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a2(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a3(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a4(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a5(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a6(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a7(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a8(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a9(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a10(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a11(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a12(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a13(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20
  a14(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a15(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a16(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a17(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a18(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a19(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:131100,131100 VFP_REGS:131100,131100 MEM:40
  a20(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a21(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a22(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a23(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a24(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:65550,65550 VFP_REGS:65550,65550 MEM:20
  a25(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a26(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a27(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a28(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a29(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a30(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20
  a31(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_REGS:30,30 MEM:20

   Insn 76(l0): point = 0
   Insn 73(l0): point = 2
   Insn 69(l0): point = 4
   Insn 68(l0): point = 6
   Insn 67(l0): point = 8
   Insn 66(l0): point = 10
   Insn 63(l0): point = 13
   Insn 62(l0): point = 15
   Insn 60(l0): point = 18
   Insn 59(l0): point = 20
   Insn 58(l0): point = 22
   Insn 57(l0): point = 24
   Insn 81(l0): point = 27
   Insn 52(l0): point = 29
   Insn 51(l0): point = 31
   Insn 49(l0): point = 34
   Insn 48(l0): point = 36
   Insn 47(l0): point = 38
   Insn 46(l0): point = 40
   Insn 44(l0): point = 43
   Insn 43(l0): point = 45
   Insn 41(l0): point = 47
   Insn 40(l0): point = 49
   Insn 39(l0): point = 51
   Insn 38(l0): point = 53
   Insn 37(l0): point = 55
   Insn 36(l0): point = 57
   Insn 35(l0): point = 59
   Insn 34(l0): point = 61
   Insn 31(l0): point = 64
   Insn 30(l0): point = 66
   Insn 29(l0): point = 68
   Insn 28(l0): point = 70
   Insn 27(l0): point = 72
   Insn 26(l0): point = 74
   Insn 25(l0): point = 76
   Insn 24(l0): point = 78
   Insn 23(l0): point = 80
   Insn 22(l0): point = 82
   Insn 21(l0): point = 84
   Insn 20(l0): point = 86
   Insn 19(l0): point = 88
   Insn 18(l0): point = 90
   Insn 17(l0): point = 92
   Insn 16(l0): point = 94
   Insn 15(l0): point = 96
   Insn 14(l0): point = 98
   Insn 13(l0): point = 100
   Insn 79(l0): point = 103
   Insn 9(l0): point = 105
   Insn 8(l0): point = 107
   Insn 4(l0): point = 109
   Insn 3(l0): point = 111
   Insn 2(l0): point = 113
 a0(r143): [3..4]
 a1(r166): [5..6]
 a2(r142): [7..8]
 a3(r164): [9..10]
 a4(r163): [14..15]
 a5(r162): [21..22]
 a6(r161): [21..24]
 a7(r160): [30..31]
 a8(r159): [37..38]
 a9(r158): [37..40]
 a10(r134): [46..53]
 a11(r157): [48..49]
 a12(r156): [50..51]
 a13(r153): [54..55]
 a14(r155): [56..57]
 a15(r154): [60..61]
 a16(r152): [65..66]
 a17(r141): [67..70]
 a18(r151): [67..68]
 a19(r135): [81..98] [71..72]
 a20(r140): [73..74]
 a21(r139): [75..76]
 a22(r137): [77..80]
 a23(r138): [77..78]
 a24(r136): [79..88]
 a25(r150): [83..84]
 a26(r149): [85..86]
 a27(r148): [89..90]
 a28(r147): [93..94]
 a29(r146): [95..96]
 a30(r145): [99..100]
 a31(r144): [106..107]
Compressing live ranges: from 116 to 54 - 46%
Ranges after the compression:
 a0(r143): [0..1]
 a1(r166): [2..3]
 a2(r142): [4..5]
 a3(r164): [6..7]
 a4(r163): [8..9]
 a5(r162): [10..11]
 a6(r161): [10..11]
 a7(r160): [12..13]
 a8(r159): [14..15]
 a9(r158): [14..15]
 a10(r134): [16..19]
 a11(r157): [16..17]
 a12(r156): [18..19]
 a13(r153): [20..21]
 a14(r155): [22..23]
 a15(r154): [24..25]
 a16(r152): [26..27]
 a17(r141): [28..29]
 a18(r151): [28..29]
 a19(r135): [40..49] [30..31]
 a20(r140): [32..33]
 a21(r139): [34..35]
 a22(r137): [36..39]
 a23(r138): [36..37]
 a24(r136): [38..43]
 a25(r150): [40..41]
 a26(r149): [42..43]
 a27(r148): [44..45]
 a28(r147): [46..47]
 a29(r146): [48..49]
 a30(r145): [50..51]
 a31(r144): [52..53]
  regions=2, blocks=10, points=54
    allocnos=32 (big 0), copies=0, conflicts=0, ranges=33
Disposition:
   10:r134 l0     3   19:r135 l0     4   24:r136 l0     5   22:r137 l0     3
   23:r138 l0     2   21:r139 l0     3   20:r140 l0     3   17:r141 l0     3
    2:r142 l0     3    0:r143 l0     3   31:r144 l0     3   30:r145 l0     3
   29:r146 l0     3   28:r147 l0     3   27:r148 l0     3   26:r149 l0     3
   25:r150 l0     3   18:r151 l0     2   16:r152 l0     3   13:r153 l0     3
   15:r154 l0     3   14:r155 l0     3   12:r156 l0     2   11:r157 l0     2
    9:r158 l0     2    8:r159 l0     3    7:r160 l0     3    6:r161 l0     2
    5:r162 l0     3    4:r163 l0     3    3:r164 l0     3    1:r166 l0     3
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 13, 14, dead_or_set: 0
insn=3, live_throughout: 2, 13, 14, dead_or_set: 1
insn=4, live_throughout: 13, 14, dead_or_set: 2
insn=8, live_throughout: 13, 14, dead_or_set: 144
insn=9, live_throughout: 13, 14, dead_or_set: 144
insn=79, live_throughout: 13, 14, dead_or_set: 
insn=42, live_throughout: 13, 14, dead_or_set: 
insn=13, live_throughout: 13, 14, dead_or_set: 145
insn=14, live_throughout: 13, 14, dead_or_set: 135, 145
insn=15, live_throughout: 13, 14, 135, dead_or_set: 146
insn=16, live_throughout: 13, 14, 135, dead_or_set: 146, 147
insn=17, live_throughout: 13, 14, 135, dead_or_set: 147
insn=18, live_throughout: 13, 14, 135, dead_or_set: 148
insn=19, live_throughout: 13, 14, 135, dead_or_set: 136, 148
insn=20, live_throughout: 13, 14, 135, 136, dead_or_set: 149
insn=21, live_throughout: 13, 14, 135, 136, dead_or_set: 149, 150
insn=22, live_throughout: 13, 14, 135, 136, dead_or_set: 150
insn=23, live_throughout: 13, 14, 136, dead_or_set: 135, 137
insn=24, live_throughout: 13, 14, 137, dead_or_set: 136, 138
insn=25, live_throughout: 13, 14, dead_or_set: 137, 138, 139
insn=26, live_throughout: 13, 14, dead_or_set: 139, 140
insn=27, live_throughout: 13, 14, dead_or_set: 135, 140
insn=28, live_throughout: 13, 14, dead_or_set: 135, 141
insn=29, live_throughout: 13, 14, 141, dead_or_set: 151
insn=30, live_throughout: 13, 14, dead_or_set: 141, 151, 152
insn=31, live_throughout: 13, 14, dead_or_set: 152
insn=32, live_throughout: 13, 14, dead_or_set: 
insn=34, live_throughout: 13, 14, dead_or_set: 154
insn=35, live_throughout: 13, 14, dead_or_set: 154
insn=36, live_throughout: 13, 14, dead_or_set: 155
insn=37, live_throughout: 13, 14, dead_or_set: 153, 155
insn=38, live_throughout: 13, 14, dead_or_set: 134, 153
insn=39, live_throughout: 13, 14, 134, dead_or_set: 156
insn=40, live_throughout: 13, 14, 134, dead_or_set: 156, 157
insn=41, live_throughout: 13, 14, 134, dead_or_set: 157
insn=43, live_throughout: 13, 14, dead_or_set: 134
insn=44, live_throughout: 13, 14, dead_or_set: 
insn=46, live_throughout: 13, 14, dead_or_set: 158
insn=47, live_throughout: 13, 14, 158, dead_or_set: 159
insn=48, live_throughout: 13, 14, dead_or_set: 158, 159
insn=49, live_throughout: 13, 14, dead_or_set: 
insn=51, live_throughout: 13, 14, dead_or_set: 160
insn=52, live_throughout: 13, 14, dead_or_set: 160
insn=81, live_throughout: 13, 14, dead_or_set: 
insn=55, live_throughout: 13, 14, dead_or_set: 
insn=57, live_throughout: 13, 14, dead_or_set: 161
insn=58, live_throughout: 13, 14, 161, dead_or_set: 162
insn=59, live_throughout: 13, 14, dead_or_set: 161, 162
insn=60, live_throughout: 13, 14, dead_or_set: 
insn=62, live_throughout: 13, 14, dead_or_set: 163
insn=63, live_throughout: 13, 14, dead_or_set: 163
insn=64, live_throughout: 13, 14, dead_or_set: 
insn=66, live_throughout: 13, 14, dead_or_set: 164
insn=67, live_throughout: 13, 14, dead_or_set: 142, 164
insn=68, live_throughout: 13, 14, dead_or_set: 142, 166
insn=69, live_throughout: 13, 14, dead_or_set: 143, 166
insn=73, live_throughout: 13, 14, dead_or_set: 0, 143
insn=76, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 38
changing reg in insn 43
changing reg in insn 27
changing reg in insn 14
changing reg in insn 19
changing reg in insn 23
changing reg in insn 25
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 28
changing reg in insn 30
changing reg in insn 67
changing reg in insn 69
changing reg in insn 73
changing reg in insn 8
changing reg in insn 9
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 37
changing reg in insn 38
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 41
changing reg in insn 46
changing reg in insn 48
changing reg in insn 47
changing reg in insn 48
changing reg in insn 51
changing reg in insn 52
changing reg in insn 57
changing reg in insn 59
changing reg in insn 58
changing reg in insn 59
changing reg in insn 62
changing reg in insn 63
changing reg in insn 66
changing reg in insn 68
changing reg in insn 69
deleting insn with uid = 69.
starting the processing of deferred insns
ending the processing of deferred insns


fix_dot

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 11[fp] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={7d,7u} r3={24d,23u} r4={2d,2u} r5={1d,1u} r11={1d,29u} r13={1d,9u} r14={1d,1u} r24={4d,4u} r25={1d,1u} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} 
;;    total ref usage 142{61d,81u,0e} in 53{53 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144

;; Pred edge  ENTRY (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 hpa+0 S4 A32])
        (reg:SI 0 r0 [ hpa ])) integer_fft.c:278 625 {*arm_movsi_vfp}
     (nil))

(insn 3 2 4 2 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 pb+0 S4 A32])
        (reg:SI 1 r1 [ pb ])) integer_fft.c:278 625 {*arm_movsi_vfp}
     (nil))

(insn 4 3 5 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -32 [0xffffffffffffffe0])) [0 n+0 S4 A32])
        (reg:SI 2 r2 [ n ])) integer_fft.c:278 625 {*arm_movsi_vfp}
     (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 (set (reg:SI 3 r3 [144])
        (const_int 0 [0])) integer_fft.c:290 625 {*arm_movsi_vfp}
     (nil))

(insn 9 8 79 2 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 sum+0 S4 A32])
        (reg:SI 3 r3 [144])) integer_fft.c:290 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 79 9 80 2 (set (pc)
        (label_ref 32)) integer_fft.c:291 223 {*arm_jump}
     (nil)
 -> 32)
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%] 

(barrier 80 79 42)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136 137 138 139 140 141 145 146 147 148 149 150 151 152

;; Pred edge  4
(code_label 42 80 12 3 57 "" [1 uses])

(note 12 42 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 (set (reg/f:SI 3 r3 [145])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 pa+0 S4 A32])) integer_fft.c:292 625 {*arm_movsi_vfp}
     (nil))

(insn 14 13 15 3 (set (reg/v:SI 4 r4 [orig:135 a ] [135])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [145]) [0 *pa_3+0 S2 A16]))) integer_fft.c:292 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 15 14 16 3 (set (reg:SI 3 r3 [146])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 pa+0 S4 A32])) integer_fft.c:292 625 {*arm_movsi_vfp}
     (nil))

(insn 16 15 17 3 (set (reg:SI 3 r3 [147])
        (plus:SI (reg:SI 3 r3 [146])
            (const_int 2 [0x2]))) integer_fft.c:292 4 {*arm_addsi3}
     (nil))

(insn 17 16 18 3 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 pa+0 S4 A32])
        (reg:SI 3 r3 [147])) integer_fft.c:292 625 {*arm_movsi_vfp}
     (nil))

(insn 18 17 19 3 (set (reg/f:SI 3 r3 [148])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 pb+0 S4 A32])) integer_fft.c:293 625 {*arm_movsi_vfp}
     (nil))

(insn 19 18 20 3 (set (reg/v:SI 5 r5 [orig:136 b ] [136])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [148]) [0 *pb_1+0 S2 A16]))) integer_fft.c:293 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 20 19 21 3 (set (reg:SI 3 r3 [149])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 pb+0 S4 A32])) integer_fft.c:293 625 {*arm_movsi_vfp}
     (nil))

(insn 21 20 22 3 (set (reg:SI 3 r3 [150])
        (plus:SI (reg:SI 3 r3 [149])
            (const_int 2 [0x2]))) integer_fft.c:293 4 {*arm_addsi3}
     (nil))

(insn 22 21 23 3 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 pb+0 S4 A32])
        (reg:SI 3 r3 [150])) integer_fft.c:293 625 {*arm_movsi_vfp}
     (nil))

(insn 23 22 24 3 (set (reg:SI 3 r3 [orig:137 D.1377 ] [137])
        (sign_extend:SI (reg:HI 4 r4 [orig:135 a ] [135]))) integer_fft.c:294 158 {*arm_extendhisi2_v6}
     (nil))

(insn 24 23 25 3 (set (reg:SI 2 r2 [orig:138 D.1378 ] [138])
        (sign_extend:SI (reg:HI 5 r5 [orig:136 b ] [136]))) integer_fft.c:294 158 {*arm_extendhisi2_v6}
     (nil))

(insn 25 24 26 3 (set (reg:SI 3 r3 [orig:139 D.1379 ] [139])
        (mult:SI (reg:SI 2 r2 [orig:138 D.1378 ] [138])
            (reg:SI 3 r3 [orig:137 D.1377 ] [137]))) integer_fft.c:294 34 {*arm_mulsi3_v6}
     (nil))

(insn 26 25 27 3 (set (reg:SI 3 r3 [orig:140 D.1380 ] [140])
        (ashiftrt:SI (reg:SI 3 r3 [orig:139 D.1379 ] [139])
            (const_int 15 [0xf]))) integer_fft.c:294 119 {*arm_shiftsi3}
     (nil))

(insn 27 26 28 3 (set (reg/v:SI 4 r4 [orig:135 a ] [135])
        (zero_extend:SI (reg:HI 3 r3 [orig:140 D.1380 ] [140]))) integer_fft.c:294 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 28 27 29 3 (set (reg:SI 3 r3 [orig:141 D.1381 ] [141])
        (sign_extend:SI (reg:HI 4 r4 [orig:135 a ] [135]))) integer_fft.c:295 158 {*arm_extendhisi2_v6}
     (nil))

(insn 29 28 30 3 (set (reg:SI 2 r2 [151])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 sum+0 S4 A32])) integer_fft.c:295 625 {*arm_movsi_vfp}
     (nil))

(insn 30 29 31 3 (set (reg:SI 3 r3 [152])
        (plus:SI (reg:SI 2 r2 [151])
            (reg:SI 3 r3 [orig:141 D.1381 ] [141]))) integer_fft.c:295 4 {*arm_addsi3}
     (nil))

(insn 31 30 32 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 sum+0 S4 A32])
        (reg:SI 3 r3 [152])) integer_fft.c:295 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  4 (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 153 154 155 156 157

;; Pred edge  3 (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 32 31 33 4 56 "" [1 uses])

(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 4 (set (reg:SI 3 r3 [154])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -32 [0xffffffffffffffe0])) [0 n+0 S4 A32])) integer_fft.c:291 625 {*arm_movsi_vfp}
     (nil))

(insn 35 34 36 4 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [154])
            (const_int 0 [0]))) integer_fft.c:291 199 {*arm_cmpsi_insn}
     (nil))

(insn 36 35 37 4 (set (reg:SI 3 r3 [155])
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) integer_fft.c:291 213 {*mov_scc}
     (nil))

(insn 37 36 38 4 (set (reg:QI 3 r3 [153])
        (reg:QI 3 r3 [155])) integer_fft.c:291 180 {*arm_movqi_insn}
     (nil))

(insn 38 37 39 4 (set (reg:SI 3 r3 [orig:134 D.1382 ] [134])
        (zero_extend:SI (reg:QI 3 r3 [153]))) integer_fft.c:291 153 {*arm_zero_extendqisi2_v6}
     (nil))

(insn 39 38 40 4 (set (reg:SI 2 r2 [156])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -32 [0xffffffffffffffe0])) [0 n+0 S4 A32])) integer_fft.c:291 625 {*arm_movsi_vfp}
     (nil))

(insn 40 39 41 4 (set (reg:SI 2 r2 [157])
        (plus:SI (reg:SI 2 r2 [156])
            (const_int -1 [0xffffffffffffffff]))) integer_fft.c:291 4 {*arm_addsi3}
     (nil))

(insn 41 40 43 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -32 [0xffffffffffffffe0])) [0 n+0 S4 A32])
        (reg:SI 2 r2 [157])) integer_fft.c:291 625 {*arm_movsi_vfp}
     (nil))

(insn 43 41 44 4 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:134 D.1382 ] [134])
            (const_int 0 [0]))) integer_fft.c:291 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 44 43 45 4 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) integer_fft.c:291 211 {*arm_cond_branch}
     (nil)
 -> 42)
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  3
;; Succ edge  5 (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 158 159

;; Pred edge  4 (fallthru)
(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 5 (set (reg:SI 2 r2 [158])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 sum+0 S4 A32])) integer_fft.c:298 625 {*arm_movsi_vfp}
     (nil))

(insn 47 46 48 5 (set (reg:SI 3 r3 [159])
        (const_int 32767 [0x7fff])) integer_fft.c:298 625 {*arm_movsi_vfp}
     (nil))

(insn 48 47 49 5 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [158])
            (reg:SI 3 r3 [159]))) integer_fft.c:298 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 49 48 50 5 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) integer_fft.c:298 211 {*arm_cond_branch}
     (nil)
 -> 55)
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  6 (fallthru)
;; Succ edge  7

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160

;; Pred edge  5 (fallthru)
(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 6 (set (reg:SI 3 r3 [160])
        (const_int 32767 [0x7fff])) integer_fft.c:299 625 {*arm_movsi_vfp}
     (nil))

(insn 52 51 81 6 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 sum+0 S4 A32])
        (reg:SI 3 r3 [160])) integer_fft.c:299 625 {*arm_movsi_vfp}
     (nil))

(jump_insn 81 52 82 6 (set (pc)
        (label_ref 64)) 223 {*arm_jump}
     (nil)
 -> 64)
;; End of basic block 6 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  9 [100.0%] 

(barrier 82 81 55)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 161 162

;; Pred edge  5
(code_label 55 82 56 7 58 "" [1 uses])

(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 7 (set (reg:SI 2 r2 [161])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 sum+0 S4 A32])) integer_fft.c:300 625 {*arm_movsi_vfp}
     (nil))

(insn 58 57 59 7 (set (reg:SI 3 r3 [162])
        (const_int -32767 [0xffffffffffff8001])) integer_fft.c:300 625 {*arm_movsi_vfp}
     (nil))

(insn 59 58 60 7 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [161])
            (reg:SI 3 r3 [162]))) integer_fft.c:300 199 {*arm_cmpsi_insn}
     (nil))

(jump_insn 60 59 61 7 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) integer_fft.c:300 211 {*arm_cond_branch}
     (nil)
 -> 64)
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  8 (fallthru)
;; Succ edge  9

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 163

;; Pred edge  7 (fallthru)
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 8 (set (reg:SI 3 r3 [163])
        (const_int -32767 [0xffffffffffff8001])) integer_fft.c:301 625 {*arm_movsi_vfp}
     (nil))

(insn 63 62 64 8 (set (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 sum+0 S4 A32])
        (reg:SI 3 r3 [163])) integer_fft.c:301 625 {*arm_movsi_vfp}
     (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  9 (fallthru)

;; Start of basic block ( 8 7 6) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 142 143 164 166

;; Pred edge  8 (fallthru)
;; Pred edge  7
;; Pred edge  6 [100.0%] 
(code_label 64 63 65 9 59 "" [2 uses])

(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 9 (set (reg:SI 3 r3 [164])
        (mem/c/i:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 sum+0 S4 A32])) integer_fft.c:303 625 {*arm_movsi_vfp}
     (nil))

(insn 67 66 68 9 (set (reg:SI 3 r3 [orig:142 D.1388 ] [142])
        (zero_extend:SI (reg:HI 3 r3 [164]))) integer_fft.c:303 148 {*arm_zero_extendhisi2_v6}
     (nil))

(insn 68 67 73 9 (set (reg:SI 3 r3 [166])
        (sign_extend:SI (reg:HI 3 r3 [orig:142 D.1388 ] [142]))) integer_fft.c:303 158 {*arm_extendhisi2_v6}
     (nil))

(insn 73 68 76 9 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:143 <retval> ] [143])) integer_fft.c:340 625 {*arm_movsi_vfp}
     (nil))

(insn 76 73 87 9 (use (reg/i:SI 0 r0)) integer_fft.c:340 -1
     (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 87 76 0 NOTE_INSN_DELETED)

